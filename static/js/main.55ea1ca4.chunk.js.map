{"version":3,"sources":["../maps/svg sync /^/.*/.svg$","../maps/svg/ancmed.svg","../maps/svg/modern.svg","../maps/svg/pure.svg","../maps/svg/standard.svg","diplomacy/utils/strings.js","diplomacy/utils/utils.js","diplomacy/communication/requests.js","diplomacy/communication/responses.js","diplomacy/communication/notifications.js","diplomacy/client/response_managers.js","diplomacy/utils/sorted_dict.js","diplomacy/engine/power.js","diplomacy/engine/message.js","gui/utils/order.js","diplomacy/engine/game.js","diplomacy/client/notification_managers.js","diplomacy/utils/future.js","diplomacy/utils/future_event.js","diplomacy/client/channel.js","diplomacy/client/game_instance_set.js","diplomacy/client/network_game.js","diplomacy/client/request_future_context.js","diplomacy/utils/diplog.js","diplomacy/client/connection.js","gui/components/button.jsx","gui/components/forms.jsx","gui/utils/dipStorage.jsx","gui/forms/connection_form.jsx","gui/components/navigation.jsx","gui/components/page_context.jsx","gui/pages/content_connection.jsx","gui/components/action.jsx","gui/components/tabs.jsx","gui/components/table.jsx","gui/forms/find_form.jsx","gui/forms/join_form.jsx","gui/components/fancyBox.js","gui/forms/select_location_form.jsx","gui/forms/select_via_form.jsx","gui/components/layouts.jsx","gui/utils/order_building.js","gui/forms/power_order_creation_form.jsx","gui/forms/message_form.jsx","gui/components/power_orders.jsx","gui/components/message_view.jsx","gui/utils/power_view.jsx","gui/components/help.jsx","gui/components/tab.jsx","gui/components/power_orders_actions_bar.js","gui/maps/standard/SvgStandardMetadata.js","gui/maps/common/common.js","gui/utils/province.js","gui/utils/map_data.js","gui/maps/common/unit.js","gui/maps/common/hold.js","gui/maps/common/move.js","gui/maps/common/supportMove.js","gui/maps/common/supportHold.js","gui/maps/common/equilateralTriangle.js","gui/maps/common/convoy.js","gui/maps/common/build.js","gui/maps/common/disband.js","gui/maps/standard/SvgStandard.js","gui/maps/ancmed/SvgAncMedMetadata.js","gui/maps/ancmed/SvgAncMed.js","gui/maps/modern/SvgModernMetadata.js","gui/maps/modern/SvgModern.js","gui/maps/pure/SvgPureMetadata.js","gui/maps/pure/SvgPure.js","diplomacy/utils/queue.js","gui/pages/content_game.jsx","gui/utils/saveGameToDisk.js","gui/utils/defconSaveGame.js","gui/components/delete_button.jsx","gui/utils/inline_game_view.jsx","gui/wizards/gameCreation/panelList.js","gui/wizards/gameCreation/mapList.js","gui/wizards/gameCreation/panelChooseMap.js","gui/wizards/gameCreation/panelChoosePlayers.js","gui/wizards/gameCreation/panelChoosePower.js","gui/wizards/gameCreation/panelChooseSettings.js","gui/wizards/gameCreation/gameCreationWizard.js","gui/pages/content_games.jsx","gui/pages/page.jsx","gui/utils/load_game_from_disk.js","index.js"],"names":["map","./ancmed.svg","./modern.svg","./pure.svg","./standard.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","STRINGS","ACTIVE","ADMIN","CANCELED","CHANNEL","COMPLETED","DEMOTE","DUMMY","ERROR","GAME","MASTER_TYPE","MODERATOR","OBSERVER","OBSERVER_TYPE","OK","OMNISCIENT","OMNISCIENT_TYPE","PAUSED","PHASE","PROMOTE","STATE","STATE_HISTORY","SYNCHRONIZE","ALL_GAME_STATUSES","ALL_POWER_NAMES","RULES","PUBLIC_RULES","Dict","UTILS","NB_CONNECTION_ATTEMPTS","ATTEMPT_DELAY_SECONDS","REQUEST_TIMEOUT_SECONDS","randomInteger","from","to","Math","floor","random","createID","Date","getTime","toString","i","createGameID","username","concat","date","d","toLocaleString","getMilliseconds","microsecondsToDate","time","binarySearch","find","array","element","a","b","length","c","insert","splice","push","javascript","arrayIsEmpty","hasArray","clearObject","obj","_i","_keys","arrayToDict","field","dictionary","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","entry","value","err","return","count","extendArrayWithUniqueValues","key","hasOwnProperty","includes","extendTreeValue","path","allowMultipleValues","current","pathLength","parentPathLength","stepName","getTreeValue","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","html","UNICODE_LEFT_ARROW","UNICODE_RIGHT_ARROW","UNICODE_TOP_ARROW","UNICODE_BOTTOM_ARROW","CROSS","UNICODE_SMALL_RIGHT_ARROW","UNICODE_SMALL_LEFT_ARROW","isSelect","tagName","toLowerCase","isInput","isCheckBox","type","isRadioButton","isTextInput","isPasswordInput","REQUESTS","abstract","basic","request_id","name","re_sent","channel","token","game","game_id","game_role","phase","models","sign_in","level","model","password","create_game","n_controls","deadline","registration_password","power_name","state","map_name","rules","delete_account","get_all_possible_orders","get_available_maps","get_playable_powers","join_game","list_games","status","include_protected","for_omniscience","get_games_info","games","logout","set_grade","grade","grade_update","clear_centers","clear_orders","clear_units","delete_game","phase_dependent","get_phase_history","from_phase","to_phase","leave_game","process_game","query_schedule","send_game_message","message","set_dummy_powers","power_names","set_game_state","orders","results","messages","set_game_status","set_orders","set_wait_flag","wait","synchronize","timestamp","vote","save_game","isPhaseDependent","getLevel","create","parameters","definition","request","assign","apply","_Object$keys","parameter","RESPONSES","names","Set","parse","jsonObject","has","isOk","response","isUniqueData","NOTIFICATIONS","levels","account_deleted","cleared_centers","cleared_orders","cleared_units","game_deleted","game_message_received","game_processed","game_phase_update","game_status_update","omniscient_updated","power_orders_flag","power_orders_update","power_vote_updated","power_wait_flag","powers_controllers","vote_count_updated","vote_updated","defaultResponseManager","context","data","RESPONSE_MANAGERS","newGame","removeChannel","deleteGame","phaseData","local","extendPhaseHistory","time_sent","addMessage","setPhaseData","setStatus","isPlayerGame","setOrders","clearOrders","clearUnits","clearCenters","setWait","getRelatedPower","newChannel","handleResponse","handler","defaultComparableKey","SortedDict","dct","keyFn","classCallCheck","this","__real_keys","__keys","__values","__key_fn","put","createClass","realKey","position","index","slice","len","dict","Power","role","controller","order_is_set","isRealTime","centers","homes","units","retreats","influence","size","lastValue","powerState","charAt","isNoCheck","_Object$values","values","_i2","unit","adjust","order","startsWith","power","get","clear","Message","sender","recipient","Order","orderString","isLocal","pieces","split","loc","Boolean","comparablePhase","shortPhaseName","Number","MAX_SAFE_INTEGER","seasonOrder","S","F","W","stepOrder","M","R","A","phaseSeason","phaseYear","parseInt","substring","phaseStep","isNaN","Game","gameData","_nonNullFields","_nullFields","state_history","toDict","order_history","result_history","message_history","_i3","_Object$entries","entries","phaseMessages","sortedPhaseMessages","timestamp_created","observer_level","controlled_powers","daide_port","result","phase_abbr","powers","_i4","_Object$entries2","copy","setState","lastState","_i5","powerName","note","builds","possibleOrders","orderableLocations","ordersTree","orderableLocToTypes","client","contains","isGlobal","isObserverGame","isOmniscientGame","_i6","_Object$keys2","_i7","_Object$keys3","_i8","_Object$keys4","_i9","_Object$keys5","_i10","isControlled","max","lastKey","getPower","hasPower","_i11","_Object$entries3","_i12","_Object$keys6","substr","_i13","_Object$keys7","_i14","_Object$keys8","_i15","_Object$keys9","civil_disorder","_i16","_Object$keys10","dummyPowers","dummyPowerName","setDummy","controllers","timestamps","_i17","_Object$entries4","updateController","pastPhase","pastPhaseIndex","indexOf","keyToRemove","keyFromIndex","remove","controllablePowers","getControllablePowers","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","powerOrders","countOrders","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","serverOrder","all","messageChannels","messagesToShow","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","protagonist","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","read","possible_orders","orderable_locations","createOrdersTree","typeToLocs","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","associatedLocs","_i18","_Object$keys11","possibleLoc","toUpperCase","_i19","_associatedLocs","associatedLoc","orderTypes","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","orderType","occupiedLocations","_i20","_Object$values2","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","buildSites","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","h","getPhaseType","buildCount","_build_sites","min","countControlledPowers","tree","locToTypes","_i21","_Object$values3","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","thirdPiece","lastPiece","NOTIFICATION_MANAGERS","notification","connection","channels","getController","game_id_to_instances","updatePowersControllers","previous_phase_data","current_phase_data","clearVote","phase_data_type","phase_data","add","assertPlayerGame","assertOmniscientGame","handleNotification","objectToNotify","notify","Future","__resolve_fn","__reject_fn","__promise","__done","future","Promise","reject","resolve_fn","exception","reject_fn","FutureEvent","__future","error","setException","setResult","promise","Channel","joinParameters","getSpecial","forcedParameters","localChannelFunction","localResult","send","timeoutID","setTimeout","then","clearTimeout","_req","localJoinGame","GameInstanceSet","gameID","__game_id","__games","old","NetworkGame","serverGameState","notificationCallbacks","notificationName","notificationCallback","_this","_loop","callback","channelMethod","prototype","getAllPossibleOrders","getPhaseHistory","leaveGame","sendGameMessage","noWait","save","getLatestTimestamp","kickPowers","process","querySchedule","start","pause","resume","cancel","draw","addCallback","clearCallbacks","RequestFutureContext","arguments","received_game","getChannel","Diplog","msg","console","warn","log","info","success","Reconnection","games_phases","n_expected_games","n_synchronized_games","reconnection","serverSyncResponse","syncDone","requestsWaitingResponses","lenWaiting","lenBefore","requestsToSend","requestsToSendUpdated","_Object$values6","gis","getGames","_Object$values4","_Object$values5","genSyncCallback","_Object$values7","keep","request_phase","server_phase","_Object$values8","__write_request","isReconnecting","set","ConnectionProcessing","logger","isConnected","attemptIndex","onSocketOpen","bind","onSocketTimeout","tryConnect","isConnecting","event","socket","onmessage","onSocketMessage","onclose","onSocketClose","currentConnectionProcessing","close","isWaiting","WebSocket","getUrl","onopen","__on_error","Connection","hostname","port","useSSL","protocol","closed","onReconnection","onReconnectionError","messageEvent","jsonMessage","JSON","requestID","notification_id","closeEvent","__connect","reconnect","catch","stop","requestContext","writeFuture","onConnected","stringify","onAnyError","Button","_React$Component","props","possibleConstructorReturn","getPrototypeOf","call","onClick","assertThisInitialized","inherits","pickEvent","react_default","createElement","className","color","large","small","disabled","title","React","Component","defaultPropTypes","Forms","component","target","checked","fieldName","update","defineProperty","resetState","preventDefault","onChangeCallback","fieldValues","defaultValue","onReset","button_Button","onSubmit","fn","onChange","htmlFor","currentValue","label","input","htmFor","createLabel","none","components","option","STORAGE","DipStorage","global","window","localStorage","users","showServerFields","load","gamePhase","local_orders","addUserGame","ConnectionForm","initialState","initState","savedState","getConnectionForm","updateServerFieldsView","location","setConnectionshowServerFields","newState","setConnectionHostname","setConnectionPort","setConnectionUsername","createOnChangeCallback","createOnSubmitCallback","createRow","createColLabel","getValue","createSubmit","Navigation","hasNavigation","navigation","afterTitle","index_esm","icon","Person","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","nav","navTitle","navAction","PageContext","createContext","ContentConnection","_this2","page","_arr","connect","authenticate","getAvailableMaps","availableMaps","sort","userGameIndices","getUserGames","getGamesInfo","gamesInfo","updateMyGames","loadGames","Helmet","navigation_Navigation","connection_form_ConnectionForm","scrollTo","contextType","Action","isActive","highlight","defaultProps","Tabs","tabTitle","tabId","action_Action","menu","titles","active","join","tabName","generateTabAction","highlights","children","DefaultWrapper","defaultWrapper","Table","wrapper","header","getHeader","columns","caption","getHeaderLine","getBodyLines","t","localeCompare","column","colIndex","row","rowIndex","wrapped","headerColumn","getBodyRow","FindForm","createSelectOptions","createCheckbox","JoinForm","_ref","getPowerNameID","getDefaultPowerName","getPasswordID","availablePowers","password_required","placeholder","FancyBox","onClose","SelectLocationForm","fancyBox_FancyBox","locations","onSelect","HotKey","require","SelectViaForm","onKeysCoincide","Div","getClassName","Bar","_Div","Row","_Div2","assertLength","expected","given","ProvinceCheck","province","retreatProvince","getRetreated","retreatUnit","presenceProvince","getOccupied","occupiedProvince","unusedPowerName","occupied","getLocationNames","holdToString","moveToString","moveViaToString","supportToString","convoyToString","retreatToString","disbandToString","buildArmyToString","buildFleetToString","ORDER_BUILDER","H","steps","any","V","occupiedByAny","C","retreated","D","present","POSSIBLE_ORDERS","sorting","sortOrderTypes","arr","phaseType","extendOrderBuilding","currentOrderPath","onBuilding","onBuilt","onError","selectedPath","buildOrder","PowerOrderCreationForm","order_type","createOnResetCallback","titleClass","votes","toConsumableArray","orderLetter","createRadio","createReset","createButton","onPass","onVote","onSetWaitFlag","power_order_creation_form_HotKey","letter","onSetOrderType","MessageForm","PowerOrders","orderEntries","display","onRemove","serverCount","MessageView","owner","messagesLines","replace","classNames","line","lineIndex","GETTERS","isEliminated","PowerView","Help","Tab","style","PowerOrdersActionBar","layouts_Bar","onDeleteAll","onUpdate","onProcess","Coordinates","ADR","disl","AEG","ALB","ANK","APU","ARM","BAL","BAR","BEL","BER","BLA","BOH","BOT","BRE","BUD","BUL","BUL/EC","BUL/SC","BUR","CLY","CON","DEN","EAS","EDI","ENG","FIN","GAL","GAS","GOL","GRE","HEL","HOL","ION","IRI","KIE","LON","LVN","LVP","LYO","MAO","MAR","MID","MOS","MUN","NAF","NAO","NAP","NAT","NRG","NTH","NWG","NWY","PAR","PIC","PIE","POR","PRU","ROM","RUH","RUM","SER","SEV","SIL","SKA","SMY","SPA","SPA/NC","SPA/SC","STP","STP/NC","STP/SC","SWE","SWI","SYR","TRI","TUN","TUS","TYN","TYR","TYS","UKR","VEN","VIE","WAL","WAR","WES","YOR","SymbolSizes","Fleet","width","height","Army","Wing","DislodgedFleet","DislodgedArmy","DislodgedWing","FailedOrder","SupplyCenter","BuildUnit","RemoveUnit","WaivedBuild","HoldUnit","SupportHoldUnit","ConvoyTriangle","Stroke","Colors","AUSTRIA","ENGLAND","FRANCE","GERMANY","ITALY","RUSSIA","TURKEY","ARMY","setInfluence","classes","mapData","getProvince","getID","getClickedID","node","parentNode","parseLocation","txt","centerSymbolAroundUnit","coordinates","symbolSizes","isDislodged","symbol","unitKey","_coordinates$loc$key","slicedToArray","unit_x","unit_y","unit_height","unit_width","symbol_height","symbol_width","parseFloat","getUnitCenter","_coordinates$loc$key2","coloredStrokeWidth","ProvinceType","Province","isSupplyCenter","coasts","parent","neighbors","controlType","retreatController","aliases","controlTypeLevels","I","U","setController","controlTypeComparison","compareControlType","__set_controller","provinces","neighborProvinces","coast","identifiers","_id","alias","isCoast","MapData","mapInfo","supplyCenters","supply_centers","loc_type","provinceName","provinceType","loc_abut","setNeighbors","setCoasts","center","__add_unit","__add_retreat","splitUnit","unitType","abbr","Unit","split_unit","unit_type","dislogged_type","loc_x","loc_y","href","x","y","Hold","colors","_centerSymbolAroundUn","_centerSymbolAroundUn2","stroke","Move","src_loc","srcLoc","dest_loc","dstLoc","is_dislodged","_getUnitCenter","_getUnitCenter2","src_loc_x","src_loc_y","_getUnitCenter3","_getUnitCenter4","dest_loc_x","dest_loc_y","delta_x","delta_y","vector_length","sqrt","delta_dec","round","x1","y1","x2","y2","strokeWidth","markerEnd","SupportMove","_getUnitCenter5","_getUnitCenter6","SupportHold","symbol_loc_x","symbol_loc_y","EquilateralTriangle","x_top","y_top","x_right","y_right","x_left","y_left","x_A","y_A","x_B","y_B","x_C","y_C","x_O","y_O","line_AB_a","line_AB_b","line_AC_a","line_AC_b","x_M","y_M","_this$__line_OM","__line_OM","_this$__line_OM2","u","v","_ref2","_this$__line_OM3","_this$__line_OM4","_this$__line_OM5","_this$__line_OM6","_ref3","_ref4","_this$__intersection_","__intersection_with_AB","_this$__intersection_2","p1_x","p1_y","_this$__intersection_3","__intersection_with_AC","_this$__intersection_4","p2_x","p2_y","_this$__intersection_5","__intersection_with_BC","_this$__intersection_6","p3_x","p3_y","distances","d1","d2","d3","output","shift","Convoy","triangle","_triangle$intersectio","intersection","_triangle$intersectio2","src_loc_x_1","src_loc_y_1","_triangle$intersectio3","_triangle$intersectio4","src_loc_x_2","src_loc_y_2","dest_delta_x","dest_delta_y","dest_vector_length","Build","build_loc_x","build_loc_y","Disband","SvgStandard","onHover","orderBuilding","handleClickedID","handleHoverID","builder","stepLength","lengthAfterClick","validLocations","testedPath","checker","possibleLocations","possibleLocation","isACoast","validLocationsNoProvinceName","onSelectLocation","orderBuildingType","moveOrderPath","moveTypes","onSelectVia","onOrderBuilding","onOrderBuilt","getRelatedOrders","extraLocation","possibleNeighbors","neighbor","_ank","_arm","_con","_mos","_sev","_stp","_syr","_ukr","_lvn","_war","_pru","_sil","_ber","_kie","_ruh","_mun","_rum","_bul","_gre","_smy","_alb","_ser","_bud","_gal","_vie","_boh","_tyr","_tri","_fin","_swe","_nwy","_den","_hol","_bel","_swi","_ven","_pie","_tus","_rom","_apu","_nap","_bur","_mar","_gas","_pic","_par","_bre","_spa","_por","_naf","_tun","_lon","_wal","_lvp","_yor","_edi","_cly","unplayable","unplayable_water","_nat","_nrg","_bar","_bot","_bal","denmark_water","_ska","_hel","_nth","_eng","_iri","_mid","_wes","_gol","_tyn","_adr","_ion","_aeg","_eas","constantinople_water","_bla","BriefLabelLayer","CurrentNote","CurrentNote2","CurrentPhase","MouseLayer","current_phase","nb_centers","nb_centers_per_power","couple","renderedUnits","renderedDislodgedUnits","renderedOrders","renderedOrders2","renderedHighestOrders","unit_Unit","tokens","unit_loc","hold_Hold","destLoc","move_Move","supportMove_SupportMove","supportHold_SupportHold","convoy_Convoy","build_Build","disband_Disband","clicked","clickedID","getNeighbors","neighborProvince","neighborID","isWater","showAbbreviations","colorRendering","preserveAspectRatio","viewBox","xmlns","overflow","gradientUnits","offset","stopColor","stopOpacity","fill","points","transform","opacity","cx","cy","r","fillOpacity","strokeDasharray","rx","markerHeight","markerUnits","markerWidth","orient","refX","refY","patternUnits","onMouseOver","ALE","ANT","ARA","ATH","AUS","BAY","BIT","BYZ","CAP","CAR","CHE","CIL","CIR","COR","CRE","CYP","CYR","DAC","DAL","DAM","EGY","EPI","ETR","GAU","GOP","GOS","GOT","IBE","ILL","ISA","JER","LEP","LIB","LIG","LUS","MAC","MAS","MAU","MEM","MES","MIL","MIN","NAB","NEA","NUM","PET","PHA","PUN","RAV","REE","RHA","SAD","SAG","SAH","SAM","SIC","SID","SIN","SIP","TAR","THA","THB","TYE","VIN","ROME","CARTHAGE","PERSIA","GREECE","EGYPT","SvgAncMed","_ale","_ant","_ara","_ath","_aus","_bay","_bit","_byz","_cap","_car","_che","_cil","_cir","_cor","_cre","_cyp","_cyr","_dac","_dal","_dam","_egy","_epi","_etr","_gau","_gop","_gos","_got","_ibe","_ill","_isa","_jer","_lep","_lib","_lig","_lus","_mac","_mas","_mau","_mem","_mes","_mil","_min","_nab","_nea","_num","_pet","_pha","_pun","_rav","_ree","_rha","_sag","_sah","_sad","_sam","_sic","_sid","_sin","_sip","_tar","_tha","_thb","_tye","_vin","water","imageRendering","shapeRendering","textRendering","patternTransform","fillRule","visibility","ADA","ADL","ALG","ALS","ANA","ARC","ASW","AUV","AZE","BHM","BIE","BIS","BOR","BOS","BRI","BRN","CAI","CAS","CAU","CRO","CRP","CZE","DON","EBS","EME","ESA","EST","FRA","GDA","GEO","GIB","GOB","GOR","HAM","HUN","ICE","IRE","IRK","IRN","IRN/NC","IRN/SC","ISR","IST","IZM","JOR","KAZ","KHA","KRA","LAP","LAT","LBN","LIT","LIV","MAD","MAL","MOL","MON","MOR","MUR","NAV","ODE","PER","POD","RED","ROS","SAO","SAU","SAX","SIB","SLK","SOG","SVE","URA","VOL","WBS","WHI","WME","WSA","BRITAIN","POLAND","SPAIN","UKRAINE","SvgModern","_ada","_alg","_als","_ana","_adl","_arc","_asw","_auv","_aze","_bhm","_bie","_bis","_bor","_bos","_bri","_brn","_cai","_cas","_cau","_crp","_cro","_cze","_don","_ebs","_eme","_esa","_est","_fra","_gda","_geo","_gib","_gob","_gor","_ham","_hun","_ice","_ire","_irk","_irn","_isr","_ist","_izm","_jor","_kaz","_kha","_kra","_lap","_lat","_lbn","_lit","_lpl","_lyo","_mad","_mal","_mat","_mol","_mon","_mor","_mur","_nav","_nwg","_ode","_per","_pod","_red","_ros","_sat","_sau","_sax","_sib","_slk","_sog","_svl","_ura","_vol","_wbs","_wme","_wsa","_whi","SvgPure","FullLabelLayer","fontFamily","fontSize","Queue","queue","append","consume","__next_value","valueConsumer","recursiveConsumer","_this3","TABLE_POWER_VIEW","PRETTY_ROLES","_PRETTY_ROLES","MAP_COMPONENTS","ancmed","standard","modern","pure","getMapComponent","mapName","rootMap","ContentGame","savedOrders","getUserGameOrders","schedule_timeout_id","tabMain","tabPastMessages","tabCurrentMessages","messageHighlights","historyPhaseIndex","historyShowOrders","historyCurrentLoc","historyCurrentOrders","orderBuildingPath","selectedDefconLevel","defconComment","defconLabels","clearOrderBuildingPath","displayFirstPastPhase","displayLastPastPhase","displayLocationOrders","getMapInfo","notifiedGamePhaseUpdated","notifiedLocalStateChange","notifiedNetworkGame","notifiedNewGameMessage","notifiedPowersControllers","onChangeCurrentPower","onChangeMainTab","onChangeOrderType","onChangePastPhase","onChangePastPhaseIndex","onChangeShowPastOrders","onChangeShowAbbreviations","onChangeTabCurrentMessages","onChangeTabPastMessages","onClickMessage","onDecrementPastPhase","onIncrementPastPhase","onProcessGame","onRemoveAllCurrentPowerOrders","onRemoveOrder","onSetEmptyOrdersSet","reloadServerOrders","renderOrders","sendMessage","setSelectedLocation","setSelectedVia","setWaitFlag","updateDeadlineTimer","esm_get","orderPath","getPage","moveType","_this4","dialog","select_location_form_SelectLocationForm","_this5","select_via_form_SelectViaForm","clearInterval","engine","deadline_timer","clearScheduleTimeout","networkGameIsDisplayed","forceUpdate","networkGame","_this6","dataSchedule","schedule","server_current","current_time","server_remaining","time_added","delay","time_unit","setInterval","getName","_this7","reloadDeadlineTimer","_this8","disconnectGame","_this9","allPossibleOrders","setPossibleOrders","__store_orders","_this10","reloadPowerServerOrders","_this11","_this12","collector","callbacksBound","addOnClearedCenters","addOnClearedOrders","addOnClearedUnits","addOnPowerOrdersUpdate","addOnPowerOrdersFlag","addOnPowersControllers","addOnGameMessageReceived","addOnGameProcessed","addOnGamePhaseUpdate","addOnGameStatusUpdate","addOnOmniscientUpdated","addOnPowerVoteUpdated","addOnPowerWaitFlag","addOnVoteCountUpdated","addOnVoteUpdated","markAllMessagesRead","consumeAsync","tab","body","getServerOrders","serverPowerOrders","localPowerOrders","localOrder","clearUserGameOrders","powerOrdersList","addUserGameOrders","serverOrders","allOrders","__get_orders","_this13","currentPowerName","getCurrentPowerName","_this14","orderEntry","same","_this15","pathToSave","form","decision","_this16","stack","waitFlag","_this17","newPhaseIndex","__change_past_phase","increment","selectObject","document","getElementById","newIndex","selectedIndex","options","getServerWaitFlags","render","power_orders_PowerOrders","phaseName","_this18","getMessageChannels","tabNames","currentTabId","tabs_Tabs","tab_Tab","message_view_MessageView","class","labels","defcon","comment","_this19","unreadMarked","scrollchor_default","message_form_MessageForm","gameEngine","showOrders","Map","rawOrders","orderObject","getOrderBuilding","initialEngine","pastPhases","phaseIndex","displayed","cloneAt","toDisplay","_this$__get_engine_to","__get_engine_to_display","orderResult","powerNames","orderView","__form_phases","resultsToParse","getOrderResult","layouts_Row","renderMapForResults","content_game_HotKey","_this$__get_engine_to2","renderMapForMessages","renderCurrentMessages","renderPastMessages","currentTabOrderCreation","orderedPowers","pn","renderMapForCurrent","power_orders_actions_bar_PowerOrdersActionBar","table_Table","wrap","_this20","gameTitle","help_Help","loadGameFromDisk","savedData","domLink","setAttribute","encodeURIComponent","appendChild","click","removeChild","exc","saveDefconLabels","bindCallbacks","tabTitles","hasTabPhaseHistory","hasTabCurrentPhase","mainTab","currentPower","orderTypeToLocs","allowedPowerOrderTypes","getOrderTypeToLocs","getBuildsCount","navAfterTitle","power_order_creation_form_PowerOrderCreationForm","Helmet_default","renderTabResults","renderTabMessages","renderTabCurrentPhase","onkeydown","cancelBubble","stopPropagation","prettyRole","remainingTime","DeleteButton","step","confirmTitle","waitingTitle","InlineGameView","maps","joinGame","showGame","formData","addToMyGames","content_game_ContentGame","join_form_JoinForm","buttons","hasMyGame","removeFromMyGames","delete_button_DeleteButton","removeGame","n_players","elements","levelName","rule","getJoinUI","getActionButtons","dateString","toLocaleDateString","toLocaleTimeString","Panels","CHOOSE_MAP","CHOOSE_PLAYERS","CHOOSE_POWER","CHOOSE_SETTINGS","VariantInfo","variantName","variantTitle","MapInfo","mapTitle","variants","variant","Maps","PanelChooseMap","mapImg","params","svgName","mapEntries","dropDownID","defaultVariant","onUpdateParams","forward","data-target","aria-controls","views","_loop2","variantInfo","src","alt","PanelChoosePlayers","nbPowers","choice","backward","ArrowLeft","PanelChoosePower","DEADLINES","PanelChooseSettings","onCheckNoPress","onSelectDeadline","onSetRegistrationPassword","onSetGameID","no_press","GameCreationWizard","panel","updateParams","panelID","onCancel","goToPanel","panelChooseMap_PanelChooseMap","panelChoosePlayers_PanelChoosePlayers","panelChoosePower_PanelChoosePower","panelChooseSettings_PanelChooseSettings","renderPanel","TABLE_LOCAL_GAMES","rights","players","actions","ContentGames","changeTab","onFind","onCreate","wrapGameData","listGames","addGamesFound","createGame","tabIndex","gameCreationWizard_GameCreationWizard","myGames","gamesFound","gameCreationButton","find_form_FindForm","Page","_post_remove","_add_to_my_games","_remove_from_my_games","_remove_from_games","__disconnect","confirmAlert","customUI","wrapMessage","printMessages","content_games_ContentGames","getMyGames","getGamesFound","onLoad","$","attr","trigger","change","file","files","match","reader","FileReader","onload","gameObject","phases","savedPhase","gameState","phaseOrders","phaseResults","latestPhase","latestGameState","latestPhaseOrders","latestPhaseResults","latestPhaseMessages","readAsText","gamesToAdd","gameToAdd","__sort_games","leave","getGame","clearAllCallbacks","removeUserGame","successMessage","infoMessage","errorMessage","Provider","contentName","defaultPage","content_connection_ContentConnection","ReactDOM","page_Page"],"mappings":"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","file":"static/js/main.55ea1ca4.chunk.js","sourcesContent":["var map = {\n\t\"./ancmed.svg\": 187,\n\t\"./modern.svg\": 188,\n\t\"./pure.svg\": 189,\n\t\"./standard.svg\": 190\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 186;","module.exports = __webpack_public_path__ + \"static/media/ancmed.34cd4139.svg\";","module.exports = __webpack_public_path__ + \"static/media/modern.fbebe33c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pure.2b44afcd.svg\";","module.exports = __webpack_public_path__ + \"static/media/standard.79c1ccc8.svg\";","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n/** Strings. **/\r\nexport const STRINGS = {\r\n    ACTIVE: 'active',\r\n    ADMIN: 'admin',\r\n    CANCELED: 'canceled',\r\n    CHANNEL: 'channel',\r\n    COMPLETED: 'completed',\r\n    DEMOTE: 'demote',\r\n    DUMMY: 'dummy',\r\n    ERROR: 'error',\r\n    GAME: 'game',\r\n    MASTER_TYPE: 'master_type',\r\n    MODERATOR: 'moderator',\r\n    OBSERVER: 'observer',\r\n    OBSERVER_TYPE: 'observer_type',\r\n    OK: 'ok',\r\n    OMNISCIENT: 'omniscient',\r\n    OMNISCIENT_TYPE: 'omniscient_type',\r\n    PAUSED: 'paused',\r\n    PHASE: 'phase',\r\n    PROMOTE: 'promote',\r\n    STATE: 'state',\r\n    STATE_HISTORY: 'state_history',\r\n    SYNCHRONIZE: 'synchronize',\r\n    ALL_GAME_STATUSES: ['forming', 'active', 'paused', 'completed', 'canceled'],\r\n    ALL_POWER_NAMES: ['AUSTRIA', 'ENGLAND', 'FRANCE', 'GERMANY', 'ITALY', 'RUSSIA', 'TURKEY'],\r\n    RULES: [\r\n        'ALWAYS_WAIT',\r\n        'BUILD_ANY',\r\n        'CD_DUMMIES',\r\n        'CIVIL_DISORDER',\r\n        'DIFFERENT_ADJUDICATION',\r\n        'DONT_SKIP_PHASES',\r\n        'HOLD_WIN',\r\n        'IGNORE_ERRORS',\r\n        'MULTIPLE_POWERS_PER_PLAYER',\r\n        'NO_CHECK',\r\n        'NO_DEADLINE',\r\n        'NO_DIAS',\r\n        'NO_OBSERVATIONS',\r\n        'NO_PRESS',\r\n        'POWER_CHOICE',\r\n        'PROPOSE_DIAS',\r\n        'PUBLIC_PRESS',\r\n        'REAL_TIME',\r\n        'SHARED_VICTORY',\r\n        'SOLITAIRE',\r\n        'START_MASTER',\r\n    ],\r\n    PUBLIC_RULES: [\r\n        'ALWAYS_WAIT',\r\n        'BUILD_ANY',\r\n        'CD_DUMMIES',\r\n        'CIVIL_DISORDER',\r\n        'DONT_SKIP_PHASES',\r\n        'HOLD_WIN',\r\n        'IGNORE_ERRORS',\r\n        'MULTIPLE_POWERS_PER_PLAYER',\r\n        'NO_DEADLINE',\r\n        'NO_DIAS',\r\n        'NO_OBSERVATIONS',\r\n        'NO_PRESS',\r\n        'PROPOSE_DIAS',\r\n        'PUBLIC_PRESS',\r\n        'REAL_TIME',\r\n        'SHARED_VICTORY',\r\n        'SOLITAIRE',\r\n        'START_MASTER',\r\n    ]\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n/** Utils. **/\r\n\r\nclass Dict {\r\n}\r\n\r\nexport const UTILS = {\r\n    NB_CONNECTION_ATTEMPTS: 12,\r\n    ATTEMPT_DELAY_SECONDS: 5,\r\n    REQUEST_TIMEOUT_SECONDS: 30,\r\n\r\n    /** Return a random integer in interval [from, to). **/\r\n    randomInteger: function (from, to) {\r\n        return Math.floor(Math.random() * (to - from) + from);\r\n    },\r\n\r\n    /** Create an ID string using current time + 5 random integers each with 10 digits. **/\r\n    createID: function () {\r\n        let id = new Date().getTime().toString(10);\r\n        for (let i = 0; i < 5; ++i)\r\n            id += UTILS.randomInteger(1e9, 1e10);\r\n        return id;\r\n    },\r\n\r\n    createGameID: function (username) {\r\n        return `${username}_${new Date().getTime().toString(10)}`;\r\n    },\r\n\r\n    date: function () {\r\n        const d = new Date();\r\n        return d.toLocaleString() + '.' + d.getMilliseconds();\r\n    },\r\n\r\n    microsecondsToDate: function (time) {\r\n        return new Date(Math.floor(time / 1000));\r\n    },\r\n\r\n    binarySearch: {\r\n        find: function (array, element) {\r\n            let a = 0;\r\n            let b = array.length - 1;\r\n            while (a <= b) {\r\n                const c = Math.floor((a + b) / 2);\r\n                if (array[c] === element)\r\n                    return c;\r\n                if (array[c] < element)\r\n                    a = c + 1;\r\n                else\r\n                    b = c - 1;\r\n            }\r\n            return -1;\r\n        },\r\n        insert: function (array, element) {\r\n            let a = 0;\r\n            let b = array.length - 1;\r\n            while (a <= b) {\r\n                const c = Math.floor((a + b) / 2);\r\n                if (array[c] === element)\r\n                    return c;\r\n                if (array[c] < element)\r\n                    a = c + 1;\r\n                else\r\n                    b = c - 1;\r\n            }\r\n            // If we go out of loop, then array[b] < element, so we must insert element at position b + 1.\r\n            if (b < array.length - 1)\r\n                array.splice(b + 1, 0, element);\r\n            else\r\n                array.push(element);\r\n            return b + 1;\r\n        }\r\n    },\r\n\r\n    javascript: {\r\n\r\n        arrayIsEmpty: function (array) {\r\n            return !(array && array.length);\r\n        },\r\n\r\n        hasArray: function (array) {\r\n            return array && array.length;\r\n        },\r\n\r\n        clearObject: function (obj) {\r\n            const keys = Object.keys(obj);\r\n            for (let key of keys)\r\n                delete obj[key];\r\n        },\r\n\r\n        /** Create a dictionary from given array, using array elements as dictionary values\r\n         * and array elements's `field` values (element[field]) as dictionary keys. **/\r\n        arrayToDict: function (array, field) {\r\n            const dictionary = {};\r\n            for (let entry of array)\r\n                dictionary[entry[field]] = entry;\r\n            return dictionary;\r\n        },\r\n\r\n        count(obj) {\r\n            return Object.keys(obj).length;\r\n        },\r\n\r\n        extendArrayWithUniqueValues(obj, key, value) {\r\n            if (!obj.hasOwnProperty(key))\r\n                obj[key] = [value];\r\n            else if (!obj[key].includes(value))\r\n                obj[key].push(value);\r\n        },\r\n\r\n        extendTreeValue: function (obj, path, value, allowMultipleValues) {\r\n            let current = obj;\r\n            const pathLength = path.length;\r\n            const parentPathLength = pathLength - 1;\r\n            for (let i = 0; i < parentPathLength; ++i) {\r\n                const stepName = path[i];\r\n                if (!current.hasOwnProperty(stepName))\r\n                    current[stepName] = new Dict();\r\n                current = current[stepName];\r\n            }\r\n            const stepName = path[pathLength - 1];\r\n            if (!current.hasOwnProperty(stepName))\r\n                current[stepName] = [];\r\n            if (allowMultipleValues || !current[stepName].includes(value))\r\n                current[stepName].push(value);\r\n        },\r\n\r\n        getTreeValue: function (obj, path) {\r\n            let current = obj;\r\n            for (let stepName of path) {\r\n                if (!current.hasOwnProperty(stepName))\r\n                    return null;\r\n                current = current[stepName];\r\n            }\r\n            if (current instanceof Dict)\r\n                return Object.keys(current);\r\n            return current;\r\n        }\r\n    },\r\n\r\n    html: {\r\n\r\n        // Source: https://www.w3schools.com/charsets/ref_utf_geometric.asp\r\n        UNICODE_LEFT_ARROW: '\\u25C0',\r\n        UNICODE_RIGHT_ARROW: '\\u25B6',\r\n        UNICODE_TOP_ARROW: '\\u25BC',\r\n        UNICODE_BOTTOM_ARROW: '\\u25B2',\r\n        CROSS: '\\u00D7',\r\n        UNICODE_SMALL_RIGHT_ARROW: '\\u2192',\r\n        UNICODE_SMALL_LEFT_ARROW: '\\u2190',\r\n\r\n        isSelect: function (element) {\r\n            return element.tagName.toLowerCase() === 'select';\r\n        },\r\n\r\n        isInput: function (element) {\r\n            return element.tagName.toLowerCase() === 'input';\r\n        },\r\n\r\n        isCheckBox: function (element) {\r\n            return UTILS.html.isInput(element) && element.type === 'checkbox';\r\n        },\r\n\r\n        isRadioButton: function (element) {\r\n            return UTILS.html.isInput(element) && element.type === 'radio';\r\n        },\r\n\r\n        isTextInput: function (element) {\r\n            return UTILS.html.isInput(element) && element.type === 'text';\r\n        },\r\n\r\n        isPasswordInput: function (element) {\r\n            return UTILS.html.isInput(element) && element.type === 'password';\r\n        }\r\n\r\n    }\r\n\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {STRINGS} from \"../utils/strings\";\r\nimport {UTILS} from \"../utils/utils\";\r\n\r\n/** Requests. **/\r\nexport const REQUESTS = {\r\n    /** Abstract request models, mapping base request field names with default values.\r\n     * Every request has at least basic fields.\r\n     * Every channel request has at least basic and channel fields.\r\n     * Every game request has at least basic, channel and game fields. **/\r\n    abstract: {\r\n        basic: {request_id: null, name: null, re_sent: false},\r\n        channel: {token: null},\r\n        game: {game_id: null, game_role: null, phase: null},\r\n    },\r\n\r\n    /** Request models. A request model is defined with:\r\n     * - request level: either null, 'channel' or 'game'\r\n     * - request model itself: a dictionary mapping each request field name with a default value.\r\n     * - request phase dependent (optional, for game requests): boolean (default, true)\r\n     * **/\r\n    models: {\r\n        sign_in: {level: null, model: {username: null, password: null}},\r\n        create_game: {\r\n            level: STRINGS.CHANNEL,\r\n            model: {\r\n                game_id: null, n_controls: null, deadline: 300, registration_password: null,\r\n                power_name: null, state: null, map_name: 'standard', rules: null\r\n            }\r\n        },\r\n        delete_account: {level: STRINGS.CHANNEL, model: {username: null}},\r\n        get_all_possible_orders: {level: STRINGS.GAME, model: {}},\r\n        get_available_maps: {level: STRINGS.CHANNEL, model: {}},\r\n        get_playable_powers: {level: STRINGS.CHANNEL, model: {game_id: null}},\r\n        join_game: {level: STRINGS.CHANNEL, model: {game_id: null, power_name: null, registration_password: null}},\r\n        list_games: {\r\n            level: STRINGS.CHANNEL,\r\n            model: {game_id: null, status: null, map_name: null, include_protected: true, for_omniscience: false}\r\n        },\r\n        get_games_info: {level: STRINGS.CHANNEL, model: {games: null}},\r\n        logout: {level: STRINGS.CHANNEL, model: {}},\r\n        set_grade: {level: STRINGS.CHANNEL, model: {grade: null, grade_update: null, username: null, game_id: null}},\r\n        clear_centers: {level: STRINGS.GAME, model: {power_name: null}},\r\n        clear_orders: {level: STRINGS.GAME, model: {power_name: null}},\r\n        clear_units: {level: STRINGS.GAME, model: {power_name: null}},\r\n        delete_game: {level: STRINGS.GAME, phase_dependent: false, model: {}},\r\n        get_phase_history: {\r\n            level: STRINGS.GAME,\r\n            phase_dependent: false,\r\n            model: {from_phase: null, to_phase: null}\r\n        },\r\n        leave_game: {level: STRINGS.GAME, model: {}},\r\n        process_game: {level: STRINGS.GAME, model: {}},\r\n        query_schedule: {level: STRINGS.GAME, model: {}},\r\n        send_game_message: {level: STRINGS.GAME, model: {message: null}},\r\n        set_dummy_powers: {level: STRINGS.GAME, model: {username: null, power_names: null}},\r\n        set_game_state: {level: STRINGS.GAME, model: {state: null, orders: null, results: null, messages: null}},\r\n        set_game_status: {level: STRINGS.GAME, model: {status: null}},\r\n        set_orders: {level: STRINGS.GAME, model: {power_name: null, orders: null}},\r\n        set_wait_flag: {level: STRINGS.GAME, model: {power_name: null, wait: null}},\r\n        synchronize: {level: STRINGS.GAME, phase_dependent: false, model: {timestamp: null}},\r\n        vote: {level: STRINGS.GAME, model: {vote: null}},\r\n        save_game: {level: STRINGS.GAME, model: {}},\r\n    },\r\n\r\n    isPhaseDependent: function (name) {\r\n        if (!REQUESTS.models.hasOwnProperty(name))\r\n            throw new Error('Unknown request name ' + name);\r\n        const model = REQUESTS.models[name];\r\n        return (model.level === STRINGS.GAME && (!model.hasOwnProperty('phase_dependent') || model.phase_dependent));\r\n    },\r\n\r\n    /** Return request level for given request name. Either null, 'channel' or 'game'. **/\r\n    getLevel: function (name) {\r\n        if (!REQUESTS.models.hasOwnProperty(name))\r\n            throw new Error('Unknown request name ' + name);\r\n        return REQUESTS.models[name].level;\r\n    },\r\n\r\n    /** Create a request object for given request name with given request field values.\r\n     * `parameters` is a dictionary mapping some request fields with values.\r\n     * Parameters may not contain values for optional request fields. See Python module\r\n     * diplomacy.communication.requests about requests definitions, required and optional fields.\r\n     * **/\r\n    create: function (name, parameters) {\r\n        if (!REQUESTS.models.hasOwnProperty(name))\r\n            throw new Error('Unknown request name ' + name);\r\n        let models = null;\r\n        const definition = REQUESTS.models[name];\r\n        if (definition.level === STRINGS.GAME)\r\n            models = [{}, definition.model, REQUESTS.abstract.game, REQUESTS.abstract.channel];\r\n        else if (definition.level === STRINGS.CHANNEL)\r\n            models = [{}, definition.model, REQUESTS.abstract.channel];\r\n        else\r\n            models = [{}, definition.model];\r\n        models.push(REQUESTS.abstract.basic);\r\n        models.push({name: name});\r\n        const request = Object.assign.apply(null, models);\r\n        if (parameters) for (let parameter of Object.keys(parameters)) if (request.hasOwnProperty(parameter))\r\n            request[parameter] = parameters[parameter];\r\n        if (!request.request_id)\r\n            request.request_id = UTILS.createID();\r\n        return request;\r\n    },\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {STRINGS} from \"../utils/strings\";\r\n\r\n/** Responses. **/\r\nexport const RESPONSES = {\r\n    names: new Set([\r\n        'error', 'ok', 'data_game_phase', 'data_token', 'data_maps', 'data_power_names', 'data_games',\r\n        'data_possible_orders', 'data_game_info', 'data_time_stamp', 'data_game_phases', 'data_game',\r\n        'data_game_schedule', 'data_saved_game'\r\n    ]),\r\n    parse: function (jsonObject) {\r\n        if (!jsonObject.hasOwnProperty('name'))\r\n            throw new Error('No name field in expected response object');\r\n        if (!RESPONSES.names.has(jsonObject.name))\r\n            throw new Error('Invalid response name ' + jsonObject.name);\r\n        if (jsonObject.name === STRINGS.ERROR)\r\n            throw new Error(jsonObject.name + ': ' + jsonObject.message);\r\n        return jsonObject;\r\n    },\r\n    isOk: function (response) {\r\n        return response.name === STRINGS.OK;\r\n    },\r\n    isUniqueData: function (response) {\r\n        // Expected only 3 fields: name, request_id, data.\r\n        return (response.hasOwnProperty('data') && Object.keys(response).length === 3);\r\n    }\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {STRINGS} from \"../utils/strings\";\r\n\r\n/** Notifications. **/\r\nexport const NOTIFICATIONS = {\r\n    levels: {\r\n        // Notification name to notification level ('channel' or 'game').\r\n        account_deleted: STRINGS.CHANNEL,\r\n        cleared_centers: STRINGS.GAME,\r\n        cleared_orders: STRINGS.GAME,\r\n        cleared_units: STRINGS.GAME,\r\n        game_deleted: STRINGS.GAME,\r\n        game_message_received: STRINGS.GAME,\r\n        game_processed: STRINGS.GAME,\r\n        game_phase_update: STRINGS.GAME,\r\n        game_status_update: STRINGS.GAME,\r\n        omniscient_updated: STRINGS.GAME,\r\n        power_orders_flag: STRINGS.GAME,\r\n        power_orders_update: STRINGS.GAME,\r\n        power_vote_updated: STRINGS.GAME,\r\n        power_wait_flag: STRINGS.GAME,\r\n        powers_controllers: STRINGS.GAME,\r\n        vote_count_updated: STRINGS.GAME,\r\n        vote_updated: STRINGS.GAME,\r\n    },\r\n    parse: function (jsonObject) {\r\n        if (!jsonObject.hasOwnProperty('name'))\r\n            throw new Error('No name field in expected notification object.');\r\n        if (!jsonObject.hasOwnProperty('token'))\r\n            throw new Error('No token field in expected notification object.');\r\n        if (!NOTIFICATIONS.levels.hasOwnProperty(jsonObject.name))\r\n            throw new Error('Invalid notification name ' + jsonObject.name);\r\n        if (NOTIFICATIONS.levels[jsonObject.name] === STRINGS.GAME) {\r\n            if (!jsonObject.hasOwnProperty('game_id'))\r\n                throw new Error('No game_id field in expected game notification object.');\r\n            if (!jsonObject.hasOwnProperty('game_role'))\r\n                throw new Error('No game_role field in expected game notification object.');\r\n        }\r\n        return jsonObject;\r\n    }\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n/*eslint no-unused-vars: [\"error\", { \"args\": \"none\" }]*/\r\nimport {RESPONSES} from \"../communication/responses\";\r\n\r\n/** Default response manager. **/\r\nfunction defaultResponseManager(context, response) {\r\n    if (RESPONSES.isOk(response))\r\n        return null;\r\n    if (RESPONSES.isUniqueData(response))\r\n        return response.data;\r\n    return response;\r\n}\r\n\r\n/** Response managers. **/\r\nexport const RESPONSE_MANAGERS = {\r\n    get_all_possible_orders: defaultResponseManager,\r\n    get_available_maps: defaultResponseManager,\r\n    get_playable_powers: defaultResponseManager,\r\n    list_games: defaultResponseManager,\r\n    get_games_info: defaultResponseManager,\r\n    process_game: defaultResponseManager,\r\n    query_schedule: defaultResponseManager,\r\n    save_game: defaultResponseManager,\r\n    set_dummy_powers: defaultResponseManager,\r\n    set_grade: defaultResponseManager,\r\n    synchronize: defaultResponseManager,\r\n    create_game: function (context, response) {\r\n        return context.newGame(response.data);\r\n    },\r\n    delete_account: function (context, response) {\r\n        context.removeChannel();\r\n    },\r\n    delete_game: function (context, response) {\r\n        context.deleteGame();\r\n    },\r\n    get_phase_history: function (context, response) {\r\n        for (let phaseData of response.data) {\r\n            context.game.local.extendPhaseHistory(phaseData);\r\n        }\r\n        return response.data;\r\n    },\r\n    join_game: function (context, response) {\r\n        return context.newGame(response.data);\r\n    },\r\n    leave_game: function (context, response) {\r\n        context.deleteGame();\r\n    },\r\n    logout: function (context, response) {\r\n        context.removeChannel();\r\n    },\r\n    send_game_message: function (context, response) {\r\n        const message = context.request.message;\r\n        message.time_sent = response.data;\r\n        context.game.local.addMessage(message);\r\n    },\r\n    set_game_state: function (context, response) {\r\n        context.game.local.setPhaseData({\r\n            name: context.request.state.name,\r\n            state: context.request.state,\r\n            orders: context.request.orders,\r\n            messages: context.request.messages,\r\n            results: context.request.results\r\n        });\r\n    },\r\n    set_game_status: function (context, response) {\r\n        context.game.local.setStatus(context.request.status);\r\n    },\r\n    set_orders: function (context, response) {\r\n        const orders = context.request.orders;\r\n        if (context.game.local.isPlayerGame(context.request.game_role))\r\n            context.game.local.setOrders(context.request.game_role, orders);\r\n        else\r\n            context.game.local.setOrders(context.request.power_name, orders);\r\n    },\r\n    clear_orders: function (context, response) {\r\n        context.game.local.clearOrders(context.request.power_name);\r\n    },\r\n    clear_units: function (context, response) {\r\n        context.game.local.clearUnits(context.request.power_name);\r\n    },\r\n    clear_centers: function (context, response) {\r\n        context.game.local.clearCenters(context.request.power_name);\r\n    },\r\n    set_wait_flag: function (context, response) {\r\n        const wait = context.request.wait;\r\n        if (context.game.local.isPlayerGame(context.request.game_role))\r\n            context.game.local.setWait(context.request.game_role, wait);\r\n        else\r\n            context.game.local.setWait(context.request.power_name, wait);\r\n    },\r\n    vote: function (context, response) {\r\n        context.game.local.getRelatedPower().vote = context.request.vote;\r\n    },\r\n    sign_in: function (context, response) {\r\n        return context.newChannel(context.request.username, response.data);\r\n    },\r\n    handleResponse: function (context, response) {\r\n        if (!RESPONSE_MANAGERS.hasOwnProperty(context.request.name))\r\n            throw new Error('No response handler available for request ' + context.request.name);\r\n        const handler = RESPONSE_MANAGERS[context.request.name];\r\n        return handler(context, response);\r\n    }\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {UTILS} from \"./utils\";\r\n\r\nfunction defaultComparableKey(key) {\r\n    return key;\r\n}\r\n\r\nexport class SortedDict {\r\n    constructor(dct, keyFn) {\r\n        this.__real_keys = [];\r\n        this.__keys = [];\r\n        this.__values = [];\r\n        this.__key_fn = keyFn || defaultComparableKey;\r\n        if (dct) for (let key of Object.keys(dct))\r\n            this.put(key, dct[key]);\r\n    }\r\n\r\n    clear() {\r\n        this.__real_keys = [];\r\n        this.__keys = [];\r\n        this.__values = [];\r\n    }\r\n\r\n    put(key, value) {\r\n        const realKey = key;\r\n        key = this.__key_fn(key);\r\n        const position = UTILS.binarySearch.insert(this.__keys, key);\r\n        if (position === this.__values.length) {\r\n            this.__values.push(value);\r\n            this.__real_keys.push(realKey);\r\n        } else if (this.__values[position] !== value) {\r\n            this.__values.splice(position, 0, value);\r\n            this.__real_keys.splice(position, 0, realKey);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    remove(key) {\r\n        key = this.__key_fn(key);\r\n        const position = UTILS.binarySearch.find(this.__keys, key);\r\n        if (position < 0)\r\n            return null;\r\n        this.__keys.splice(position, 1);\r\n        this.__real_keys.splice(position, 1);\r\n        return this.__values.splice(position, 1)[0];\r\n    }\r\n\r\n    contains(key) {\r\n        return UTILS.binarySearch.find(this.__keys, this.__key_fn(key)) >= 0;\r\n    }\r\n\r\n    get(key) {\r\n        const position = UTILS.binarySearch.find(this.__keys, this.__key_fn(key));\r\n        if (position < 0)\r\n            return null;\r\n        return this.__values[position];\r\n    }\r\n\r\n    indexOf(key) {\r\n        return UTILS.binarySearch.find(this.__keys, this.__key_fn(key));\r\n    }\r\n\r\n    keyFromIndex(index) {\r\n        return this.__real_keys[index];\r\n    }\r\n\r\n    valueFromIndex(index) {\r\n        return this.__values[index];\r\n    }\r\n\r\n    size() {\r\n        return this.__keys.length;\r\n    }\r\n\r\n    lastKey() {\r\n        if (!this.__keys.length)\r\n            throw new Error('Sorted dict is empty.');\r\n        return this.__real_keys[this.__keys.length - 1];\r\n    }\r\n\r\n    lastValue() {\r\n        if (!this.__keys.length)\r\n            throw new Error('Sorted dict is empty.');\r\n        return this.__values[this.__values.length - 1];\r\n    }\r\n\r\n    keys() {\r\n        return this.__real_keys.slice();\r\n    }\r\n\r\n    values() {\r\n        return this.__values.slice();\r\n    }\r\n\r\n    toDict() {\r\n        const len = this.__real_keys.length;\r\n        const dict = {};\r\n        for (let i = 0; i < len; ++i) {\r\n            dict[this.__real_keys[i]] = this.__values[i];\r\n        }\r\n        return dict;\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n/** Class Power. **/\r\nimport {SortedDict} from \"../utils/sorted_dict\";\r\nimport {STRINGS} from \"../utils/strings\";\r\n\r\nexport class Power {\r\n    constructor(name, role, game) {\r\n        this.game = game;\r\n        this.role = role;\r\n\r\n        this.name = name;\r\n        this.controller = new SortedDict();\r\n        this.vote = null;\r\n        this.order_is_set = 0;\r\n        this.wait = !this.game.isRealTime();\r\n        this.centers = [];\r\n        this.homes = [];\r\n        this.units = [];\r\n        this.retreats = {};\r\n        this.orders = [];\r\n        this.influence = [];\r\n    }\r\n\r\n    isControlled() {\r\n        if (this.controller && this.controller.size()) {\r\n            return this.controller.lastValue() !== STRINGS.DUMMY;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getController() {\r\n        return (this.controller && this.controller.lastValue()) || STRINGS.DUMMY;\r\n    }\r\n\r\n    isEliminated() {\r\n        return !(this.units.length || this.centers.length || Object.keys(this.retreats).length);\r\n    }\r\n\r\n    setState(powerState) {\r\n        this.name = powerState.name;\r\n        this.controller = new SortedDict(powerState.controller);\r\n        this.vote = powerState.vote;\r\n        this.order_is_set = powerState.order_is_set;\r\n        this.wait = powerState.wait;\r\n        this.centers = powerState.centers;\r\n        this.homes = powerState.homes;\r\n        this.units = powerState.units;\r\n        this.retreats = powerState.retreats;\r\n        this.influence = powerState.influence || [];\r\n        // Get orders.\r\n        this.orders = [];\r\n        if (this.game.phase.charAt(this.game.phase.length - 1) === 'M') {\r\n            if (this.game.isNoCheck()) {\r\n                for (let value of Object.values(powerState.orders)) if (value)\r\n                    this.orders.push(value);\r\n            } else {\r\n                for (let unit of Object.keys(powerState.orders))\r\n                    this.orders.push(unit + ' ' + powerState.orders[unit]);\r\n            }\r\n        } else {\r\n            for (let order of powerState.adjust)\r\n                if (order && order !== 'WAIVE' && !order.startsWith('VOID '))\r\n                    this.orders.push(order);\r\n        }\r\n    }\r\n\r\n    copy() {\r\n        const power = new Power(this.name, this.role, this.game);\r\n        for (let key of this.controller.keys())\r\n            power.controller.put(key, this.controller.get(key));\r\n        power.vote = this.vote;\r\n        power.order_is_set = this.order_is_set;\r\n        power.wait = this.wait;\r\n        power.centers = this.centers.slice();\r\n        power.homes = this.homes.slice();\r\n        power.units = this.units.slice();\r\n        power.retreats = Object.assign({}, this.retreats);\r\n        power.influence = this.influence.slice();\r\n        power.orders = this.orders.slice();\r\n        return power;\r\n    }\r\n\r\n    updateController(controller, timestamp) {\r\n        this.controller.put(timestamp, controller);\r\n    }\r\n\r\n    setOrders(orders) {\r\n        this.orders = orders.slice();\r\n        this.order_is_set = this.orders.length ? 2 : 1;\r\n    }\r\n\r\n    setDummy() {\r\n        this.controller.clear();\r\n    }\r\n\r\n    clearCenters() {\r\n        this.centers = [];\r\n    }\r\n\r\n    clearOrders() {\r\n        this.orders = [];\r\n        this.order_is_set = 0;\r\n        this.wait = !this.game.isRealTime();\r\n    }\r\n\r\n    clearUnits() {\r\n        this.units = [];\r\n        this.influence = [];\r\n    }\r\n\r\n    getOrders() {\r\n        return this.orders.slice();\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nconst GLOBAL = 'GLOBAL';\r\n\r\nexport class Message {\r\n\r\n    constructor(message) {\r\n        Object.assign(this, message);\r\n        this.time_sent = message.time_sent;\r\n        this.phase = message.phase;\r\n        this.sender = message.sender;\r\n        this.recipient = message.recipient;\r\n        this.message = message.message;\r\n    }\r\n\r\n    isGlobal() {\r\n        return this.recipient === GLOBAL;\r\n    }\r\n\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nexport class Order {\r\n    constructor(orderString, isLocal) {\r\n        const pieces = orderString.split(/ +/);\r\n        this.loc = pieces[1];\r\n        this.order = orderString;\r\n        this.local = Boolean(isLocal);\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {UTILS} from \"../utils/utils\";\r\nimport {STRINGS} from \"../utils/strings\";\r\nimport {SortedDict} from \"../utils/sorted_dict\";\r\nimport {Power} from \"./power\";\r\nimport {Message} from \"./message\";\r\nimport {Order} from \"../../gui/utils/order\";\r\n\r\nexport function comparablePhase(shortPhaseName) {\r\n    /** Return a unique integer corresponding to given short phase name, so that\r\n     * phases can be compared using such integers.\r\n     * **/\r\n    // Phase 'FORMING' is assumed to be the smallest phase.\r\n    if (shortPhaseName === 'FORMING')\r\n        return 0;\r\n    // Phase 'COMPLETED' is assumed to be the greatest phase.\r\n    if (shortPhaseName === 'COMPLETED')\r\n        return Number.MAX_SAFE_INTEGER;\r\n    if (shortPhaseName.length !== 6)\r\n        throw new Error(`Invalid short phase name: ${shortPhaseName}`);\r\n    const seasonOrder = {S: 0, F: 1, W: 2};\r\n    const stepOrder = {M: 0, R: 1, A: 2};\r\n    const phaseSeason = shortPhaseName[0];\r\n    const phaseYear = parseInt(shortPhaseName.substring(1, 5), 10);\r\n    const phaseStep = shortPhaseName[5];\r\n    if (isNaN(phaseYear))\r\n        throw new Error(`Unable to parse phase year from ${shortPhaseName}`);\r\n    if (!seasonOrder.hasOwnProperty(phaseSeason))\r\n        throw new Error(`Unable to parse phase season from ${shortPhaseName}`);\r\n    if (!stepOrder.hasOwnProperty(phaseStep))\r\n        throw new Error(`Unable to parse phase step from ${shortPhaseName}`);\r\n    return (phaseYear * 100) + (seasonOrder[phaseSeason] * 10) + stepOrder[phaseStep];\r\n}\r\n\r\nexport class Game {\r\n    constructor(gameData) {\r\n        ////// Instead of using: `Object.assign(this, gameState)`,\r\n        ////// we set each field separately to let IDE know all attributes expected for Game class.\r\n        //// We first check gameState.\r\n        // These fields must not be null.\r\n\r\n        const nonNullFields = [\r\n            'game_id', 'map_name', 'messages', 'role', 'rules', 'status', 'timestamp_created', 'deadline',\r\n            'message_history', 'order_history', 'state_history'\r\n        ];\r\n        // These fields may be null.\r\n        const nullFields = ['n_controls', 'registration_password'];\r\n        // All fields are required.\r\n        for (let field of nonNullFields)\r\n            if (!gameData.hasOwnProperty(field) || gameData[field] == null)\r\n                throw new Error('Game: given state must have field `' + field + '` with non-null value.');\r\n        for (let field of nullFields)\r\n            if (!gameData.hasOwnProperty(field))\r\n                throw new Error('Game: given state must have field `' + field + '`.');\r\n\r\n        this.game_id = gameData.game_id;\r\n        this.map_name = gameData.map_name;\r\n        this.messages = new SortedDict(gameData instanceof Game ? null : gameData.messages, parseInt);\r\n\r\n        // {short phase name => state}\r\n        this.state_history = new SortedDict(gameData instanceof Game ? gameData.state_history.toDict() : gameData.state_history, comparablePhase);\r\n        // {short phase name => {power name => [orders]}}\r\n        this.order_history = new SortedDict(gameData instanceof Game ? gameData.order_history.toDict() : gameData.order_history, comparablePhase);\r\n        // {short phase name => {unit => [results]}}\r\n        this.result_history = new SortedDict(gameData instanceof Game ? gameData.result_history.toDict() : gameData.result_history, comparablePhase);\r\n        // {short phase name => {message.time_sent => message}}\r\n        if (gameData instanceof Game) {\r\n            this.message_history = new SortedDict(gameData.message_history.toDict(), comparablePhase);\r\n        } else {\r\n            this.message_history = new SortedDict(null, comparablePhase);\r\n            for (let entry of Object.entries(gameData.message_history)) {\r\n                const shortPhaseName = entry[0];\r\n                const phaseMessages = entry[1];\r\n                const sortedPhaseMessages = new SortedDict(phaseMessages, parseInt);\r\n                this.message_history.put(shortPhaseName, sortedPhaseMessages);\r\n            }\r\n        }\r\n\r\n        this.role = gameData.role;\r\n        this.rules = gameData.rules;\r\n        this.status = gameData.status;\r\n        this.timestamp_created = gameData.timestamp_created;\r\n        this.deadline = gameData.deadline;\r\n        this.n_controls = gameData.n_controls;\r\n        this.registration_password = gameData.registration_password;\r\n        this.observer_level = gameData.observer_level;\r\n        this.controlled_powers = gameData.controlled_powers;\r\n        this.daide_port = gameData.daide_port;\r\n        this.result = gameData.result || null;\r\n\r\n        this.phase = gameData.phase_abbr || null; // phase abbreviation\r\n\r\n        this.powers = {};\r\n        if (gameData.powers) {\r\n            for (let entry of Object.entries(gameData.powers)) {\r\n                const power_name = entry[0];\r\n                const powerState = entry[1];\r\n                if (powerState instanceof Power) {\r\n                    this.powers[power_name] = powerState.copy();\r\n                } else {\r\n                    this.powers[power_name] = new Power(power_name, (this.isPlayerGame() ? power_name : this.role), this);\r\n                    this.powers[power_name].setState(powerState);\r\n                }\r\n            }\r\n        } else if (this.state_history.size()) {\r\n            const lastState = this.state_history.lastValue();\r\n            if (lastState.units) {\r\n                for (let powerName of Object.keys(lastState.units)) {\r\n                    this.powers[powerName] = new Power(powerName, (this.isPlayerGame() ? powerName : this.role), this);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.note = gameData.note;\r\n        this.builds = null;\r\n\r\n        // {location => [possible orders]}\r\n        this.possibleOrders = null;\r\n        // {power name => [orderable locations]}\r\n        this.orderableLocations = null;\r\n        this.ordersTree = null;\r\n        // {loc => order type}\r\n        this.orderableLocToTypes = null;\r\n        this.client = null; // Used as pointer to a NetworkGame.\r\n    }\r\n\r\n    get n_players() {\r\n        return this.countControlledPowers();\r\n    }\r\n\r\n    static createOrdersTree(possibleOrders, tree, locToTypes) {\r\n        for (let orders of Object.values(possibleOrders)) {\r\n            for (let order of orders) {\r\n                // We ignore WAIVE order.\r\n                if (order === 'WAIVE')\r\n                    continue;\r\n                const pieces = order.split(/ +/);\r\n                const thirdPiece = pieces[2];\r\n                const lastPiece = pieces[pieces.length - 1];\r\n                switch (thirdPiece) {\r\n                    case 'H':\r\n                        // 'H', unit\r\n                        UTILS.javascript.extendTreeValue(tree, ['H'], `${pieces[0]} ${pieces[1]}`);\r\n                        UTILS.javascript.extendArrayWithUniqueValues(locToTypes, pieces[1], 'H');\r\n                        break;\r\n                    case '-':\r\n                        // 'M', unit, province\r\n                        // 'V', unit, province\r\n                        UTILS.javascript.extendTreeValue(tree, ['M', `${pieces[0]} ${pieces[1]}`, pieces[3]], (lastPiece === 'VIA' ? 'V' : 'M'));\r\n                        UTILS.javascript.extendArrayWithUniqueValues(locToTypes, pieces[1], 'M');\r\n                        break;\r\n                    case 'S':\r\n                        // 'S', supporter unit, supported unit, province\r\n                        UTILS.javascript.extendTreeValue(tree, ['S', `${pieces[0]} ${pieces[1]}`, `${pieces[3]} ${pieces[4]}`], lastPiece);\r\n                        UTILS.javascript.extendArrayWithUniqueValues(locToTypes, pieces[1], 'S');\r\n                        break;\r\n                    case 'C':\r\n                        // 'C', convoyer unit, convoyed unit, province\r\n                        UTILS.javascript.extendTreeValue(tree, ['C', `${pieces[0]} ${pieces[1]}`, `${pieces[3]} ${pieces[4]}`], pieces[6]);\r\n                        UTILS.javascript.extendArrayWithUniqueValues(locToTypes, pieces[1], 'C');\r\n                        break;\r\n                    case 'R':\r\n                        // 'R', unit, province\r\n                        UTILS.javascript.extendTreeValue(tree, ['R', `${pieces[0]} ${pieces[1]}`], pieces[3]);\r\n                        UTILS.javascript.extendArrayWithUniqueValues(locToTypes, pieces[1], 'R');\r\n                        break;\r\n                    case 'D':\r\n                        // D, unit\r\n                        UTILS.javascript.extendTreeValue(tree, ['D'], `${pieces[0]} ${pieces[1]}`);\r\n                        UTILS.javascript.extendArrayWithUniqueValues(locToTypes, pieces[1], 'D');\r\n                        break;\r\n                    case 'B':\r\n                        // B, unit\r\n                        UTILS.javascript.extendTreeValue(tree, [pieces[0]], pieces[1]);\r\n                        UTILS.javascript.extendArrayWithUniqueValues(locToTypes, pieces[1], pieces[0]);\r\n                        break;\r\n                    default:\r\n                        throw new Error(`Unable to parse order: ${order}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    extendPhaseHistory(phaseData) {\r\n        if (this.state_history.contains(phaseData.name)) throw new Error(`Phase ${phaseData.phase} already in state history.`);\r\n        if (this.message_history.contains(phaseData.name)) throw new Error(`Phase ${phaseData.phase} already in message history.`);\r\n        if (this.order_history.contains(phaseData.name)) throw new Error(`Phase ${phaseData.phase} already in order history.`);\r\n        if (this.result_history.contains(phaseData.name)) throw new Error(`Phase ${phaseData.phase} already in result history.`);\r\n        this.state_history.put(phaseData.name, phaseData.state);\r\n        this.order_history.put(phaseData.name, phaseData.orders);\r\n        this.result_history.put(phaseData.name, phaseData.results);\r\n        this.message_history.put(phaseData.name, new SortedDict(phaseData.messages, parseInt));\r\n    }\r\n\r\n    addMessage(message) {\r\n        message = new Message(message);\r\n        if (!message.time_sent)\r\n            throw new Error('No time sent for given message.');\r\n        if (this.messages.hasOwnProperty(message.time_sent))\r\n            throw new Error('There is already a message with time sent ' + message.time_sent + ' in message history.');\r\n        if (this.isPlayerGame() && !message.isGlobal() && this.role !== message.sender && this.role !== message.recipient)\r\n            throw new Error('Given message is not related to current player ' + this.role);\r\n        this.messages.put(message.time_sent, message);\r\n    }\r\n\r\n    assertPlayerGame(powerName) {\r\n        if (!this.isPlayerGame(powerName))\r\n            throw new Error('Expected a player game' + (powerName ? (' ' + powerName) : '') + ', got role ' + this.role + '.');\r\n    }\r\n\r\n    assertObserverGame() {\r\n        if (!this.isObserverGame())\r\n            throw new Error('Expected an observer game, got role ' + this.role + '.');\r\n    }\r\n\r\n    assertOmniscientGame() {\r\n        if (!this.isOmniscientGame())\r\n            throw new Error('Expected an omniscient game, got role ' + this.role + '.');\r\n    }\r\n\r\n    clearCenters(powerName) {\r\n        for (let power_name of Object.keys(this.powers)) {\r\n            if (!powerName || power_name === powerName)\r\n                this.powers[power_name].clearCenters();\r\n        }\r\n    }\r\n\r\n    clearOrders(powerName) {\r\n        for (let power_name of Object.keys(this.powers))\r\n            if (!powerName || power_name === powerName)\r\n                this.powers[power_name].clearOrders();\r\n    }\r\n\r\n    clearUnits(powerName) {\r\n        for (let power_name of Object.keys(this.powers)) {\r\n            if (!powerName || power_name === powerName)\r\n                this.powers[power_name].clearUnits();\r\n        }\r\n    }\r\n\r\n    clearVote() {\r\n        for (let power_name of Object.keys(this.powers))\r\n            this.powers[power_name].vote = 'neutral';\r\n    }\r\n\r\n    countControlledPowers() {\r\n        let count = 0;\r\n        for (let power of Object.values(this.powers))\r\n            count += power.isControlled() ? 1 : 0;\r\n        return count;\r\n    }\r\n\r\n    extendStateHistory(state) {\r\n        if (this.state_history.contains(state.name))\r\n            throw new Error('There is already a state with phase ' + state.name + ' in state history.');\r\n        this.state_history.put(state.name, state);\r\n    }\r\n\r\n    getLatestTimestamp() {\r\n        return Math.max(\r\n            this.timestamp_created,\r\n            (this.state_history.size() ? this.state_history.lastValue().timestamp : 0),\r\n            (this.messages.size() ? this.messages.lastKey() : 0)\r\n        );\r\n    }\r\n\r\n    getPower(name) {\r\n        return this.powers.hasOwnProperty(name) ? this.powers[name] : null;\r\n    }\r\n\r\n    getRelatedPower() {\r\n        return this.getPower(this.role);\r\n    }\r\n\r\n    hasPower(powerName) {\r\n        return this.powers.hasOwnProperty(powerName);\r\n    }\r\n\r\n    isPlayerGame(powerName) {\r\n        return (this.hasPower(this.role) && (!powerName || this.role === powerName));\r\n    }\r\n\r\n    isObserverGame() {\r\n        return this.role === STRINGS.OBSERVER_TYPE;\r\n    }\r\n\r\n    isOmniscientGame() {\r\n        return this.role === STRINGS.OMNISCIENT_TYPE;\r\n    }\r\n\r\n    isRealTime() {\r\n        return this.rules.includes('REAL_TIME');\r\n    }\r\n\r\n    isNoCheck() {\r\n        return this.rules.includes('NO_CHECK');\r\n    }\r\n\r\n    setPhaseData(phaseData) {\r\n        this.setState(phaseData.state);\r\n        this.clearOrders();\r\n        for (let entry of Object.entries(phaseData.orders)) {\r\n            if (entry[1])\r\n                this.setOrders(entry[0], entry[1]);\r\n        }\r\n        this.messages = phaseData.messages instanceof SortedDict ? phaseData.messages : new SortedDict(phaseData.messages, parseInt);\r\n    }\r\n\r\n    setState(state) {\r\n        this.result = state.result || null;\r\n        this.note = state.note || null;\r\n        this.phase = state.name;\r\n        if (state.units) {\r\n            for (let power_name of Object.keys(state.units)) {\r\n                if (this.powers.hasOwnProperty(power_name)) {\r\n                    const units = state.units[power_name];\r\n                    const power = this.powers[power_name];\r\n                    power.retreats = {};\r\n                    power.units = [];\r\n                    for (let unit of units) {\r\n                        if (unit.charAt(0) === '*')\r\n                            power.retreats[unit.substr(1)] = {};\r\n                        else\r\n                            power.units.push(unit);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (state.centers)\r\n            for (let power_name of Object.keys(state.centers))\r\n                if (this.powers.hasOwnProperty(power_name))\r\n                    this.powers[power_name].centers = state.centers[power_name];\r\n        if (state.homes)\r\n            for (let power_name of Object.keys(state.homes))\r\n                if (this.powers.hasOwnProperty(power_name))\r\n                    this.powers[power_name].homes = state.homes[power_name];\r\n        if (state.influence)\r\n            for (let power_name of Object.keys(state.influence))\r\n                if (this.powers.hasOwnProperty(power_name))\r\n                    this.powers[power_name].influence = state.influence[power_name];\r\n        if (state.civil_disorder)\r\n            for (let power_name of Object.keys(state.civil_disorder))\r\n                if (this.powers.hasOwnProperty(power_name))\r\n                    this.powers[power_name].civil_disorder = state.civil_disorder[power_name];\r\n        if (state.builds)\r\n            this.builds = state.builds;\r\n    }\r\n\r\n    setStatus(status) {\r\n        this.status = status;\r\n    }\r\n\r\n    setOrders(powerName, orders) {\r\n        if (this.powers.hasOwnProperty(powerName) && (!this.isPlayerGame() || this.isPlayerGame(powerName)))\r\n            this.powers[powerName].setOrders(orders);\r\n    }\r\n\r\n    setWait(powerName, wait) {\r\n        if (this.powers.hasOwnProperty(powerName)) {\r\n            this.powers[powerName].wait = wait;\r\n        }\r\n    }\r\n\r\n    updateDummyPowers(dummyPowers) {\r\n        for (let dummyPowerName of dummyPowers) if (this.powers.hasOwnProperty(dummyPowerName))\r\n            this.powers[dummyPowerName].setDummy();\r\n    }\r\n\r\n    updatePowersControllers(controllers, timestamps) {\r\n        for (let entry of Object.entries(controllers)) {\r\n            this.getPower(entry[0]).updateController(entry[1], timestamps[entry[0]]);\r\n        }\r\n    }\r\n\r\n    cloneAt(pastPhase) {\r\n        if (pastPhase !== null && this.state_history.contains(pastPhase)) {\r\n            const game = new Game(this);\r\n            const pastPhaseIndex = this.state_history.indexOf(pastPhase);\r\n            const nbPastPhases = this.state_history.size();\r\n            for (let i = nbPastPhases - 1; i > pastPhaseIndex; --i) {\r\n                const keyToRemove = this.state_history.keyFromIndex(i);\r\n                game.message_history.remove(keyToRemove);\r\n                game.state_history.remove(keyToRemove);\r\n                game.order_history.remove(keyToRemove);\r\n                game.result_history.remove(keyToRemove);\r\n            }\r\n            game.setPhaseData({\r\n                name: pastPhase,\r\n                state: this.state_history.get(pastPhase),\r\n                orders: this.order_history.get(pastPhase),\r\n                messages: this.message_history.get(pastPhase)\r\n            });\r\n            return game;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getPhaseType() {\r\n        if (this.phase === null || this.phase === 'FORMING' || this.phase === 'COMPLETED')\r\n            return null;\r\n        return this.phase[this.phase.length - 1];\r\n    }\r\n\r\n    getControllablePowers() {\r\n        if (this.isObserverGame() || this.isOmniscientGame())\r\n            return Object.keys(this.powers);\r\n        return [this.role];\r\n    }\r\n\r\n    getServerOrders() {\r\n        /** Return a dictionary of server orders.\r\n         * Returned dictionary maps each power name to either:\r\n         * - a dictionary of orders, mapping a loc to an Order object with boolean flag `local` set to false.\r\n         * - an empty dictionary, to represent an empty orders set.\r\n         * - null value, if power.order_is_set is false.\r\n         * **/\r\n        const orders = {};\r\n        const controllablePowers = this.getControllablePowers();\r\n        for (let powerName of controllablePowers) {\r\n            const powerOrders = {};\r\n            let countOrders = 0;\r\n            const power = this.powers[powerName];\r\n            for (let orderString of power.orders) {\r\n                const serverOrder = new Order(orderString, false);\r\n                powerOrders[serverOrder.loc] = serverOrder;\r\n                ++countOrders;\r\n            }\r\n            orders[powerName] = (countOrders || power.order_is_set) ? powerOrders : null;\r\n        }\r\n        return orders;\r\n    }\r\n\r\n    getMessageChannels(role, all) {\r\n        const messageChannels = {};\r\n        role = role || this.role;\r\n        let messagesToShow = null;\r\n        if (all) {\r\n            messagesToShow = this.message_history.values();\r\n            if (this.messages.size() && !this.message_history.contains(this.phase))\r\n                messagesToShow.push(this.messages);\r\n        } else {\r\n            if (this.messages.size())\r\n                messagesToShow = [this.messages];\r\n            else if (this.message_history.contains(this.phase))\r\n                messagesToShow = this.message_history.get(this.phase);\r\n        }\r\n        for (let messages of messagesToShow) {\r\n            for (let message of messages.values()) {\r\n                let protagonist = null;\r\n                if (message.sender === role || message.recipient === 'GLOBAL')\r\n                    protagonist = message.recipient;\r\n                else if (message.recipient === role)\r\n                    protagonist = message.sender;\r\n                if (!messageChannels.hasOwnProperty(protagonist))\r\n                    messageChannels[protagonist] = [];\r\n                messageChannels[protagonist].push(message);\r\n            }\r\n        }\r\n        return messageChannels;\r\n    }\r\n\r\n    markAllMessagesRead() {\r\n        for (let message of this.messages.values()) {\r\n            if (message.sender !== this.role)\r\n                message.read = true;\r\n        }\r\n    }\r\n\r\n    setPossibleOrders(possibleOrders) {\r\n        this.possibleOrders = possibleOrders.possible_orders;\r\n        this.orderableLocations = possibleOrders.orderable_locations;\r\n        this.ordersTree = {};\r\n        this.orderableLocToTypes = {};\r\n        Game.createOrdersTree(this.possibleOrders, this.ordersTree, this.orderableLocToTypes);\r\n    }\r\n\r\n    getOrderTypeToLocs(powerName) {\r\n        const typeToLocs = {};\r\n        for (let loc of this.orderableLocations[powerName]) {\r\n            // loc may be a coastal province. In such case, we must check province coasts too.\r\n            const associatedLocs = [];\r\n            for (let possibleLoc of Object.keys(this.orderableLocToTypes)) {\r\n                if (possibleLoc.substring(0, 3).toUpperCase() === loc.toUpperCase()) {\r\n                    associatedLocs.push(possibleLoc);\r\n                }\r\n            }\r\n            for (let associatedLoc of associatedLocs) {\r\n                const orderTypes = this.orderableLocToTypes[associatedLoc];\r\n                for (let orderType of orderTypes) {\r\n                    if (!typeToLocs.hasOwnProperty(orderType))\r\n                        typeToLocs[orderType] = [associatedLoc];\r\n                    else\r\n                        typeToLocs[orderType].push(associatedLoc);\r\n                }\r\n            }\r\n        }\r\n        return typeToLocs;\r\n    }\r\n\r\n    _build_sites(power) {\r\n        const homes = this.rules.includes('BUILD_ANY') ? power.centers : power.homes;\r\n        const occupiedLocations = [];\r\n        for (let p of Object.values(this.powers)) {\r\n            for (let unit of p.units) {\r\n                occupiedLocations.push(unit.substring(2, 5));\r\n            }\r\n        }\r\n        const buildSites = [];\r\n        for (let h of homes) {\r\n            if (power.centers.includes(h) && !occupiedLocations.includes(h))\r\n                buildSites.push(h);\r\n        }\r\n        return buildSites;\r\n    }\r\n\r\n    getBuildsCount(powerName) {\r\n        if (this.getPhaseType() !== 'A')\r\n            return 0;\r\n        const power = this.powers[powerName];\r\n        let buildCount = power.centers.length - power.units.length;\r\n        if (buildCount > 0) {\r\n            const buildSites = this._build_sites(power);\r\n            buildCount = Math.min(buildSites.length, buildCount);\r\n        }\r\n        return buildCount;\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n/*eslint no-unused-vars: [\"error\", { \"args\": \"none\" }]*/\r\nimport {STRINGS} from \"../utils/strings\";\r\nimport {NOTIFICATIONS} from \"../communication/notifications\";\r\nimport {Game} from \"../engine/game\";\r\n\r\n/** Notification managers. **/\r\nexport const NOTIFICATION_MANAGERS = {\r\n    account_deleted: function (channel, notification) {\r\n        const connection = channel.connection;\r\n        if (connection.channels.hasOwnProperty(channel.token))\r\n            delete channel.connection.channels[channel.token];\r\n    },\r\n    cleared_centers: function (game, notification) {\r\n        game.local.clearCenters(notification.power_name);\r\n    },\r\n    cleared_orders: function (game, notification) {\r\n        game.local.clearOrders(notification.power_name);\r\n    },\r\n    cleared_units: function (game, notification) {\r\n        game.local.clearUnits(notification.power_name);\r\n    },\r\n    powers_controllers: function (game, notification) {\r\n        if (game.local.isPlayerGame() && notification.powers[game.local.role] !== game.local.getRelatedPower().getController()) {\r\n            game.channel.game_id_to_instances[game.local.game_id].remove(game.local.role);\r\n            if (!game.channel.game_id_to_instances[game.local.game_id].size())\r\n                delete game.channel.game_id_to_instances[game.local.game_id];\r\n        } else {\r\n            game.local.updatePowersControllers(notification.powers, notification.timestamps);\r\n        }\r\n    },\r\n    game_deleted: function (game, notification) {\r\n        game.channel.game_id_to_instances[game.local.game_id].remove(game.local.role);\r\n    },\r\n    game_message_received: function (game, notification) {\r\n        game.local.addMessage(notification.message);\r\n    },\r\n    game_processed: function (game, notification) {\r\n        game.local.extendPhaseHistory(notification.previous_phase_data);\r\n        game.local.setPhaseData(notification.current_phase_data);\r\n        game.local.clearVote();\r\n    },\r\n    game_phase_update: function (game, notification) {\r\n        if (notification.phase_data_type === STRINGS.STATE_HISTORY)\r\n            game.local.extendPhaseHistory(notification.phase_data);\r\n        else\r\n            game.local.setPhaseData(notification.phase_data);\r\n    },\r\n    game_status_update: function (game, notification) {\r\n        if (game.local.status !== notification.status) {\r\n            game.local.setStatus(notification.status);\r\n        }\r\n    },\r\n    omniscient_updated: function (game, notification) {\r\n        if (game.local.isPlayerGame()) return;\r\n        if (game.local.isObserverGame()) {\r\n            if (notification.grade_update !== STRINGS.PROMOTE || notification.game.role !== STRINGS.OMNISCIENT_TYPE)\r\n                throw new Error('Omniscient updated: expected promotion from observer to omniscient');\r\n        } else {\r\n            if (notification.grade_update !== STRINGS.DEMOTE || notification.game.role !== STRINGS.OBSERVER_TYPE)\r\n                throw new Error('Omniscient updated: expected demotion from omniscient to observer.');\r\n        }\r\n        const channel = game.channel;\r\n        const oldGame = channel.game_id_to_instances[game.local.game_id].remove(game.local.role);\r\n        oldGame.client = null;\r\n        game.local = new Game(notification.game);\r\n        game.local.client = game;\r\n        channel.game_id_to_instances[game.local.game_id].add(game);\r\n    },\r\n    power_orders_update: function (game, notification) {\r\n        game.local.setOrders(notification.power_name, notification.orders);\r\n    },\r\n    power_orders_flag: function (game, notification) {\r\n        game.local.getPower(notification.power_name).order_is_set = notification.order_is_set;\r\n    },\r\n    power_vote_updated: function (game, notification) {\r\n        game.local.assertPlayerGame();\r\n        game.local.getRelatedPower().vote = notification.vote;\r\n    },\r\n    power_wait_flag: function (game, notification) {\r\n        game.local.setWait(notification.power_name, notification.wait);\r\n    },\r\n    vote_count_updated: function (game, notification) {\r\n        // Nothing currently done.\r\n    },\r\n    vote_updated: function (game, notification) {\r\n        game.assertOmniscientGame();\r\n        for (let power_name of notification.vote) {\r\n            game.local.getPower(power_name).vote = notification.vote[power_name];\r\n        }\r\n    },\r\n    handleNotification: function (connection, notification) {\r\n        if (!NOTIFICATION_MANAGERS.hasOwnProperty(notification.name))\r\n            throw new Error('No notification handler available for notification ' + notification.name);\r\n        const handler = NOTIFICATION_MANAGERS[notification.name];\r\n        const level = NOTIFICATIONS.levels[notification.name];\r\n        if (!connection.channels.hasOwnProperty(notification.token))\r\n            throw new Error('Unable to find channel related to notification ' + notification.name);\r\n        let objectToNotify = connection.channels[notification.token];\r\n        if (level === STRINGS.GAME) {\r\n            if (objectToNotify.game_id_to_instances.hasOwnProperty(notification.game_id)\r\n                && objectToNotify.game_id_to_instances[notification.game_id].has(notification.game_role))\r\n                objectToNotify = objectToNotify.game_id_to_instances[notification.game_id].get(notification.game_role);\r\n            else\r\n                throw new Error('Unable to find game instance related to notification '\r\n                    + notification.name + '/' + notification.game_id + '/' + notification.game_role);\r\n        }\r\n        handler(objectToNotify, notification);\r\n        if (level === STRINGS.GAME)\r\n            objectToNotify.notify(notification);\r\n    }\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n/** Class Future (like Python's Tornado future). **/\r\nexport class Future {\r\n    constructor() {\r\n        this.__resolve_fn = null;\r\n        this.__reject_fn = null;\r\n        this.__promise = null;\r\n        this.__done = false;\r\n\r\n        const future = this;\r\n        this.__promise = new Promise((resolve, reject) => {\r\n            future.__resolve_fn = resolve;\r\n            future.__reject_fn = reject;\r\n        });\r\n    }\r\n\r\n    promise() {\r\n        return this.__promise;\r\n    }\r\n\r\n    setResult(result) {\r\n        if (!this.done()) {\r\n            this.__done = true;\r\n            const resolve_fn = this.__resolve_fn;\r\n            resolve_fn(result);\r\n        }\r\n    }\r\n\r\n    setException(exception) {\r\n        if (!this.done()) {\r\n            this.__done = true;\r\n            const reject_fn = this.__reject_fn;\r\n            reject_fn(exception);\r\n        }\r\n    }\r\n\r\n    done() {\r\n        return this.__done;\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {Future} from \"./future\";\r\n\r\n/** Class FutureEvent (like Python's Tornado FutureEvent). **/\r\nexport class FutureEvent {\r\n    constructor() {\r\n        this.__future = new Future();\r\n    }\r\n\r\n    set(error) {\r\n        if (!this.__future.done())\r\n            if (error)\r\n                this.__future.setException(error);\r\n            else\r\n                this.__future.setResult(null);\r\n    }\r\n\r\n    clear() {\r\n        if (this.__future.done())\r\n            this.__future = new Future();\r\n    }\r\n\r\n    wait() {\r\n        return this.__future.promise();\r\n    }\r\n\r\n    isWaiting() {\r\n        return !this.__future.done();\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {STRINGS} from \"../utils/strings\";\r\nimport {UTILS} from \"../utils/utils\";\r\nimport {REQUESTS} from \"../communication/requests\";\r\n\r\n/** Class Channel. **/\r\nexport class Channel {\r\n    constructor(connection, username, token) {\r\n        this.connection = connection;\r\n        this.token = token;\r\n        this.username = username;\r\n        this.game_id_to_instances = {};\r\n    }\r\n\r\n    localJoinGame(joinParameters) {\r\n        // Game ID must be known.\r\n        if (this.game_id_to_instances.hasOwnProperty(joinParameters.game_id)) {\r\n            // If there is a power name, we return associated power game.\r\n            if (joinParameters.power_name)\r\n                return this.game_id_to_instances[joinParameters.game_id].get(joinParameters.power_name);\r\n            // Otherwise, we return current special game (if exists).\r\n            return this.game_id_to_instances[joinParameters.game_id].getSpecial();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    _req(name, forcedParameters, localChannelFunction, parameters, game) {\r\n        /** Send a request object for given request name with (optional) given forced parameters..\r\n         * If a local channel function is given, it will be used to try retrieving a data\r\n         * locally instead of sending a request. If local channel function returns something, this value is returned.\r\n         * Otherwise, normal procedure (request sending) is used. Local channel function would be called with\r\n         * request parameters passed to channel request method.\r\n         * **/\r\n        parameters = Object.assign(parameters || {}, forcedParameters || {});\r\n        const level = REQUESTS.getLevel(name);\r\n        if (level === STRINGS.GAME) {\r\n            if (!game)\r\n                throw new Error('A game object is required to send a game request.');\r\n            parameters.token = this.token;\r\n            parameters.game_id = game.local.game_id;\r\n            parameters.game_role = game.local.role;\r\n            parameters.phase = game.local.phase;\r\n        } else {\r\n            if (game)\r\n                throw new Error('A game object should not be provided for a non-game request.');\r\n            if (level === STRINGS.CHANNEL)\r\n                parameters.token = this.token;\r\n        }\r\n        if (localChannelFunction) {\r\n            const localResult = localChannelFunction.apply(this, [parameters]);\r\n            if (localResult)\r\n                return localResult;\r\n        }\r\n        const request = REQUESTS.create(name, parameters);\r\n        const future = this.connection.send(request, game);\r\n        const timeoutID = setTimeout(function () {\r\n            if (!future.done())\r\n                future.setException('Timeout reached when trying to send a request ' + name + '/' + request.request_id + '.');\r\n        }, UTILS.REQUEST_TIMEOUT_SECONDS * 1000);\r\n        return future.promise().then((result) => {\r\n            clearTimeout(timeoutID);\r\n            return result;\r\n        });\r\n    }\r\n\r\n    //// Public channel API.\r\n\r\n    createGame(parameters) {\r\n        return this._req('create_game', undefined, undefined, parameters, undefined);\r\n    }\r\n\r\n    getAvailableMaps(parameters) {\r\n        return this._req('get_available_maps', undefined, undefined, parameters, undefined);\r\n    }\r\n\r\n    getPlayablePowers(parameters) {\r\n        return this._req('get_playable_powers', undefined, undefined, parameters, undefined);\r\n    }\r\n\r\n    joinGame(parameters) {\r\n        return this._req('join_game', null, this.localJoinGame, parameters, undefined);\r\n    }\r\n\r\n    listGames(parameters) {\r\n        return this._req('list_games', undefined, undefined, parameters, undefined);\r\n    }\r\n\r\n    getGamesInfo(parameters) {\r\n        return this._req('get_games_info', undefined, undefined, parameters, undefined);\r\n    }\r\n\r\n    // User account API.\r\n\r\n    deleteAccount(parameters) {\r\n        return this._req('delete_account', undefined, undefined, parameters, undefined);\r\n    }\r\n\r\n    logout(parameters) {\r\n        return this._req('logout', undefined, undefined, parameters, undefined);\r\n    }\r\n\r\n    // Admin/moderator API.\r\n\r\n    makeOmniscient(parameters) {\r\n        return this._req('set_grade', {\r\n            grade: STRINGS.OMNISCIENT,\r\n            grade_update: STRINGS.PROMOTE\r\n        }, undefined, parameters, undefined);\r\n    }\r\n\r\n    removeOmniscient(parameters) {\r\n        return this._req('set_grade', {\r\n            grade: STRINGS.OMNISCIENT,\r\n            grade_update: STRINGS.DEMOTE\r\n        }, undefined, parameters, undefined);\r\n    }\r\n\r\n    promoteAdministrator(parameters) {\r\n        return this._req('set_grade', {\r\n            grade: STRINGS.ADMIN,\r\n            grade_update: STRINGS.PROMOTE\r\n        }, undefined, parameters, undefined);\r\n    }\r\n\r\n    demoteAdministrator(parameters) {\r\n        return this._req('set_grade', {\r\n            grade: STRINGS.ADMIN,\r\n            grade_update: STRINGS.DEMOTE\r\n        }, undefined, parameters, undefined);\r\n    }\r\n\r\n    promoteModerator(parameters) {\r\n        return this._req('set_grade', {\r\n            grade: STRINGS.MODERATOR,\r\n            grade_update: STRINGS.PROMOTE\r\n        }, undefined, parameters, undefined);\r\n    }\r\n\r\n    demoteModerator(parameters) {\r\n        return this._req('set_grade', {\r\n            grade: STRINGS.MODERATOR,\r\n            grade_update: STRINGS.DEMOTE\r\n        }, undefined, parameters, undefined);\r\n    }\r\n\r\n    //// Public game API.\r\n\r\n    getAllPossibleOrders(parameters, game) {\r\n        return this._req('get_all_possible_orders', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    getPhaseHistory(parameters, game) {\r\n        return this._req('get_phase_history', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    leaveGame(parameters, game) {\r\n        return this._req('leave_game', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    sendGameMessage(parameters, game) {\r\n        return this._req('send_game_message', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    setOrders(parameters, game) {\r\n        return this._req('set_orders', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    clearCenters(parameters, game) {\r\n        return this._req('clear_centers', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    clearOrders(parameters, game) {\r\n        return this._req('clear_orders', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    clearUnits(parameters, game) {\r\n        return this._req('clear_units', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    wait(parameters, game) {\r\n        return this._req('set_wait_flag', {wait: true}, undefined, parameters, game);\r\n    }\r\n\r\n    noWait(parameters, game) {\r\n        return this._req('set_wait_flag', {wait: false}, undefined, parameters, game);\r\n    }\r\n\r\n    vote(parameters, game) {\r\n        return this._req('vote', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    save(parameters, game) {\r\n        return this._req('save_game', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    synchronize(parameters, game) {\r\n        return this._req('synchronize', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    // Admin/moderator game API.\r\n\r\n    deleteGame(parameters, game) {\r\n        return this._req('delete_game', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    kickPowers(parameters, game) {\r\n        return this._req('set_dummy_powers', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    setState(parameters, game) {\r\n        return this._req('set_game_state', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    process(parameters, game) {\r\n        return this._req('process_game', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    querySchedule(parameters, game) {\r\n        return this._req('query_schedule', undefined, undefined, parameters, game);\r\n    }\r\n\r\n    start(parameters, game) {\r\n        return this._req('set_game_status', {status: STRINGS.ACTIVE}, undefined, parameters, game);\r\n    }\r\n\r\n    pause(parameters, game) {\r\n        return this._req('set_game_status', {status: STRINGS.PAUSED}, undefined, parameters, game);\r\n    }\r\n\r\n    resume(parameters, game) {\r\n        return this._req('set_game_status', {status: STRINGS.ACTIVE}, undefined, parameters, game);\r\n    }\r\n\r\n    cancel(parameters, game) {\r\n        return this._req('set_game_status', {status: STRINGS.CANCELED}, undefined, parameters, game);\r\n    }\r\n\r\n    draw(parameters, game) {\r\n        return this._req('set_game_status', {status: STRINGS.COMPLETED}, undefined, parameters, game);\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {STRINGS} from \"../utils/strings\";\r\nimport {UTILS} from \"../utils/utils\";\r\n\r\nexport class GameInstanceSet {\r\n    constructor(gameID) {\r\n        this.__game_id = gameID;\r\n        this.__games = {};\r\n    }\r\n\r\n    getGames() {\r\n        return Object.values(this.__games);\r\n    }\r\n\r\n    has(role) {\r\n        return this.__games.hasOwnProperty(role);\r\n    }\r\n\r\n    get(role) {\r\n        return this.__games[role] || null;\r\n    }\r\n\r\n    getSpecial() {\r\n        if (this.__games.hasOwnProperty(STRINGS.OBSERVER_TYPE))\r\n            return this.__games[STRINGS.OBSERVER_TYPE];\r\n        if (this.__games.hasOwnProperty(STRINGS.OMNISCIENT_TYPE))\r\n            return this.__games[STRINGS.OMNISCIENT_TYPE];\r\n        return null;\r\n    }\r\n\r\n    remove(role) {\r\n        let old = null;\r\n        if (this.__games[role]) {\r\n            old = this.__games[role];\r\n            delete this.__games[role];\r\n        }\r\n        return old;\r\n    }\r\n\r\n    removeSpecial() {\r\n        if (this.__games.hasOwnProperty(STRINGS.OBSERVER_TYPE))\r\n            delete this.__games[STRINGS.OBSERVER_TYPE];\r\n        if (this.__games.hasOwnProperty(STRINGS.OMNISCIENT_TYPE))\r\n            delete this.__games[STRINGS.OMNISCIENT_TYPE];\r\n    }\r\n\r\n    add(game) {\r\n        if (game.local.game_id !== this.__game_id)\r\n            throw new Error('game ID to add does not match game instance set ID.');\r\n        if (this.__games.hasOwnProperty(game.local.role))\r\n            throw new Error('Role already in game instance set.');\r\n        if (!game.local.isPlayerGame() && (\r\n            this.__games.hasOwnProperty(STRINGS.OBSERVER_TYPE) || this.__games.hasOwnProperty(STRINGS.OMNISCIENT_TYPE)))\r\n            throw new Error('Previous special game must be removed before adding new one.');\r\n        this.__games[game.local.role] = game;\r\n    }\r\n\r\n    size() {\r\n        return UTILS.javascript.count(this.__games);\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {Channel} from \"./channel\";\r\nimport {Game} from \"../engine/game\";\r\n\r\n/** Class NetworkGame. **/\r\n\r\nexport class NetworkGame {\r\n    constructor(channel, serverGameState) {\r\n        // Let's use a \"local\" instance to manage game.\r\n        // This will help make distinction between network game request methods and local gme methods\r\n        // (e.g. for request set_orders).\r\n        this.local = new Game(serverGameState);\r\n        this.channel = channel;\r\n        this.notificationCallbacks = {};\r\n        this.data = null;\r\n        this.local.client = this;\r\n    }\r\n\r\n    addCallback(notificationName, notificationCallback) {\r\n        if (!this.notificationCallbacks.hasOwnProperty(notificationName))\r\n            this.notificationCallbacks[notificationName] = [notificationCallback];\r\n        else if (!this.notificationCallbacks[notificationName].includes(notificationCallback))\r\n            this.notificationCallbacks[notificationName].push(notificationCallback);\r\n    }\r\n\r\n    clearCallbacks(notificationName) {\r\n        if (this.notificationCallbacks.hasOwnProperty(notificationName))\r\n            delete this.notificationCallbacks[notificationName];\r\n    }\r\n\r\n    clearAllCallbacks() {\r\n        this.notificationCallbacks = {};\r\n    }\r\n\r\n    notify(notification) {\r\n        if (this.notificationCallbacks.hasOwnProperty(notification.name)) {\r\n            for (let callback of this.notificationCallbacks[notification.name])\r\n                setTimeout(() => callback(this, notification), 0);\r\n        }\r\n    }\r\n\r\n    _req(channelMethod, parameters) {\r\n        /** Send a game request using given channel request method. **/\r\n        if (!this.channel)\r\n            throw new Error('Invalid client game.');\r\n        return channelMethod.apply(this.channel, [parameters, this]);\r\n    }\r\n\r\n    //// Game requests API.\r\n\r\n    getAllPossibleOrders(parameters) {\r\n        return this._req(Channel.prototype.getAllPossibleOrders, parameters);\r\n    }\r\n\r\n    getPhaseHistory(parameters) {\r\n        return this._req(Channel.prototype.getPhaseHistory, parameters);\r\n    }\r\n\r\n    leave(parameters) {\r\n        return this._req(Channel.prototype.leaveGame, parameters);\r\n    }\r\n\r\n    sendGameMessage(parameters) {\r\n        return this._req(Channel.prototype.sendGameMessage, parameters);\r\n    }\r\n\r\n    setOrders(parameters) {\r\n        return this._req(Channel.prototype.setOrders, parameters);\r\n    }\r\n\r\n    clearCenters(parameters) {\r\n        return this._req(Channel.prototype.clearCenters, parameters);\r\n    }\r\n\r\n    clearOrders(parameters) {\r\n        return this._req(Channel.prototype.clearOrders, parameters);\r\n    }\r\n\r\n    clearUnits(parameters) {\r\n        return this._req(Channel.prototype.clearUnits, parameters);\r\n    }\r\n\r\n    wait(parameters) {\r\n        return this._req(Channel.prototype.wait, parameters);\r\n    }\r\n\r\n    noWait(parameters) {\r\n        return this._req(Channel.prototype.noWait, parameters);\r\n    }\r\n\r\n    setWait(wait, parameters) {\r\n        return wait ? this.wait(parameters) : this.noWait(parameters);\r\n    }\r\n\r\n    vote(parameters) {\r\n        return this._req(Channel.prototype.vote, parameters);\r\n    }\r\n\r\n    save(parameters) {\r\n        return this._req(Channel.prototype.save, parameters);\r\n    }\r\n\r\n    synchronize() {\r\n        if (!this.channel)\r\n            throw new Error('Invalid client game.');\r\n        return Channel.prototype.synchronize.apply(this.channel, [{timestamp: this.local.getLatestTimestamp()}, this]);\r\n    }\r\n\r\n    // Admin/moderator API.\r\n\r\n    remove(parameters) {\r\n        return this._req(Channel.prototype.deleteGame, parameters);\r\n    }\r\n\r\n    kickPowers(parameters) {\r\n        return this._req(Channel.prototype.kickPowers, parameters);\r\n    }\r\n\r\n    setState(parameters) {\r\n        return this._req(Channel.prototype.setState, parameters);\r\n    }\r\n\r\n    process(parameters) {\r\n        return this._req(Channel.prototype.process, parameters);\r\n    }\r\n\r\n    querySchedule(parameters) {\r\n        return this._req(Channel.prototype.querySchedule, parameters);\r\n    }\r\n\r\n    start(parameters) {\r\n        return this._req(Channel.prototype.start, parameters);\r\n    }\r\n\r\n    pause(parameters) {\r\n        return this._req(Channel.prototype.pause, parameters);\r\n    }\r\n\r\n    resume(parameters) {\r\n        return this._req(Channel.prototype.resume, parameters);\r\n    }\r\n\r\n    cancel(parameters) {\r\n        return this._req(Channel.prototype.cancel, parameters);\r\n    }\r\n\r\n    draw(parameters) {\r\n        return this._req(Channel.prototype.draw, parameters);\r\n    }\r\n\r\n    //// Game callbacks setting API.\r\n\r\n    addOnClearedCenters(callback) {\r\n        this.addCallback('cleared_centers', callback);\r\n    }\r\n\r\n    addOnClearedOrders(callback) {\r\n        this.addCallback('cleared_orders', callback);\r\n    }\r\n\r\n    addOnClearedUnits(callback) {\r\n        this.addCallback('cleared_units', callback);\r\n    }\r\n\r\n    addOnPowersControllers(callback) {\r\n        this.addCallback('powers_controllers', callback);\r\n    }\r\n\r\n    addOnGameDeleted(callback) {\r\n        this.addCallback('game_deleted', callback);\r\n    }\r\n\r\n    addOnGameMessageReceived(callback) {\r\n        this.addCallback('game_message_received', callback);\r\n    }\r\n\r\n    addOnGameProcessed(callback) {\r\n        this.addCallback('game_processed', callback);\r\n    }\r\n\r\n    addOnGamePhaseUpdate(callback) {\r\n        this.addCallback('game_phase_update', callback);\r\n    }\r\n\r\n    addOnGameStatusUpdate(callback) {\r\n        this.addCallback('game_status_update', callback);\r\n    }\r\n\r\n    addOnOmniscientUpdated(callback) {\r\n        this.addCallback('omniscient_updated', callback);\r\n    }\r\n\r\n    addOnPowerOrdersUpdate(callback) {\r\n        this.addCallback('power_orders_update', callback);\r\n    }\r\n\r\n    addOnPowerOrdersFlag(callback) {\r\n        this.addCallback('power_orders_flag', callback);\r\n    }\r\n\r\n    addOnPowerVoteUpdated(callback) {\r\n        this.addCallback('power_vote_updated', callback);\r\n    }\r\n\r\n    addOnPowerWaitFlag(callback) {\r\n        this.addCallback('power_wait_flag', callback);\r\n    }\r\n\r\n    addOnVoteCountUpdated(callback) {\r\n        this.addCallback('vote_count_updated', callback);\r\n    }\r\n\r\n    addOnVoteUpdated(callback) {\r\n        this.addCallback('vote_updated', callback);\r\n    }\r\n\r\n    //// Game callbacks clearing API.\r\n\r\n    clearOnClearedCenters() {\r\n        this.clearCallbacks('cleared_centers');\r\n    }\r\n\r\n    clearOnClearedOrders() {\r\n        this.clearCallbacks('cleared_orders');\r\n    }\r\n\r\n    clearOnClearedUnits() {\r\n        this.clearCallbacks('cleared_units');\r\n    }\r\n\r\n    clearOnPowersControllers() {\r\n        this.clearCallbacks('powers_controllers');\r\n    }\r\n\r\n    clearOnGameDeleted() {\r\n        this.clearCallbacks('game_deleted');\r\n    }\r\n\r\n    clearOnGameMessageReceived() {\r\n        this.clearCallbacks('game_message_received');\r\n    }\r\n\r\n    clearOnGameProcessed() {\r\n        this.clearCallbacks('game_processed');\r\n    }\r\n\r\n    clearOnGamePhaseUpdate() {\r\n        this.clearCallbacks('game_phase_update');\r\n    }\r\n\r\n    clearOnGameStatusUpdate() {\r\n        this.clearCallbacks('game_status_update');\r\n    }\r\n\r\n    clearOnOmniscientUpdated() {\r\n        this.clearCallbacks('omniscient_updated');\r\n    }\r\n\r\n    clearOnPowerOrdersUpdate() {\r\n        this.clearCallbacks('power_orders_update');\r\n    }\r\n\r\n    clearOnPowerOrdersFlag() {\r\n        this.clearCallbacks('power_orders_flag');\r\n    }\r\n\r\n    clearOnPowerVoteUpdated() {\r\n        this.clearCallbacks('power_vote_updated');\r\n    }\r\n\r\n    clearOnPowerWaitFlag() {\r\n        this.clearCallbacks('power_wait_flag');\r\n    }\r\n\r\n    clearOnVoteCountUpdated() {\r\n        this.clearCallbacks('vote_count_updated');\r\n    }\r\n\r\n    clearOnVoteUpdated() {\r\n        this.clearCallbacks('vote_updated');\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {Future} from \"../utils/future\";\r\nimport {Channel} from \"./channel\";\r\nimport {GameInstanceSet} from \"./game_instance_set\";\r\nimport {NetworkGame} from \"./network_game\";\r\n\r\n/** Class RequestFutureContext. **/\r\nexport class RequestFutureContext {\r\n    constructor(request, connection, game = null) {\r\n        this.request = request;\r\n        this.connection = connection;\r\n        this.game = game;\r\n        this.future = new Future();\r\n    }\r\n\r\n    getRequestId() {\r\n        return this.request.request_id;\r\n    }\r\n\r\n    getChannel() {\r\n        return this.connection.channels[this.request.token];\r\n    }\r\n\r\n    newChannel(username, token) {\r\n        const channel = new Channel(this.connection, username, token);\r\n        this.connection.channels[token] = channel;\r\n        return channel;\r\n    }\r\n\r\n    newGame(received_game) {\r\n        const channel = this.getChannel();\r\n        const game = new NetworkGame(channel, received_game);\r\n        if (!channel.game_id_to_instances.hasOwnProperty(game.local.game_id))\r\n            channel.game_id_to_instances[game.local.game_id] = new GameInstanceSet(game.local.game_id);\r\n        channel.game_id_to_instances[game.local.game_id].add(game);\r\n        return game;\r\n    }\r\n\r\n    removeChannel() {\r\n        delete this.connection.channels[this.request.token];\r\n    }\r\n\r\n    deleteGame() {\r\n        const channel = this.getChannel();\r\n        if (channel.game_id_to_instances.hasOwnProperty(this.request.game_id))\r\n            delete channel.game_id_to_instances[this.request.game_id];\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n/*eslint no-console: [\"error\", {allow: [\"log\", \"info\", \"warn\", \"error\"]}] */\r\nexport class Diplog {\r\n    static error(msg) {\r\n        console.error(msg);\r\n    }\r\n\r\n    static warn(msg) {\r\n        console.warn(msg);\r\n    }\r\n\r\n    static info(msg) {\r\n        console.log(msg);\r\n    }\r\n\r\n    static success(msg) {\r\n        console.log(msg);\r\n    }\r\n\r\n    static printMessages(messages) {\r\n        if (messages) {\r\n            if (messages.error)\r\n                Diplog.error(messages.error);\r\n            if (messages.info)\r\n                Diplog.info(messages.info);\r\n            if (messages.success)\r\n                Diplog.success(messages.success);\r\n        }\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n/*eslint no-unused-vars: [\"error\", { \"args\": \"none\" }]*/\r\nimport {STRINGS} from \"../utils/strings\";\r\nimport {UTILS} from \"../utils/utils\";\r\nimport {REQUESTS} from \"../communication/requests\";\r\nimport {RESPONSES} from \"../communication/responses\";\r\nimport {NOTIFICATIONS} from \"../communication/notifications\";\r\nimport {RESPONSE_MANAGERS} from \"./response_managers\";\r\nimport {NOTIFICATION_MANAGERS} from \"./notification_managers\";\r\nimport {Future} from \"../utils/future\";\r\nimport {FutureEvent} from \"../utils/future_event\";\r\nimport {RequestFutureContext} from \"./request_future_context\";\r\nimport {Diplog} from \"../utils/diplog\";\r\n\r\nclass Reconnection {\r\n    constructor(connection) {\r\n        this.connection = connection;\r\n        this.games_phases = {};\r\n        this.n_expected_games = 0;\r\n        this.n_synchronized_games = 0;\r\n    }\r\n\r\n    genSyncCallback(game) {\r\n        const reconnection = this;\r\n        return ((serverSyncResponse) => {\r\n            reconnection.games_phases[game.local.game_id][game.local.game_role] = serverSyncResponse;\r\n            ++reconnection.n_synchronized_games;\r\n            if (reconnection.n_synchronized_games === reconnection.n_expected_games)\r\n                reconnection.syncDone();\r\n        });\r\n    }\r\n\r\n    reconnect() {\r\n        for (let waitingContext of Object.values(this.connection.requestsWaitingResponses))\r\n            waitingContext.request.re_sent = true;\r\n        const lenWaiting = Object.keys(this.connection.requestsWaitingResponses).length;\r\n        const lenBefore = Object.keys(this.connection.requestsToSend).length;\r\n        Object.assign(this.connection.requestsToSend, this.connection.requestsWaitingResponses);\r\n        const lenAfter = Object.keys(this.connection.requestsToSend).length;\r\n        if (lenAfter !== lenWaiting + lenBefore)\r\n            throw new Error('Programming error.');\r\n        this.connection.requestsWaitingResponses = {};\r\n\r\n        const requestsToSendUpdated = {};\r\n        for (let context of Object.values(this.connection.requestsToSend)) {\r\n            if (context.request.name === STRINGS.SYNCHRONIZE)\r\n                context.future.setException(new Error('Sync request invalidated for game ID ' + context.request.game_id));\r\n            else\r\n                requestsToSendUpdated[context.request.request_id] = context;\r\n        }\r\n        this.connection.requestsToSend = requestsToSendUpdated;\r\n\r\n        for (let channel of Object.values(this.connection.channels)) {\r\n            for (let gis of Object.values(channel.game_id_to_instances)) {\r\n                for (let game of gis.getGames()) {\r\n                    const game_id = game.local.game_id;\r\n                    const game_role = game.local.role;\r\n                    if (!this.games_phases.hasOwnProperty(game_id))\r\n                        this.games_phases[game_id] = {};\r\n                    this.games_phases[game_id][game_role] = null;\r\n                    ++this.n_expected_games;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.n_expected_games) {\r\n            for (let channel of Object.values(this.connection.channels))\r\n                for (let gis of Object.values(channel.game_id_to_instances))\r\n                    for (let game of gis.getGames())\r\n                        game.synchronize().then(this.genSyncCallback(game));\r\n        } else {\r\n            this.syncDone();\r\n        }\r\n    }\r\n\r\n    syncDone() {\r\n        const requestsToSendUpdated = {};\r\n        for (let context of Object.values(this.connection.requestsToSend)) {\r\n            let keep = true;\r\n            if (REQUESTS.isPhaseDependent(context.request.name)) {\r\n                const request_phase = context.request.phase;\r\n                const server_phase = this.games_phases[context.request.game_id][context.request.game_role].phase;\r\n                if (request_phase !== server_phase) {\r\n                    context.future.setException(new Error(\r\n                        'Game ' + context.request.game_id + ': request ' + context.request.name +\r\n                        ': request phase ' + request_phase + ' does not match current server game phase '\r\n                        + server_phase + '.'));\r\n                    keep = false;\r\n                }\r\n            }\r\n            if (keep)\r\n                requestsToSendUpdated[context.request.request_id] = context;\r\n        }\r\n        Diplog.info('Keep ' + Object.keys(requestsToSendUpdated).length + '/' +\r\n            Object.keys(this.connection.requestsToSend).length + ' old request(s) to send.');\r\n        this.connection.requestsToSend = requestsToSendUpdated;\r\n\r\n        for (let context of Object.values(requestsToSendUpdated)) {\r\n            this.connection.__write_request(context);\r\n        }\r\n\r\n        this.connection.isReconnecting.set();\r\n\r\n        Diplog.info('Done reconnection work.');\r\n    }\r\n}\r\n\r\nclass ConnectionProcessing {\r\n    constructor(connection, logger) {\r\n        this.connection = connection;\r\n        this.logger = logger || Diplog;\r\n        this.isConnected = false;\r\n        this.attemptIndex = 1;\r\n        this.timeoutID = null;\r\n\r\n        this.onSocketOpen = this.onSocketOpen.bind(this);\r\n        this.onSocketTimeout = this.onSocketTimeout.bind(this);\r\n        this.tryConnect = this.tryConnect.bind(this);\r\n    }\r\n\r\n    __on_error(error) {\r\n        this.connection.isConnecting.set(error);\r\n    }\r\n\r\n    onSocketOpen(event) {\r\n        this.isConnected = true;\r\n        if (this.timeoutID) {\r\n            clearTimeout(this.timeoutID);\r\n            this.timeoutID = null;\r\n        }\r\n        // Socket open: set onMessage and onClose callbacks.\r\n        this.connection.socket.onmessage = this.connection.onSocketMessage;\r\n        this.connection.socket.onclose = this.connection.onSocketClose;\r\n        this.connection.currentConnectionProcessing = null;\r\n        this.connection.isConnecting.set();\r\n        this.logger.info('Connection succeeds.');\r\n    }\r\n\r\n    onSocketTimeout() {\r\n        if (!this.isConnected) {\r\n            this.connection.socket.close();\r\n            if (this.attemptIndex === UTILS.NB_CONNECTION_ATTEMPTS) {\r\n                this.connection.isConnecting.set(\r\n                    new Error(`${this.connection.isReconnecting.isWaiting() ? 'Reconnection' : 'Connection'} failed after ${UTILS.NB_CONNECTION_ATTEMPTS} attempts.`));\r\n                return;\r\n            }\r\n            this.logger.warn('Connection failing (attempt ' + this.attemptIndex + '/' +\r\n                UTILS.NB_CONNECTION_ATTEMPTS + '), retrying ...');\r\n            ++this.attemptIndex;\r\n            setTimeout(this.tryConnect, 0);\r\n        }\r\n    }\r\n\r\n    tryConnect() {\r\n        // When opening a socket, we configure only onOpen callback.\r\n        // We will configure onMessage and onClose callbacks only when the socket will be effectively open.\r\n        try {\r\n            this.connection.socket = new WebSocket(this.connection.getUrl());\r\n            this.connection.socket.onopen = this.onSocketOpen;\r\n            this.timeoutID = setTimeout(this.onSocketTimeout, UTILS.ATTEMPT_DELAY_SECONDS * 1000);\r\n        } catch (error) {\r\n            this.__on_error(error);\r\n        }\r\n    }\r\n\r\n    process() {\r\n        this.connection.isConnecting.clear();\r\n        if (this.connection.socket)\r\n            this.connection.socket.close();\r\n        this.tryConnect();\r\n        return this.connection.isConnecting.wait();\r\n    }\r\n\r\n    stop() {\r\n        if (!this.isConnected) {\r\n            if (this.connection.socket)\r\n                this.connection.socket.onopen = null;\r\n            if (this.timeoutID) {\r\n                clearTimeout(this.timeoutID);\r\n                this.timeoutID = null;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** Class Connection (like Python class diplomacy.client.connection.Connection). **/\r\nexport class Connection {\r\n    constructor(hostname, port, useSSL) {\r\n        if (useSSL)\r\n            Diplog.info(`Using SSL.`);\r\n        this.protocol = useSSL ? 'wss' : 'ws';\r\n        this.hostname = hostname;\r\n        this.port = port;\r\n        this.socket = null;\r\n        this.isConnecting = new FutureEvent();\r\n        this.isReconnecting = new FutureEvent();\r\n        this.channels = {};\r\n        this.requestsToSend = {};\r\n        this.requestsWaitingResponses = {};\r\n        this.currentConnectionProcessing = null;\r\n\r\n        // Attribute used to make distinction between a connection\r\n        // explicitly closed by client and a connection closed for\r\n        // other unexpected reasons (e.g. by server).\r\n        this.closed = false;\r\n\r\n        this.onSocketMessage = this.onSocketMessage.bind(this);\r\n        this.onSocketClose = this.onSocketClose.bind(this);\r\n\r\n        this.isReconnecting.set();\r\n\r\n        /** Public events. **/\r\n        this.onReconnection = null;  // onReconnection()\r\n        this.onReconnectionError = null; // onReconnectionError(error)\r\n    }\r\n\r\n    getUrl() {\r\n        return this.protocol + '://' + this.hostname + ':' + this.port;\r\n    }\r\n\r\n    onSocketMessage(messageEvent) {\r\n        /** Callback used to manage a socket message string.\r\n         * Try-catch block will capture eventual:\r\n         * - JSON parsing errors\r\n         * - response parsing errors\r\n         * - response handling errors\r\n         * - notification parsing errors\r\n         * - notification handling errors\r\n         * **/\r\n        try {\r\n            const message = messageEvent.data;\r\n            const jsonMessage = JSON.parse(message);\r\n            if (!(jsonMessage instanceof Object)) {\r\n                Diplog.error('Unable to convert a message to a JSON object.');\r\n                return;\r\n            }\r\n            if (jsonMessage.request_id) {\r\n                const requestID = jsonMessage.request_id;\r\n                if (!this.requestsWaitingResponses.hasOwnProperty(requestID)) {\r\n                    Diplog.error('Unknown request ' + requestID + '.');\r\n                    return;\r\n                }\r\n                const context = this.requestsWaitingResponses[requestID];\r\n                delete this.requestsWaitingResponses[requestID];\r\n                try {\r\n                    context.future.setResult(RESPONSE_MANAGERS.handleResponse(context, RESPONSES.parse(jsonMessage)));\r\n                } catch (error) {\r\n                    context.future.setException(error);\r\n                }\r\n            } else if (jsonMessage.hasOwnProperty('notification_id') && jsonMessage.notification_id)\r\n                NOTIFICATION_MANAGERS.handleNotification(this, NOTIFICATIONS.parse(jsonMessage));\r\n            else\r\n                Diplog.error('Unknown socket message received.');\r\n        } catch (error) {\r\n            Diplog.error(error);\r\n        }\r\n    }\r\n\r\n    onSocketClose(closeEvent) {\r\n        if (this.closed)\r\n            Diplog.info('Disconnected.');\r\n        else {\r\n            Diplog.error('Disconnected, trying to reconnect.');\r\n            this.isReconnecting.clear();\r\n            this.__connect()\r\n                .then(() => {\r\n                    new Reconnection(this).reconnect();\r\n                    if (this.onReconnection)\r\n                        this.onReconnection();\r\n                })\r\n                .catch(error => {\r\n                    if (this.onReconnectionError)\r\n                        this.onReconnectionError(error);\r\n                    else\r\n                        throw error;\r\n                });\r\n        }\r\n    }\r\n\r\n    __connect(logger) {\r\n        if (this.currentConnectionProcessing) {\r\n            this.currentConnectionProcessing.stop();\r\n            this.currentConnectionProcessing = null;\r\n        }\r\n        this.currentConnectionProcessing = new ConnectionProcessing(this, logger);\r\n        return this.currentConnectionProcessing.process();\r\n    }\r\n\r\n    __write_request(requestContext) {\r\n        const writeFuture = new Future();\r\n        const request = requestContext.request;\r\n        const requestID = request.request_id;\r\n        const connection = this;\r\n\r\n        const onConnected = () => {\r\n            connection.socket.send(JSON.stringify(request));\r\n            connection.requestsWaitingResponses[requestID] = requestContext;\r\n            if (connection.requestsToSend.hasOwnProperty(requestID)) {\r\n                delete connection.requestsToSend[requestID];\r\n            }\r\n            writeFuture.setResult(null);\r\n        };\r\n        const onAnyError = (error) => {\r\n            if (!connection.requestsToSend.hasOwnProperty(requestID)) {\r\n                connection.requestsToSend[requestID] = requestContext;\r\n            }\r\n            Diplog.info('Error occurred while sending a request ' + requestID);\r\n            writeFuture.setException(error);\r\n        };\r\n        if (request.name === STRINGS.SYNCHRONIZE)\r\n            this.isConnecting.wait().then(onConnected, onAnyError);\r\n        else\r\n            this.isReconnecting.wait().then(onConnected, onAnyError);\r\n        return writeFuture.promise();\r\n    }\r\n\r\n    connect(logger) {\r\n        Diplog.info('Trying to connect.');\r\n        return this.__connect(logger);\r\n    }\r\n\r\n    send(request, game = null) {\r\n        const requestContext = new RequestFutureContext(request, this, game);\r\n        this.__write_request(requestContext);\r\n        return requestContext.future;\r\n    }\r\n\r\n    authenticate(username, password) {\r\n        return this.send(REQUESTS.create('sign_in', {\r\n            username: username,\r\n            password: password\r\n        })).promise();\r\n    }\r\n\r\n    close() {\r\n        this.closed = true;\r\n        this.socket.close();\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Button extends React.Component {\r\n    /** Bootstrap button.\r\n     * Bootstrap classes:\r\n     * - btn\r\n     * - btn-primary\r\n     * - mx-1 (margin-left 1px, margin-right 1px)\r\n     * Props: title (str), onClick (function).\r\n     * **/\r\n    // title\r\n    // onClick\r\n    // pickEvent = false\r\n    // large = false\r\n    // small = false\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick(event) {\r\n        if (this.props.onClick)\r\n            this.props.onClick(this.props.pickEvent ? event : null);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button\r\n                className={`btn btn-${this.props.color || 'secondary'}` + (this.props.large ? ' btn-block' : '') + (this.props.small ? ' btn-sm' : '')}\r\n                disabled={this.props.disabled}\r\n                onClick={this.onClick}>\r\n                <strong>{this.props.title}</strong>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nButton.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    color: PropTypes.string,\r\n    large: PropTypes.bool,\r\n    small: PropTypes.bool,\r\n    pickEvent: PropTypes.bool,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nButton.defaultPropTypes = {\r\n    disabled: false\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {UTILS} from \"../../diplomacy/utils/utils\";\r\nimport {Button} from \"./button\";\r\n\r\nexport class Forms {\r\n    static createOnChangeCallback(component, callback) {\r\n        return (event) => {\r\n            const value = UTILS.html.isCheckBox(event.target) ? event.target.checked : event.target.value;\r\n            const fieldName = UTILS.html.isRadioButton(event.target) ? event.target.name : event.target.id;\r\n            const update = {[fieldName]: value};\r\n            const state = Object.assign({}, component.state, update);\r\n            if (callback)\r\n                callback(state);\r\n            component.setState(state);\r\n        };\r\n    }\r\n\r\n    static createOnSubmitCallback(component, callback, resetState) {\r\n        return (event) => {\r\n            if (callback)\r\n                callback(Object.assign({}, component.state));\r\n            if (resetState)\r\n                component.setState(resetState);\r\n            event.preventDefault();\r\n        };\r\n    }\r\n\r\n    static createOnResetCallback(component, onChangeCallback, resetState) {\r\n        return (event) => {\r\n            if (onChangeCallback)\r\n                onChangeCallback(resetState);\r\n            component.setState(resetState);\r\n            if (event && event.preventDefault)\r\n                event.preventDefault();\r\n        };\r\n    }\r\n\r\n    static getValue(fieldValues, fieldName, defaultValue) {\r\n        return fieldValues.hasOwnProperty(fieldName) ? fieldValues[fieldName] : defaultValue;\r\n    }\r\n\r\n    static createReset(title, large, onReset) {\r\n        return <Button key={'reset'} title={title || 'reset'} onClick={onReset} pickEvent={true} large={large}/>;\r\n    }\r\n\r\n    static createSubmit(title, large, onSubmit) {\r\n        return <Button key={'submit'} title={title || 'submit'} onClick={onSubmit} pickEvent={true} large={large}/>;\r\n    }\r\n\r\n    static createButton(title, fn, color, large) {\r\n        const wrapFn = (event) => {\r\n            fn();\r\n            event.preventDefault();\r\n        };\r\n        return <Button large={large} key={title} color={color} title={title} onClick={wrapFn} pickEvent={true}/>;\r\n    }\r\n\r\n    static createCheckbox(id, title, value, onChange) {\r\n        const input = <input className={'form-check-input'} key={id} type={'checkbox'} id={id} checked={value}\r\n                             onChange={onChange}/>;\r\n        const label = <label className={'form-check-label'} key={`label-${id}`} htmlFor={id}>{title}</label>;\r\n        return [input, label];\r\n    }\r\n\r\n    static createRadio(name, value, title, currentValue, onChange) {\r\n        const id = `[${name}][${value}]`;\r\n        const input = <input className={'form-check-input'} key={id} type={'radio'}\r\n                             name={name} value={value} checked={currentValue === value}\r\n                             id={id} onChange={onChange}/>;\r\n        const label = <label className={'form-check-label'} key={`label-${id}`} htmlFor={id}>{title || value}</label>;\r\n        return [input, label];\r\n    }\r\n\r\n    static createRow(label, input) {\r\n        return (\r\n            <div className={'form-group row'}>\r\n                {label}\r\n                <div className={'col'}>{input}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    static createLabel(htmFor, title, className) {\r\n        return <label className={className} htmlFor={htmFor}>{title}</label>;\r\n    }\r\n\r\n    static createColLabel(htmlFor, title) {\r\n        return Forms.createLabel(htmlFor, title, 'col');\r\n    }\r\n\r\n    static createSelectOptions(values, none) {\r\n        const options = values.slice();\r\n        const components = options.map((option, index) => <option key={index} value={option}>{option}</option>);\r\n        if (none) {\r\n            components.splice(0, 0, [<option key={-1} value={''}>{none === true ? '(none)' : `${none}`}</option>]);\r\n        }\r\n        return components;\r\n    }\r\n}\r\n\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n/* DipStorage scheme:\r\nglobal\r\n- connection\r\n  - username\r\n  - hostname\r\n  - port\r\n  - showServerFields\r\nusers\r\n- (username)\r\n  - games\r\n    - (game_id)\r\n      - phase: string\r\n      - local_orders: {power_name => [orders]}\r\n*/\r\n\r\nlet STORAGE = null;\r\n\r\nexport class DipStorage {\r\n    static load() {\r\n        if (!STORAGE) {\r\n            const global = window.localStorage.global;\r\n            const users = window.localStorage.users;\r\n            STORAGE = {\r\n                global: (global && JSON.parse(global)) || {\r\n                    connection: {\r\n                        username: null,\r\n                        hostname: null,\r\n                        port: null,\r\n                        showServerFields: null\r\n                    }\r\n                },\r\n                users: (users && JSON.parse(users)) || {}\r\n            };\r\n        }\r\n    }\r\n\r\n    static save() {\r\n        if (STORAGE) {\r\n            window.localStorage.global = JSON.stringify(STORAGE.global);\r\n            window.localStorage.users = JSON.stringify(STORAGE.users);\r\n        }\r\n    }\r\n\r\n    static getConnectionForm() {\r\n        DipStorage.load();\r\n        return Object.assign({}, STORAGE.global.connection);\r\n    }\r\n\r\n    static getUserGames(username) {\r\n        DipStorage.load();\r\n        if (STORAGE.users[username])\r\n            return Object.keys(STORAGE.users[username].games);\r\n        return null;\r\n    }\r\n\r\n    static getUserGameOrders(username, gameID, gamePhase) {\r\n        DipStorage.load();\r\n        if (STORAGE.users[username] && STORAGE.users[username].games[gameID]\r\n            && STORAGE.users[username].games[gameID].phase === gamePhase)\r\n            return Object.assign({}, STORAGE.users[username].games[gameID].local_orders);\r\n        return null;\r\n    }\r\n\r\n    static setConnectionUsername(username) {\r\n        DipStorage.load();\r\n        STORAGE.global.connection.username = username;\r\n        DipStorage.save();\r\n    }\r\n\r\n    static setConnectionHostname(hostname) {\r\n        DipStorage.load();\r\n        STORAGE.global.connection.hostname = hostname;\r\n        DipStorage.save();\r\n    }\r\n\r\n    static setConnectionPort(port) {\r\n        DipStorage.load();\r\n        STORAGE.global.connection.port = port;\r\n        DipStorage.save();\r\n    }\r\n\r\n    static setConnectionshowServerFields(showServerFields) {\r\n        DipStorage.load();\r\n        STORAGE.global.connection.showServerFields = showServerFields;\r\n        DipStorage.save();\r\n    }\r\n\r\n    static addUserGame(username, gameID) {\r\n        DipStorage.load();\r\n        if (!STORAGE.users[username])\r\n            STORAGE.users[username] = {games: {}};\r\n        if (!STORAGE.users[username].games[gameID])\r\n            STORAGE.users[username].games[gameID] = {phase: null, local_orders: {}};\r\n        DipStorage.save();\r\n    }\r\n\r\n    static addUserGameOrders(username, gameID, gamePhase, powerName, orders) {\r\n        DipStorage.addUserGame(username, gameID);\r\n        if (STORAGE.users[username].games[gameID].phase !== gamePhase)\r\n            STORAGE.users[username].games[gameID] = {phase: null, local_orders: {}};\r\n        STORAGE.users[username].games[gameID].phase = gamePhase;\r\n        STORAGE.users[username].games[gameID].local_orders[powerName] = orders;\r\n        DipStorage.save();\r\n    }\r\n\r\n    static removeUserGame(username, gameID) {\r\n        DipStorage.load();\r\n        if (STORAGE.users[username] && STORAGE.users[username].games[gameID]) {\r\n            delete STORAGE.users[username].games[gameID];\r\n            DipStorage.save();\r\n        }\r\n    }\r\n\r\n    static clearUserGameOrders(username, gameID, powerName) {\r\n        DipStorage.addUserGame(username, gameID);\r\n        if (powerName) {\r\n            if (STORAGE.users[username].games[gameID].local_orders[powerName])\r\n                delete STORAGE.users[username].games[gameID].local_orders[powerName];\r\n        } else {\r\n            STORAGE.users[username].games[gameID] = {phase: null, local_orders: {}};\r\n        }\r\n        DipStorage.save();\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from 'react';\r\nimport {Forms} from \"../components/forms\";\r\nimport {UTILS} from \"../../diplomacy/utils/utils\";\r\nimport PropTypes from \"prop-types\";\r\nimport {DipStorage} from \"../utils/dipStorage\";\r\n\r\nexport class ConnectionForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Load fields values from local storage.\r\n        const initialState = this.initState();\r\n        const savedState = DipStorage.getConnectionForm();\r\n        if (savedState) {\r\n            if (savedState.hostname)\r\n                initialState.hostname = savedState.hostname;\r\n            if (savedState.port)\r\n                initialState.port = savedState.port;\r\n            if (savedState.username)\r\n                initialState.username = savedState.username;\r\n            if (savedState.showServerFields)\r\n                initialState.showServerFields = savedState.showServerFields;\r\n        }\r\n        this.state = initialState;\r\n        this.updateServerFieldsView = this.updateServerFieldsView.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    initState() {\r\n        return {\r\n            // hostname: window.location.hostname,\r\n            hostname: \"shade.tacc.utexas.edu\",\r\n            port: (window.location.protocol.toLowerCase() === 'https:') ? 8433 : 8432,\r\n            username: '',\r\n            password: '',\r\n            showServerFields: false\r\n        };\r\n    }\r\n\r\n    updateServerFieldsView() {\r\n        DipStorage.setConnectionshowServerFields(!this.state.showServerFields);\r\n        this.setState({showServerFields: !this.state.showServerFields});\r\n    }\r\n\r\n    onChange(newState) {\r\n        const initialState = this.initState();\r\n        if (newState.hostname !== initialState.hostname)\r\n            DipStorage.setConnectionHostname(newState.hostname);\r\n        else\r\n            DipStorage.setConnectionHostname(null);\r\n        if (newState.port !== initialState.port)\r\n            DipStorage.setConnectionPort(newState.port);\r\n        else\r\n            DipStorage.setConnectionPort(null);\r\n        if (newState.username !== initialState.username)\r\n            DipStorage.setConnectionUsername(newState.username);\r\n        else\r\n            DipStorage.setConnectionUsername(null);\r\n        if (this.props.onChange)\r\n            this.props.onChange(newState);\r\n    }\r\n\r\n    render() {\r\n        const onChange = Forms.createOnChangeCallback(this, this.onChange);\r\n        const onSubmit = Forms.createOnSubmitCallback(this, this.props.onSubmit);\r\n        return (\r\n            <form>\r\n                {Forms.createRow(\r\n                    Forms.createColLabel('username', 'username:'),\r\n                    <input className={'form-control'} type={'text'} id={'username'}\r\n                           value={Forms.getValue(this.state, 'username')} onChange={onChange}/>\r\n                )}\r\n                {Forms.createRow(\r\n                    Forms.createColLabel('password', 'password:'),\r\n                    <input className={'form-control'} type={'password'} id={'password'}\r\n                           value={Forms.getValue(this.state, 'password')} onChange={onChange}/>\r\n                )}\r\n                <div>\r\n                    <div className={this.state.showServerFields ? 'mb-2' : 'mb-4'}>\r\n                    <span className={'button-server'} onClick={this.updateServerFieldsView}>\r\n                        server settings {this.state.showServerFields ? UTILS.html.UNICODE_BOTTOM_ARROW : UTILS.html.UNICODE_TOP_ARROW}\r\n                    </span>\r\n                    </div>\r\n                    {this.state.showServerFields && (\r\n                        <div className={'mb-4'}>\r\n                            {Forms.createRow(\r\n                                <label className={'col'} htmlFor={'hostname'}>hostname:</label>,\r\n                                <input className={'form-control'} type={'text'} id={'hostname'}\r\n                                       value={Forms.getValue(this.state, 'hostname')} onChange={onChange}/>\r\n                            )}\r\n                            {Forms.createRow(\r\n                                <label className={'col'} htmlFor={'port'}>port:</label>,\r\n                                <input className={'form-control'} type={'number'} id={'port'}\r\n                                       value={Forms.getValue(this.state, 'port')}\r\n                                       onChange={onChange}/>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {Forms.createRow('', Forms.createSubmit('connect', true, onSubmit))}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nConnectionForm.propTypes = {\r\n    onChange: PropTypes.func,\r\n    onSubmit: PropTypes.func\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport Octicon, {Person} from \"@primer/octicons-react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Navigation extends React.Component {\r\n    render() {\r\n        const hasNavigation = this.props.navigation && this.props.navigation.length;\r\n        if (hasNavigation) {\r\n            return (\r\n                <div className={'title row'}>\r\n                    <div className={'col align-self-center'}>\r\n                        <strong>{this.props.title}</strong>\r\n                        {this.props.afterTitle ? this.props.afterTitle : ''}\r\n                    </div>\r\n                    <div className={'col-sm-1'}>\r\n                        {(!hasNavigation && (\r\n                            <div className={'float-right'}>\r\n                                <strong>\r\n                                    <u className={'mr-2'}>{this.props.username}</u>\r\n                                    <Octicon icon={Person}/>\r\n                                </strong>\r\n                            </div>\r\n                        )) || (\r\n                            <div className=\"dropdown float-right\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\r\n                                        id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    {(this.props.username && (\r\n                                        <span>\r\n                                                <u className={'mr-2'}>{this.props.username}</u>\r\n                                                <Octicon icon={Person}/>\r\n                                            </span>\r\n                                    )) || 'Menu'}\r\n                                </button>\r\n                                <div className=\"dropdown-menu dropdown-menu-right\"\r\n                                     aria-labelledby=\"dropdownMenuButton\">\r\n                                    {this.props.navigation.map((nav, index) => {\r\n                                        const navTitle = nav[0];\r\n                                        const navAction = nav[1];\r\n                                        return <span key={index} className=\"dropdown-item\"\r\n                                                     onClick={navAction}>{navTitle}</span>;\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className={'title'}><strong>{this.props.title}</strong></div>\r\n        );\r\n    }\r\n}\r\n\r\nNavigation.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    afterTitle: PropTypes.object,\r\n    navigation: PropTypes.array,\r\n    username: PropTypes.string,\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\n\r\nexport const PageContext = React.createContext(null);\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from 'react';\r\nimport {Connection} from \"../../diplomacy/client/connection\";\r\nimport {ConnectionForm} from \"../forms/connection_form\";\r\nimport {DipStorage} from \"../utils/dipStorage\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport {Navigation} from \"../components/navigation\";\r\nimport {PageContext} from \"../components/page_context\";\r\n\r\nexport class ContentConnection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.connection = null;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit(data) {\r\n        const page = this.context;\r\n        for (let fieldName of ['hostname', 'port', 'username', 'password', 'showServerFields'])\r\n            if (!data.hasOwnProperty(fieldName))\r\n                return page.error(`Missing ${fieldName}, got ${JSON.stringify(data)}`);\r\n        page.info('Connecting ...');\r\n        if (this.connection) {\r\n            this.connection.currentConnectionProcessing.stop();\r\n        }\r\n        this.connection = new Connection(data.hostname, data.port, window.location.protocol.toLowerCase() === 'https:');\r\n        this.connection.onReconnectionError = page.onReconnectionError;\r\n        // Page is passed as logger object (with methods info(), error(), success()) when connecting.\r\n        this.connection.connect(page)\r\n            .then(() => {\r\n                page.connection = this.connection;\r\n                this.connection = null;\r\n                page.success(`Successfully connected to server ${data.username}:${data.port}`);\r\n                page.connection.authenticate(data.username, data.password)\r\n                    .then((channel) => {\r\n                        page.channel = channel;\r\n                        return channel.getAvailableMaps();\r\n                    })\r\n                    .then(availableMaps => {\r\n                        for (let mapName of Object.keys(availableMaps))\r\n                            availableMaps[mapName].powers.sort();\r\n                        page.availableMaps = availableMaps;\r\n                        const userGameIndices = DipStorage.getUserGames(page.channel.username);\r\n                        if (userGameIndices && userGameIndices.length) {\r\n                            return page.channel.getGamesInfo({games: userGameIndices});\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    })\r\n                    .then((gamesInfo) => {\r\n                        if (gamesInfo) {\r\n                            page.success('Found ' + gamesInfo.length + ' user games.');\r\n                            page.updateMyGames(gamesInfo);\r\n                        }\r\n                        page.loadGames({success: `Account ${data.username} connected.`});\r\n                    })\r\n                    .catch((error) => {\r\n                        page.error('Error while authenticating: ' + error + ' Please re-try.');\r\n                    });\r\n            })\r\n            .catch((error) => {\r\n                page.error('Error while connecting: ' + error + ' Please re-try.');\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const title = 'Connection';\r\n        return (\r\n            <main>\r\n                <Helmet>\r\n                    <title>{title} | Diplomacy</title>\r\n                </Helmet>\r\n                <Navigation title={title}/>\r\n                <ConnectionForm onSubmit={this.onSubmit}/>\r\n            </main>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n}\r\n\r\nContentConnection.contextType = PageContext;\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport class Action extends React.Component {\r\n    // title\r\n    // isActive\r\n    // onClick\r\n    // See Button parameters.\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"action nav-item\" onClick={this.props.onClick}>\r\n                <div\r\n                    className={'nav-link' + (this.props.isActive ? ' active' : '') + (this.props.highlight !== null ? ' updated' : '')}>\r\n                    {this.props.title}\r\n                    {this.props.highlight !== null\r\n                    && this.props.highlight !== undefined\r\n                    && <span className={'update'}>{this.props.highlight}</span>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAction.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    highlight: PropTypes.any,\r\n    isActive: PropTypes.bool\r\n};\r\n\r\nAction.defaultProps = {\r\n    highlight: null,\r\n    isActive: false\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {Action} from \"./action\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Tabs extends React.Component {\r\n    /** PROPERTIES\r\n     * active: index of active menu (must be > menu.length).\r\n     * highlights: dictionary mapping a menu indice to a highlight message\r\n     * onChange: callback(index): receive index of menu to display.\r\n     * **/\r\n\r\n    generateTabAction(tabTitle, tabId, isActive, onChange, highlight) {\r\n        return <Action isActive={isActive}\r\n                       title={tabTitle}\r\n                       onClick={() => onChange(tabId)}\r\n                       highlight={highlight}\r\n                       key={tabId}/>;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.menu.length)\r\n            throw new Error(`No tab menu given.`);\r\n        if (this.props.menu.length !== this.props.titles.length)\r\n            throw new Error(`Menu length (${this.props.menu.length}) != titles length (${this.props.titles.length})`);\r\n        if (this.props.active && !this.props.menu.includes(this.props.active))\r\n            throw new Error(`Invalid active tab name, got ${this.props.active}, expected one of: ${this.props.menu.join(', ')}`);\r\n        const active = this.props.active || this.props.menu[0];\r\n        return (\r\n            <div className={'tabs mb-3'}>\r\n                <nav className={'tabs-bar nav nav-tabs justify-content-center mb-3'}>\r\n                    {this.props.menu.map((tabName, index) => this.generateTabAction(\r\n                        this.props.titles[index], tabName, active === tabName, this.props.onChange,\r\n                        (this.props.highlights.hasOwnProperty(tabName) && this.props.highlights[tabName]) || null\r\n                    ))}\r\n                </nav>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTabs.propTypes = {\r\n    menu: PropTypes.arrayOf(PropTypes.string).isRequired, // tab names\r\n    titles: PropTypes.arrayOf(PropTypes.string).isRequired, // tab titles\r\n    onChange: PropTypes.func.isRequired, // callback(tab name)\r\n    children: PropTypes.array.isRequired,\r\n    active: PropTypes.string, // current active tab name\r\n    highlights: PropTypes.object, // {tab name => highligh message (optional)}\r\n};\r\n\r\nTabs.defaultProps = {\r\n    highlights: {}\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n//// Tables.\r\n\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DefaultWrapper {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    get(fieldName) {\r\n        return this.data[fieldName];\r\n    }\r\n}\r\n\r\nfunction defaultWrapper(data) {\r\n    return new DefaultWrapper(data);\r\n}\r\n\r\nexport class Table extends React.Component {\r\n    // className\r\n    // caption\r\n    // columns : {name: [title, order]}\r\n    // data: [objects with expected column names]\r\n    // wrapper: (optional) function to use to wrap one data entry into an object before accessing fields.\r\n    // Must return an instance with a method get(name).\r\n    // If provided: wrapper(data_entry).get(field_name)\r\n    // else: data_entry[field_name]\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (!this.props.wrapper)\r\n            this.props.wrapper = defaultWrapper;\r\n    }\r\n\r\n    static getHeader(columns) {\r\n        const header = [];\r\n        for (let entry of Object.entries(columns)) {\r\n            const name = entry[0];\r\n            const title = entry[1][0];\r\n            const order = entry[1][1];\r\n            header.push([order, name, title]);\r\n        }\r\n        header.sort((a, b) => {\r\n            let t = a[0] - b[0];\r\n            if (t === 0)\r\n                t = a[1].localeCompare(b[1]);\r\n            if (t === 0)\r\n                t = a[2].localeCompare(b[2]);\r\n            return t;\r\n        });\r\n        return header;\r\n    }\r\n\r\n    static getHeaderLine(header) {\r\n        return (\r\n            <thead className={'thead-light'}>\r\n            <tr>{header.map((column, colIndex) => <th key={colIndex}>{column[2]}</th>)}</tr>\r\n            </thead>\r\n        );\r\n    }\r\n\r\n    static getBodyRow(header, row, rowIndex, wrapper) {\r\n        const wrapped = wrapper(row);\r\n        return (<tr key={rowIndex}>\r\n            {header.map((headerColumn, colIndex) => <td className={'align-middle'}\r\n                                                        key={colIndex}>{wrapped.get(headerColumn[1])}</td>)}\r\n        </tr>);\r\n    }\r\n\r\n    static getBodyLines(header, data, wrapper) {\r\n        return (<tbody>{data.map((row, rowIndex) => Table.getBodyRow(header, row, rowIndex, wrapper))}</tbody>);\r\n    }\r\n\r\n    render() {\r\n        const header = Table.getHeader(this.props.columns);\r\n        return (\r\n            <div className={'table-responsive'}>\r\n                <table className={this.props.className}>\r\n                    <caption>{this.props.caption} ({this.props.data.length})</caption>\r\n                    {Table.getHeaderLine(header)}\r\n                    {Table.getBodyLines(header, this.props.data, this.props.wrapper)}\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTable.propTypes = {\r\n    wrapper: PropTypes.func,\r\n    columns: PropTypes.object,\r\n    className: PropTypes.string,\r\n    caption: PropTypes.string,\r\n    data: PropTypes.array\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from 'react';\r\nimport {Forms} from \"../components/forms\";\r\nimport {STRINGS} from \"../../diplomacy/utils/strings\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class FindForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initState();\r\n    }\r\n\r\n    initState() {\r\n        return {\r\n            game_id: '',\r\n            status: '',\r\n            include_protected: false,\r\n            for_omniscience: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const onChange = Forms.createOnChangeCallback(this, this.props.onChange);\r\n        const onSubmit = Forms.createOnSubmitCallback(this, this.props.onSubmit);\r\n        return (\r\n            <form>\r\n                {Forms.createRow(\r\n                    Forms.createColLabel('game_id', 'game id (should contain):'),\r\n                    <input className={'form-control'} id={'game_id'} type={'text'}\r\n                           value={Forms.getValue(this.state, 'game_id')}\r\n                           onChange={onChange}/>\r\n                )}\r\n                {Forms.createRow(\r\n                    Forms.createColLabel('status', 'status:'),\r\n                    (<select className={'form-control custom-select'}\r\n                             id={'status'} value={Forms.getValue(this.state, 'status')} onChange={onChange}>\r\n                        {Forms.createSelectOptions(STRINGS.ALL_GAME_STATUSES, true)}\r\n                    </select>)\r\n                )}\r\n                <div className={'form-check'}>\r\n                    {Forms.createCheckbox('include_protected', 'include protected games.', Forms.getValue(this.state, 'include_protected'), onChange)}\r\n                </div>\r\n                <div className={'form-check mb-4'}>\r\n                    {Forms.createCheckbox('for_omniscience', 'for omniscience.', Forms.getValue(this.state, 'for_omniscience'), onChange)}\r\n                </div>\r\n                {Forms.createRow('', Forms.createSubmit('find games', true, onSubmit))}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nFindForm.propTypes = {\r\n    onChange: PropTypes.func,\r\n    onSubmit: PropTypes.func\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from 'react';\r\nimport {Forms} from \"../components/forms\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class JoinForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initState();\r\n    }\r\n\r\n    initState() {\r\n        return {\r\n            [this.getPowerNameID()]: this.getDefaultPowerName(),\r\n            [this.getPasswordID()]: ''\r\n        };\r\n    }\r\n\r\n    getPowerNameID() {\r\n        return `power_name_${this.props.game_id}`;\r\n    }\r\n\r\n    getPasswordID() {\r\n        return `registration_password_${this.props.game_id}`;\r\n    }\r\n\r\n    getDefaultPowerName() {\r\n        return (this.props.powers && this.props.powers.length && this.props.powers[0]) || '';\r\n    }\r\n\r\n    render() {\r\n        const onChange = Forms.createOnChangeCallback(this, this.props.onChange);\r\n        const onSubmit = Forms.createOnSubmitCallback(this, this.props.onSubmit);\r\n        return (\r\n            <form className={'form-inline'}>\r\n                <div className={'form-group mr-2'}>\r\n                    {Forms.createLabel(this.getPowerNameID(), 'Power:')}\r\n                    <select id={this.getPowerNameID()} className={'from-control custom-select ml-2'}\r\n                            value={Forms.getValue(this.state, this.getPowerNameID())} onChange={onChange}>\r\n                        {Forms.createSelectOptions(this.props.availablePowers, true)}\r\n                    </select>\r\n                </div>\r\n                {this.props.password_required ? (\r\n                    <div className={'form-group mr-2'}>\r\n                        {Forms.createLabel(this.getPasswordID(), '', 'sr-only')}\r\n                        <input id={this.getPasswordID()} type={'password'} className={'form-control'}\r\n                               placeholder={'registration password'}\r\n                               value={Forms.getValue(this.state, this.getPasswordID())}\r\n                               onChange={onChange}/>\r\n                    </div>\r\n                ) : ''}\r\n                {Forms.createSubmit('join', false, onSubmit)}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nJoinForm.propTypes = {\r\n    game_id: PropTypes.string.isRequired,\r\n    password_required: PropTypes.bool.isRequired,\r\n    powers: PropTypes.arrayOf(PropTypes.string),\r\n    availablePowers: PropTypes.arrayOf(PropTypes.string),\r\n    onChange: PropTypes.func,\r\n    onSubmit: PropTypes.func\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from \"./button\";\r\n\r\nconst TIMES = '\\u00D7';\r\n\r\nexport class FancyBox extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"fancy-box\">\r\n                <div className=\"fancy-bar p-1 d-flex flex-row\">\r\n                    <div\r\n                        className=\"flex-grow-1 fancy-title d-flex flex-column justify-content-center pr-0 pr-sm-1\">{this.props.title}</div>\r\n                    <div className=\"fancy-button\">\r\n                        <Button title={TIMES} color={'danger'} onClick={this.props.onClose}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"fancy-content p-2\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nFancyBox.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    children: PropTypes.any.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Button} from \"../components/button\";\r\nimport {FancyBox} from \"../components/fancyBox\";\r\n\r\nexport class SelectLocationForm extends React.Component {\r\n    render() {\r\n        const title = `Select location to continue building order: ${this.props.path.join(' ')}`;\r\n        return (\r\n            <FancyBox title={title} onClose={this.props.onClose}>\r\n                <div>\r\n                    {this.props.locations.map((location, index) => (\r\n                        <Button key={index} title={location} large={true}\r\n                                onClick={() => this.props.onSelect(location)}/>\r\n                    ))}\r\n                </div>\r\n            </FancyBox>\r\n        );\r\n    }\r\n}\r\n\r\nSelectLocationForm.propTypes = {\r\n    locations: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onSelect: PropTypes.func.isRequired, // onSelect(location)\r\n    onClose: PropTypes.func.isRequired,\r\n    path: PropTypes.array.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Button} from \"../components/button\";\r\nimport {FancyBox} from \"../components/fancyBox\";\r\n\r\nconst HotKey = require('react-shortcut');\r\n\r\nexport class SelectViaForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <FancyBox title={`Select move type for move order: ${this.props.path.join(' ')}`}\r\n                      onClose={this.props.onClose}>\r\n                <div>\r\n                    <Button title={'regular move (M)'} large={true} onClick={() => this.props.onSelect('M')}/>\r\n                    <Button title={'move via (V)'} large={true} onClick={() => this.props.onSelect('V')}/>\r\n                    <HotKey keys={['m']} onKeysCoincide={() => this.props.onSelect('M')}/>\r\n                    <HotKey keys={['v']} onKeysCoincide={() => this.props.onSelect('V')}/>\r\n                </div>\r\n            </FancyBox>\r\n        );\r\n    }\r\n}\r\n\r\nSelectViaForm.propTypes = {\r\n    path: PropTypes.array.isRequired,\r\n    onSelect: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Div extends React.Component {\r\n    getClassName() {\r\n        return '';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.getClassName() + (this.props.className ? ' ' + this.props.className : '')}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDiv.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\r\n};\r\n\r\nexport class Bar extends Div {\r\n    getClassName() {\r\n        return 'bar';\r\n    }\r\n}\r\n\r\nexport class Row extends Div {\r\n    getClassName() {\r\n        return 'row';\r\n    }\r\n}\r\n\r\nexport class Col extends Div {\r\n    getClassName() {\r\n        return 'col';\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n/*eslint no-unused-vars: [\"error\", { \"args\": \"none\" }]*/\r\n\r\nfunction assertLength(expected, given) {\r\n    if (expected !== given)\r\n        throw new Error(`Length error: expected ${expected}, given ${given}.`);\r\n}\r\n\r\nexport class ProvinceCheck {\r\n\r\n    static retreated(province, powerName) {\r\n        const retreatProvince = province.getRetreated(powerName);\r\n        if (!retreatProvince)\r\n            throw new Error(`No retreated location at province ${province.name}.`);\r\n        // No confusion possible, we select the only occupied location at this province.\r\n        return [retreatProvince.retreatUnit];\r\n    }\r\n\r\n    static present(province, powerName) {\r\n        let unit = null;\r\n        let presenceProvince = province.getOccupied(powerName);\r\n        if (presenceProvince) {\r\n            unit = `${presenceProvince.unit} ${presenceProvince.name}`;\r\n        } else {\r\n            presenceProvince = province.getRetreated(powerName);\r\n            if (!presenceProvince)\r\n                throw new Error(`No unit or retreat at province ${province.name}.`);\r\n            unit = presenceProvince.retreatUnit;\r\n        }\r\n        return [unit];\r\n    }\r\n\r\n    static occupied(province, powerName) {\r\n        const occupiedProvince = province.getOccupied(powerName);\r\n        if (!occupiedProvince)\r\n            throw new Error(`No occupied location at province ${province.name}.`);\r\n        // No confusion possible, we select the only occupied location at this province.\r\n        const unit = occupiedProvince.unit;\r\n        const name = occupiedProvince.name.toUpperCase();\r\n        return [`${unit} ${name}`];\r\n    }\r\n\r\n    static occupiedByAny(province, unusedPowerName) {\r\n        return ProvinceCheck.occupied(province, null);\r\n    }\r\n\r\n    static any(province, unusedPowerName) {\r\n        // There may be many locations available for a province (e.g. many coasts).\r\n        return province.getLocationNames();\r\n    }\r\n\r\n    static buildOrder(path) {\r\n        switch (path[0]) {\r\n            case 'H':\r\n                return ProvinceCheck.holdToString(path);\r\n            case 'M':\r\n                return ProvinceCheck.moveToString(path);\r\n            case 'V':\r\n                return ProvinceCheck.moveViaToString(path);\r\n            case 'S':\r\n                return ProvinceCheck.supportToString(path);\r\n            case 'C':\r\n                return ProvinceCheck.convoyToString(path);\r\n            case 'R':\r\n                return ProvinceCheck.retreatToString(path);\r\n            case 'D':\r\n                return ProvinceCheck.disbandToString(path);\r\n            case 'A':\r\n                return ProvinceCheck.buildArmyToString(path);\r\n            case 'F':\r\n                return ProvinceCheck.buildFleetToString(path);\r\n            default:\r\n                throw new Error('Unable to build order from path ' + JSON.stringify(path));\r\n        }\r\n    }\r\n\r\n    static holdToString(path) {\r\n        assertLength(2, path.length);\r\n        return `${path[1]} ${path[0]}`;\r\n    }\r\n\r\n    static moveToString(path) {\r\n        assertLength(3, path.length);\r\n        return `${path[1]} - ${path[2]}`;\r\n    }\r\n\r\n    static moveViaToString(path) {\r\n        return ProvinceCheck.moveToString(path) + ' VIA';\r\n    }\r\n\r\n    static supportToString(path) {\r\n        assertLength(4, path.length);\r\n        let order = `${path[1]} ${path[0]} ${path[2]}`;\r\n        if (path[2].substr(2) !== path[3])\r\n            order += ` - ${path[3]}`;\r\n        return order;\r\n    }\r\n\r\n    static convoyToString(path) {\r\n        assertLength(4, path.length);\r\n        return `${path[1]} ${path[0]} ${path[2]} - ${path[3]}`;\r\n    }\r\n\r\n    static retreatToString(path) {\r\n        assertLength(3, path.length);\r\n        return `${path[1]} ${path[0]} ${path[2]}`;\r\n    }\r\n\r\n    static disbandToString(path) {\r\n        assertLength(2, path.length);\r\n        return `${path[1]} ${path[0]}`;\r\n    }\r\n\r\n    static buildArmyToString(path) {\r\n        assertLength(2, path.length);\r\n        return `${path[0]} ${path[1]} B`;\r\n    }\r\n\r\n    static buildFleetToString(path) {\r\n        assertLength(2, path.length);\r\n        return `${path[0]} ${path[1]} B`;\r\n    }\r\n\r\n}\r\n\r\nexport const ORDER_BUILDER = {\r\n    H: {\r\n        name: 'hold (H)',\r\n        steps: [ProvinceCheck.occupied]\r\n    },\r\n    M: {\r\n        name: 'move (M)',\r\n        steps: [ProvinceCheck.occupied, ProvinceCheck.any]\r\n    },\r\n    V: {\r\n        name: 'move VIA (V)',\r\n        steps: [ProvinceCheck.occupied, ProvinceCheck.any]\r\n    },\r\n    S: {\r\n        name: 'support (S)',\r\n        steps: [ProvinceCheck.occupied, ProvinceCheck.occupiedByAny, ProvinceCheck.any]\r\n    },\r\n    C: {\r\n        name: 'convoy (C)',\r\n        steps: [ProvinceCheck.occupied, ProvinceCheck.occupiedByAny, ProvinceCheck.any]\r\n    },\r\n    R: {\r\n        name: 'retreat (R)',\r\n        steps: [ProvinceCheck.retreated, ProvinceCheck.any]\r\n    },\r\n    D: {\r\n        name: 'disband (D)',\r\n        steps: [ProvinceCheck.present]\r\n    },\r\n    A: {\r\n        name: 'build army (A)',\r\n        steps: [ProvinceCheck.any]\r\n    },\r\n    F: {\r\n        name: 'build fleet (F)',\r\n        steps: [ProvinceCheck.any]\r\n    },\r\n};\r\n\r\nexport const POSSIBLE_ORDERS = {\r\n    // Allowed orders for movement phase step.\r\n    M: ['H', 'M', 'V', 'S', 'C'],\r\n    // Allowed orders for retreat phase step.\r\n    R: ['R', 'D'],\r\n    // Allowed orders for adjustment phase step.\r\n    A: ['D', 'A', 'F'],\r\n    sorting: {\r\n        M: {M: 0, V: 1, S: 2, C: 3, H: 4},\r\n        R: {R: 0, D: 1},\r\n        A: {A: 0, F: 1, D: 2}\r\n    },\r\n    sortOrderTypes: function (arr, phaseType) {\r\n        arr.sort((a, b) => POSSIBLE_ORDERS.sorting[phaseType][a] - POSSIBLE_ORDERS.sorting[phaseType][b]);\r\n    }\r\n};\r\n\r\nexport function extendOrderBuilding(powerName, orderType, currentOrderPath, location, onBuilding, onBuilt, onError) {\r\n    const selectedPath = [orderType].concat(currentOrderPath, location);\r\n    if (selectedPath.length - 1 < ORDER_BUILDER[orderType].steps.length) {\r\n        // Checker OK, update.\r\n        onBuilding(powerName, selectedPath);\r\n    } else {\r\n        try {\r\n            // Order created.\r\n            const orderString = ProvinceCheck.buildOrder(selectedPath);\r\n            onBuilt(powerName, orderString);\r\n        } catch (error) {\r\n            onError(error.toString());\r\n        }\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from 'react';\r\nimport {Forms} from \"../components/forms\";\r\nimport {ORDER_BUILDER} from \"../utils/order_building\";\r\nimport {STRINGS} from \"../../diplomacy/utils/strings\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Power} from \"../../diplomacy/engine/power\";\r\n\r\nconst HotKey = require('react-shortcut');\r\n\r\nexport class PowerOrderCreationForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initState();\r\n    }\r\n\r\n    initState() {\r\n        return {order_type: this.props.orderType};\r\n    }\r\n\r\n    render() {\r\n        const onChange = Forms.createOnChangeCallback(this, this.props.onChange);\r\n        const onReset = Forms.createOnResetCallback(this, this.props.onChange, this.initState());\r\n        const onSetOrderType = (letter) => {\r\n            this.setState({order_type: letter}, () => {\r\n                if (this.props.onChange)\r\n                    this.props.onChange(this.state);\r\n            });\r\n        };\r\n        let title = '';\r\n        let titleClass = 'mr-4';\r\n        const header = [];\r\n        const votes = [];\r\n        if (this.props.orderTypes.length) {\r\n            title = 'Create order:';\r\n            header.push(...this.props.orderTypes.map((orderLetter, index) => (\r\n                <div key={index} className={'form-check-inline'}>\r\n                    {Forms.createRadio('order_type', orderLetter, ORDER_BUILDER[orderLetter].name, this.props.orderType, onChange)}\r\n                </div>\r\n            )));\r\n            header.push(Forms.createReset('reset', false, onReset));\r\n        } else if (this.props.power.order_is_set) {\r\n            title = 'Unorderable power.';\r\n            titleClass += ' neutral';\r\n        } else {\r\n            title = 'No orders available for this power.';\r\n        }\r\n        if (!this.props.power.order_is_set) {\r\n            header.push(Forms.createButton('pass', this.props.onPass));\r\n        }\r\n\r\n        if (this.props.role !== STRINGS.OMNISCIENT_TYPE) {\r\n            votes.push(<strong key={0} className={'ml-4 mr-2'}>Vote for draw:</strong>);\r\n            switch (this.props.power.vote) {\r\n                case 'yes':\r\n                    votes.push(Forms.createButton('no', () => this.props.onVote('no'), 'danger'));\r\n                    votes.push(Forms.createButton('neutral', () => this.props.onVote('neutral'), 'info'));\r\n                    break;\r\n                case 'no':\r\n                    votes.push(Forms.createButton('yes', () => this.props.onVote('yes'), 'success'));\r\n                    votes.push(Forms.createButton('neutral', () => this.props.onVote('neutral'), 'info'));\r\n                    break;\r\n                case 'neutral':\r\n                    votes.push(Forms.createButton('yes', () => this.props.onVote('yes'), 'success'));\r\n                    votes.push(Forms.createButton('no', () => this.props.onVote('no'), 'danger'));\r\n                    break;\r\n                default:\r\n                    votes.push(Forms.createButton('yes', () => this.props.onVote('yes'), 'success'));\r\n                    votes.push(Forms.createButton('no', () => this.props.onVote('no'), 'danger'));\r\n                    votes.push(Forms.createButton('neutral', () => this.props.onVote('neutral'), 'info'));\r\n                    break;\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <div><strong key={'title'} className={titleClass}>{title}</strong></div>\r\n                <form className={'form-inline power-actions-form'}>\r\n                    {header}\r\n                    {Forms.createButton(\r\n                        (this.props.power.wait ? 'no wait' : 'wait'),\r\n                        this.props.onSetWaitFlag,\r\n                        (this.props.power.wait ? 'success' : 'danger')\r\n                    )}\r\n                    {votes}\r\n                    <HotKey keys={['escape']} onKeysCoincide={onReset}/>\r\n                    {this.props.orderTypes.map((letter, index) => (\r\n                        <HotKey key={index} keys={[letter.toLowerCase()]}\r\n                                onKeysCoincide={() => onSetOrderType(letter)}/>\r\n                    ))}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPowerOrderCreationForm.propTypes = {\r\n    orderType: PropTypes.oneOf(Object.keys(ORDER_BUILDER)),\r\n    orderTypes: PropTypes.arrayOf(PropTypes.oneOf(Object.keys(ORDER_BUILDER))),\r\n    power: PropTypes.instanceOf(Power),\r\n    role: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onSubmit: PropTypes.func,\r\n    onPass: PropTypes.func, // onPass(), to submit empty orders set (powers want to do nothing at this phase)\r\n    onVote: PropTypes.func, // onVote(voteString)\r\n    onSetWaitFlag: PropTypes.func, // onSetWaitFlag(),\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from 'react';\r\nimport {Forms} from \"../components/forms\";\r\nimport {UTILS} from \"../../diplomacy/utils/utils\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class MessageForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initState();\r\n    }\r\n\r\n    initState() {\r\n        return {message: ''};\r\n    }\r\n\r\n    render() {\r\n        const onChange = Forms.createOnChangeCallback(this, this.props.onChange);\r\n        const onSubmit = Forms.createOnSubmitCallback(this, this.props.onSubmit, this.initState());\r\n        return (\r\n            <form>\r\n                <div className={'form-group'}>\r\n                    {Forms.createLabel('message', '', 'sr-only')}\r\n                    <textarea id={'message'} className={'form-control'}\r\n                              value={Forms.getValue(this.state, 'message')} onChange={onChange}/>\r\n                </div>\r\n                {Forms.createSubmit(`send (${this.props.sender} ${UTILS.html.UNICODE_SMALL_RIGHT_ARROW} ${this.props.recipient})`, true, onSubmit)}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nMessageForm.propTypes = {\r\n    sender: PropTypes.string,\r\n    recipient: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onSubmit: PropTypes.func\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from \"./button\";\r\n\r\nexport class PowerOrders extends React.Component {\r\n    render() {\r\n        const orderEntries = this.props.orders ? Object.entries(this.props.orders) : null;\r\n        let display = null;\r\n        if (orderEntries) {\r\n            if (orderEntries.length) {\r\n                orderEntries.sort((a, b) => a[1].order.localeCompare(b[1].order));\r\n                display = (\r\n                    <div className={'container order-list'}>\r\n                        {orderEntries.map((entry, index) => (\r\n                            <div\r\n                                className={`row order-entry entry-${1 + index % 2} ` + (entry[1].local ? 'local' : 'server')}\r\n                                key={index}>\r\n                                <div className={'col align-self-center order'}>\r\n                                    <span className={'order-string'}>{entry[1].order}</span>\r\n                                    {entry[1].local ? '' : <span className={'order-mark'}> [S]</span>}\r\n                                </div>\r\n                                <div className={'col remove-button'}>\r\n                                    <Button title={'-'} onClick={() => this.props.onRemove(this.props.name, entry[1])}/>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                );\r\n            } else if (this.props.serverCount === 0) {\r\n                display = (<div className={'empty-orders'}>Empty orders set</div>);\r\n            } else {\r\n                display = (<div className={'empty-orders'}>Local empty orders set</div>);\r\n            }\r\n        } else {\r\n            if (this.props.serverCount < 0) {\r\n                display = <div className={'no-orders'}>No orders!</div>;\r\n            } else {\r\n                display = <div className={'empty-orders'}>Asking to unset orders</div>;\r\n            }\r\n        }\r\n        return (\r\n            <div className={'power-orders'}>\r\n                <div className={'title'}>\r\n                    <span className={'name'}>{this.props.name}</span>\r\n                    <span className={this.props.wait ? 'wait' : 'no-wait'}>\r\n                        {(this.props.wait ? ' ' : ' not') + ' waiting'}\r\n                    </span>\r\n                </div>\r\n                {display}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPowerOrders.propTypes = {\r\n    wait: PropTypes.bool,\r\n    name: PropTypes.string,\r\n    orders: PropTypes.object,\r\n    serverCount: PropTypes.number,\r\n    onRemove: PropTypes.func,\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class MessageView extends React.Component {\r\n    // message\r\n    render() {\r\n        const message = this.props.message;\r\n        const owner = this.props.owner;\r\n        const id = this.props.id ? {id: this.props.id} : {};\r\n        const messagesLines = message.message.replace('\\r\\n', '\\n')\r\n            .replace('\\r', '\\n')\r\n            .replace('<br>', '\\n')\r\n            .replace('<br/>', '\\n')\r\n            .split('\\n');\r\n        let onClick = null;\r\n        const classNames = ['game-message', 'row'];\r\n        if (owner === message.sender)\r\n            classNames.push('message-sender');\r\n        else {\r\n            classNames.push('message-recipient');\r\n            if (message.read || this.props.read)\r\n                classNames.push('message-read');\r\n            onClick = this.props.onClick ? {onClick: () => this.props.onClick(message)} : {};\r\n        }\r\n        return (\r\n            <div className={'game-message-wrapper' + (\r\n                this.props.phase && this.props.phase !== message.phase ? ' other-phase' : ' new-phase')}\r\n                 {...id}>\r\n                <div className={classNames.join(' ')} {...onClick}>\r\n                    <div className=\"message-header col-md-auto text-md-right text-center\">\r\n                        {message.phase}\r\n                    </div>\r\n                    <div className=\"message-content col-md\">\r\n                        {messagesLines.map((line, lineIndex) => <div key={lineIndex}>{\r\n                            line.replace(/(<([^>]+)>)/ig, \"\")\r\n                        }</div>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessageView.propTypes = {\r\n    message: PropTypes.object,\r\n    phase: PropTypes.string,\r\n    owner: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    id: PropTypes.string,\r\n    read: PropTypes.bool\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {STRINGS} from \"../../diplomacy/utils/strings\";\r\nimport React from \"react\";\r\n\r\nfunction getName(power) {\r\n    if (power.isEliminated())\r\n        return <span className=\"dummy\"><em><s>{power.name.toLowerCase()}</s> (eliminated)</em></span>;\r\n    return power.name;\r\n}\r\n\r\nfunction getController(power) {\r\n    if (power.isEliminated())\r\n        return <span className=\"dummy\"><em>N/A</em></span>;\r\n    const controller = power.getController();\r\n    return <span className={controller === STRINGS.DUMMY ? 'dummy' : 'controller'}>{controller}</span>;\r\n}\r\n\r\nfunction getOrderFlag(power) {\r\n    if (power.isEliminated() || power.game.orderableLocations[power.name].length === 0)\r\n        return <span className=\"dummy\"><em>N/A</em></span>;\r\n    const value = ['no', 'empty', 'yes'][power.order_is_set];\r\n    return <span className={value}>{value}</span>;\r\n}\r\n\r\nfunction getWaitFlag(power) {\r\n    if (power.isEliminated())\r\n        return <span className=\"dummy\"><em>N/A</em></span>;\r\n    return <span className={power.wait ? 'wait' : 'no-wait'}>{power.wait ? 'yes' : 'no'}</span>;\r\n}\r\n\r\nconst GETTERS = {\r\n    name: getName,\r\n    controller: getController,\r\n    order_is_set: getOrderFlag,\r\n    wait: getWaitFlag\r\n};\r\n\r\nexport class PowerView {\r\n    constructor(power) {\r\n        this.power = power;\r\n    }\r\n\r\n    static wrap(power) {\r\n        return new PowerView(power);\r\n    }\r\n\r\n    get(key) {\r\n        return GETTERS[key](this.power);\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {FancyBox} from \"./fancyBox\";\r\n\r\nexport class Help extends React.Component {\r\n    render() {\r\n        return (\r\n            <FancyBox title={'Help'} onClose={this.props.onClose}>\r\n                <div>\r\n                    <p>When building an order, press <strong>ESC</strong> to reset build.</p>\r\n                    <p>Press letter associated to an order type to start building an order of this type.\r\n                        <br/> Order type letter is indicated in order type name after order type radio button.\r\n                    </p>\r\n                    <p>In Phase History tab, use keyboard left and right arrows to navigate in past phases.</p>\r\n                </div>\r\n            </FancyBox>\r\n        );\r\n    }\r\n}\r\n\r\nHelp.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Tab extends React.Component {\r\n    render() {\r\n        const style = {\r\n            display: this.props.display ? 'block' : 'none'\r\n        };\r\n        const id = this.props.id ? {id: this.props.id} : {};\r\n        return (\r\n            <div className={'tab mb-4 ' + this.props.className} style={style} {...id}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTab.propTypes = {\r\n    display: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\r\n};\r\n\r\nTab.defaultProps = {\r\n    display: false,\r\n    className: '',\r\n    id: ''\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from 'react';\r\nimport {Button} from \"./button\";\r\nimport {Bar} from \"./layouts\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class PowerOrdersActionBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <Bar className={'p-2'}>\r\n                <strong className={'mr-4'}>Orders:</strong>\r\n                <Button title={'reset'} onClick={this.props.onReset}/>\r\n                <Button title={'delete all'} onClick={this.props.onDeleteAll}/>\r\n                <Button color={'primary'} title={'update'} onClick={this.props.onUpdate}/>\r\n                {(this.props.onProcess &&\r\n                    <Button color={'danger'} title={'process game'} onClick={this.props.onProcess}/>) || ''}\r\n            </Bar>\r\n        );\r\n    }\r\n}\r\n\r\nPowerOrdersActionBar.propTypes = {\r\n    onReset: PropTypes.func.isRequired,\r\n    onDeleteAll: PropTypes.func.isRequired,\r\n    onUpdate: PropTypes.func.isRequired,\r\n    onProcess: PropTypes.func\r\n};\r\n","/**\r\n==============================================================================\r\nCopyright (C) 2019 - Philip Paquette, Steven Bocco\r\n\r\n This program is free software: you can redistribute it and/or modify it under\r\n the terms of the GNU Affero General Public License as published by the Free\r\n Software Foundation, either version 3 of the License, or (at your option) any\r\n later version.\r\n\r\n This program is distributed in the hope that it will be useful, but WITHOUT\r\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n details.\r\n\r\n You should have received a copy of the GNU Affero General Public License along\r\n with this program.  If not, see <https:www.gnu.org/licenses/>.\r\n==============================================================================\r\n**/\r\nexport const Coordinates = {\"ADR\":{\"unit\":[\"793.5\",\"1048.0\"],\"disl\":[\"782.0\",\"1038.0\"]},\"AEG\":{\"unit\":[\"1043.5\",\"1230.0\"],\"disl\":[\"1032.0\",\"1220.0\"]},\"ALB\":{\"unit\":[\"906.5\",\"1113.0\"],\"disl\":[\"895.0\",\"1103.0\"]},\"ANK\":{\"unit\":[\"1301.5\",\"1110.0\"],\"disl\":[\"1290.0\",\"1100.0\"]},\"APU\":{\"unit\":[\"791.5\",\"1106.0\"],\"disl\":[\"780.0\",\"1096.0\"]},\"ARM\":{\"unit\":[\"1484.5\",\"1090.0\"],\"disl\":[\"1473.0\",\"1080.0\"]},\"BAL\":{\"unit\":[\"878.5\",\"610.0\"],\"disl\":[\"867.0\",\"600.0\"]},\"BAR\":{\"unit\":[\"1162.5\",\"73.0\"],\"disl\":[\"1151.0\",\"63.0\"]},\"BEL\":{\"unit\":[\"561.5\",\"753.0\"],\"disl\":[\"550.0\",\"743.0\"]},\"BER\":{\"unit\":[\"771.5\",\"690.0\"],\"disl\":[\"760.0\",\"680.0\"]},\"BLA\":{\"unit\":[\"1233.5\",\"1000.0\"],\"disl\":[\"1222.0\",\"990.0\"]},\"BOH\":{\"unit\":[\"806.5\",\"814.0\"],\"disl\":[\"795.0\",\"804.0\"]},\"BOT\":{\"unit\":[\"941.5\",\"485.0\"],\"disl\":[\"930.0\",\"475.0\"]},\"BRE\":{\"unit\":[\"404.5\",\"819.0\"],\"disl\":[\"393.0\",\"809.0\"]},\"BUD\":{\"unit\":[\"950.5\",\"904.0\"],\"disl\":[\"939.0\",\"894.0\"]},\"BUL\":{\"unit\":[\"1048.5\",\"1068.0\"],\"disl\":[\"1037.0\",\"1058.0\"]},\"BUL/EC\":{\"unit\":[\"1127.0\",\"1067.0\"],\"disl\":[\"1115.5\",\"1057.0\"]},\"BUL/SC\":{\"unit\":[\"1070.0\",\"1140.0\"],\"disl\":[\"1058.5\",\"1130.0\"]},\"BUR\":{\"unit\":[\"559.5\",\"871.0\"],\"disl\":[\"548.0\",\"861.0\"]},\"CLY\":{\"unit\":[\"436.5\",\"492.0\"],\"disl\":[\"425.0\",\"482.0\"]},\"CON\":{\"unit\":[\"1145.5\",\"1137.0\"],\"disl\":[\"1134.0\",\"1127.0\"]},\"DEN\":{\"unit\":[\"703.5\",\"587.0\"],\"disl\":[\"692.0\",\"577.0\"]},\"EAS\":{\"unit\":[\"1218.5\",\"1311.0\"],\"disl\":[\"1207.0\",\"1301.0\"]},\"EDI\":{\"unit\":[\"473.5\",\"514.0\"],\"disl\":[\"462.0\",\"504.0\"]},\"ENG\":{\"unit\":[\"394.5\",\"751.0\"],\"disl\":[\"383.0\",\"741.0\"]},\"FIN\":{\"unit\":[\"988.5\",\"380.0\"],\"disl\":[\"977.0\",\"370.0\"]},\"GAL\":{\"unit\":[\"999.5\",\"831.0\"],\"disl\":[\"988.0\",\"821.0\"]},\"GAS\":{\"unit\":[\"422.5\",\"912.0\"],\"disl\":[\"411.0\",\"902.0\"]},\"GOL\":{\"unit\":[\"556.0\",\"1060.0\"],\"disl\":[\"544.5\",\"1050.0\"]},\"GRE\":{\"unit\":[\"966.5\",\"1190.0\"],\"disl\":[\"955.0\",\"1180.0\"]},\"HEL\":{\"unit\":[\"651.5\",\"631.0\"],\"disl\":[\"640.0\",\"621.0\"]},\"HOL\":{\"unit\":[\"596.5\",\"711.0\"],\"disl\":[\"585.0\",\"701.0\"]},\"ION\":{\"unit\":[\"846.5\",\"1286.0\"],\"disl\":[\"835.0\",\"1276.0\"]},\"IRI\":{\"unit\":[\"335.5\",\"661.0\"],\"disl\":[\"324.0\",\"651.0\"]},\"KIE\":{\"unit\":[\"683.5\",\"701.0\"],\"disl\":[\"672.0\",\"691.0\"]},\"LON\":{\"unit\":[\"488.5\",\"675.0\"],\"disl\":[\"477.0\",\"665.0\"]},\"LVN\":{\"unit\":[\"1025.5\",\"567.0\"],\"disl\":[\"1014.0\",\"557.0\"]},\"LVP\":{\"unit\":[\"450.5\",\"576.0\"],\"disl\":[\"439.0\",\"566.0\"]},\"LYO\":{\"unit\":[\"514.3\",\"1055.0\"],\"disl\":[\"502.8\",\"1045.0\"]},\"MAO\":{\"unit\":[\"141.8\",\"835.3\"],\"disl\":[\"130.3\",\"825.3\"]},\"MAR\":{\"unit\":[\"524.5\",\"975.0\"],\"disl\":[\"513.0\",\"965.0\"]},\"MID\":{\"unit\":[\"126.0\",\"902.0\"],\"disl\":[\"114.5\",\"892.0\"]},\"MOS\":{\"unit\":[\"1200.5\",\"590.0\"],\"disl\":[\"1189.0\",\"580.0\"]},\"MUN\":{\"unit\":[\"693.5\",\"828.0\"],\"disl\":[\"682.0\",\"818.0\"]},\"NAF\":{\"unit\":[\"325.5\",\"1281.0\"],\"disl\":[\"314.0\",\"1271.0\"]},\"NAO\":{\"unit\":[\"180.1\",\"288.2\"],\"disl\":[\"168.6\",\"278.2\"]},\"NAP\":{\"unit\":[\"806.5\",\"1170.0\"],\"disl\":[\"795.0\",\"1160.0\"]},\"NAT\":{\"unit\":[\"238.0\",\"427.0\"],\"disl\":[\"226.5\",\"417.0\"]},\"NRG\":{\"unit\":[\"605.0\",\"250.0\"],\"disl\":[\"593.5\",\"240.0\"]},\"NTH\":{\"unit\":[\"553.5\",\"560.0\"],\"disl\":[\"542.0\",\"550.0\"]},\"NWG\":{\"unit\":[\"652.7\",\"181.8\"],\"disl\":[\"641.2\",\"171.8\"]},\"NWY\":{\"unit\":[\"703.5\",\"410.0\"],\"disl\":[\"692.0\",\"400.0\"]},\"PAR\":{\"unit\":[\"488.5\",\"845.0\"],\"disl\":[\"477.0\",\"835.0\"]},\"PIC\":{\"unit\":[\"523.5\",\"781.0\"],\"disl\":[\"512.0\",\"771.0\"]},\"PIE\":{\"unit\":[\"630.5\",\"968.0\"],\"disl\":[\"619.0\",\"958.0\"]},\"POR\":{\"unit\":[\"181.5\",\"1013.0\"],\"disl\":[\"170.0\",\"1003.0\"]},\"PRU\":{\"unit\":[\"865.5\",\"690.0\"],\"disl\":[\"854.0\",\"680.0\"]},\"ROM\":{\"unit\":[\"731.5\",\"1102.0\"],\"disl\":[\"720.0\",\"1092.0\"]},\"RUH\":{\"unit\":[\"636.5\",\"779.0\"],\"disl\":[\"625.0\",\"769.0\"]},\"RUM\":{\"unit\":[\"1096.5\",\"967.0\"],\"disl\":[\"1085.0\",\"957.0\"]},\"SER\":{\"unit\":[\"933.5\",\"1050.0\"],\"disl\":[\"922.0\",\"1040.0\"]},\"SEV\":{\"unit\":[\"1284.5\",\"845.0\"],\"disl\":[\"1273.0\",\"835.0\"]},\"SIL\":{\"unit\":[\"832.5\",\"769.0\"],\"disl\":[\"821.0\",\"759.0\"]},\"SKA\":{\"unit\":[\"735.5\",\"518.0\"],\"disl\":[\"724.0\",\"508.0\"]},\"SMY\":{\"unit\":[\"1253.5\",\"1210.0\"],\"disl\":[\"1242.0\",\"1200.0\"]},\"SPA\":{\"unit\":[\"335.5\",\"1039.0\"],\"disl\":[\"324.0\",\"1029.0\"]},\"SPA/NC\":{\"unit\":[\"289.0\",\"965.0\"],\"disl\":[\"277.5\",\"955.0\"]},\"SPA/SC\":{\"unit\":[\"291.0\",\"1166.0\"],\"disl\":[\"279.5\",\"1156.0\"]},\"STP\":{\"unit\":[\"1166.5\",\"405.0\"],\"disl\":[\"1155.0\",\"395.0\"]},\"STP/NC\":{\"unit\":[\"1218.0\",\"222.0\"],\"disl\":[\"1206.5\",\"212.0\"]},\"STP/SC\":{\"unit\":[\"1066.0\",\"487.0\"],\"disl\":[\"1054.5\",\"477.0\"]},\"SWE\":{\"unit\":[\"829.5\",\"459.0\"],\"disl\":[\"818.0\",\"449.0\"]},\"SWI\":{\"unit\":[\"642.0\",\"928.0\"],\"disl\":[\"630.5\",\"918.0\"]},\"SYR\":{\"unit\":[\"1452.5\",\"1206.0\"],\"disl\":[\"1441.0\",\"1196.0\"]},\"TRI\":{\"unit\":[\"825.5\",\"996.0\"],\"disl\":[\"814.0\",\"986.0\"]},\"TUN\":{\"unit\":[\"622.5\",\"1300.0\"],\"disl\":[\"611.0\",\"1290.0\"]},\"TUS\":{\"unit\":[\"686.5\",\"1034.0\"],\"disl\":[\"675.0\",\"1024.0\"]},\"TYN\":{\"unit\":[\"720.0\",\"1160.0\"],\"disl\":[\"708.5\",\"1150.0\"]},\"TYR\":{\"unit\":[\"742.5\",\"904.0\"],\"disl\":[\"731.0\",\"894.0\"]},\"TYS\":{\"unit\":[\"698.5\",\"1149.1\"],\"disl\":[\"687.0\",\"1139.1\"]},\"UKR\":{\"unit\":[\"1124.5\",\"800.0\"],\"disl\":[\"1113.0\",\"790.0\"]},\"VEN\":{\"unit\":[\"707.5\",\"994.0\"],\"disl\":[\"696.0\",\"984.0\"]},\"VIE\":{\"unit\":[\"855.5\",\"864.0\"],\"disl\":[\"844.0\",\"854.0\"]},\"WAL\":{\"unit\":[\"428.5\",\"658.0\"],\"disl\":[\"417.0\",\"648.0\"]},\"WAR\":{\"unit\":[\"983.5\",\"740.0\"],\"disl\":[\"972.0\",\"730.0\"]},\"WES\":{\"unit\":[\"462.5\",\"1163.0\"],\"disl\":[\"451.0\",\"1153.0\"]},\"YOR\":{\"unit\":[\"492.5\",\"616.0\"],\"disl\":[\"481.0\",\"606.0\"]}};\r\nexport const SymbolSizes = {\"Fleet\":{\"width\":40.0,\"height\":40.0},\"Army\":{\"width\":40.0,\"height\":40.0},\"Wing\":{\"width\":40.0,\"height\":40.0},\"DislodgedFleet\":{\"width\":40.0,\"height\":40.0},\"DislodgedArmy\":{\"width\":40.0,\"height\":40.0},\"DislodgedWing\":{\"width\":40.0,\"height\":40.0},\"FailedOrder\":{\"width\":30.0,\"height\":30.0},\"SupplyCenter\":{\"width\":20.0,\"height\":20.0},\"BuildUnit\":{\"width\":60.0,\"height\":60.0},\"RemoveUnit\":{\"width\":50.0,\"height\":50.0},\"WaivedBuild\":{\"width\":40.0,\"height\":40.0},\"HoldUnit\":{\"width\":66.6,\"height\":66.6},\"SupportHoldUnit\":{\"width\":76.6,\"height\":76.6},\"ConvoyTriangle\":{\"width\":66.4,\"height\":57.4},\"Stroke\":{\"width\":6.0,\"height\":10.0}};\r\nexport const Colors = {\"AUSTRIA\":\"#c48f85\",\"ENGLAND\":\"darkviolet\",\"FRANCE\":\"royalblue\",\"GERMANY\":\"#a08a75\",\"ITALY\":\"forestgreen\",\"RUSSIA\":\"#757d91\",\"TURKEY\":\"#b9a61c\"};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n\r\nexport const ARMY = 'Army';\r\nexport const FLEET = 'Fleet';\r\n\r\nexport function offset(floatString, offset) {\r\n    return \"\" + (parseFloat(floatString) + offset);\r\n}\r\n\r\nexport function setInfluence(classes, mapData, loc, power_name) {\r\n    const province = mapData.getProvince(loc);\r\n    if (!province)\r\n        throw new Error(`Unable to find province ${loc}`);\r\n    if (!['LAND', 'COAST'].includes(province.type))\r\n        return;\r\n    const id = province.getID(classes);\r\n    if (!id)\r\n        throw new Error(`Unable to find SVG path for loc ${id}`);\r\n    classes[id] = power_name ? power_name.toLowerCase() : 'nopower';\r\n}\r\n\r\nexport function getClickedID(event) {\r\n    let node = event.target;\r\n    if (!node.id && node.parentNode.id && node.parentNode.tagName === 'g')\r\n        node = node.parentNode;\r\n    let id = node.id;\r\n    return id ? id.substr(0, 3) : null;\r\n}\r\n\r\nexport function parseLocation(txt) {\r\n    if (txt.length > 2 && txt[1] === ' ' && ['A', 'F'].includes(txt[0]))\r\n        return txt.substr(2);\r\n    return txt;\r\n}\r\n\r\nexport function centerSymbolAroundUnit(coordinates, symbolSizes, loc, isDislodged, symbol) {\r\n    const key = isDislodged ? 'disl' : 'unit';\r\n    const unitKey = ARMY;\r\n    const [unit_x, unit_y] = coordinates[loc][key];\r\n    const unit_height = symbolSizes[unitKey].height;\r\n    const unit_width = symbolSizes[unitKey].width;\r\n    const symbol_height = symbolSizes[symbol].height;\r\n    const symbol_width = symbolSizes[symbol].width;\r\n    return [\r\n        `${(parseFloat(unit_x) + parseFloat(unit_width) / 2 - parseFloat(symbol_width) / 2)}`,\r\n        `${(parseFloat(unit_y) + parseFloat(unit_height) / 2 - parseFloat(symbol_height) / 2)}`\r\n    ];\r\n}\r\n\r\nexport function getUnitCenter(coordinates, symbolSizes, loc, isDislodged) {\r\n    const key = isDislodged ? 'disl' : 'unit';\r\n    const unitKey = ARMY;\r\n    const [unit_x, unit_y] = coordinates[loc][key];\r\n    const unit_height = symbolSizes[unitKey].height;\r\n    const unit_width = symbolSizes[unitKey].width;\r\n    return [\r\n        `${parseFloat(unit_x) + parseFloat(unit_width) / 2}`,\r\n        `${parseFloat(unit_y) + parseFloat(unit_height) / 2}`\r\n    ];\r\n}\r\n\r\nexport function plainStrokeWidth(symbolSizes) {\r\n    return parseFloat(symbolSizes.Stroke.height);\r\n}\r\n\r\nexport function coloredStrokeWidth(symbolSizes) {\r\n    return parseFloat(symbolSizes.Stroke.width);\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nconst ProvinceType = {\r\n    WATER: 'WATER',\r\n    COAST: 'COAST',\r\n    PORT: 'PORT',\r\n    LAND: 'LAND'\r\n};\r\n\r\nexport class Province {\r\n    constructor(name, type, isSupplyCenter) {\r\n        this.name = name;\r\n        this.type = type;\r\n        this.coasts = {};\r\n        this.parent = null;\r\n        this.neighbors = {};\r\n        this.isSupplyCenter = isSupplyCenter;\r\n        this.controller = null; // null or power name.\r\n        this.controlType = null; // null, C (center), I (influence) or U (unit).\r\n        this.unit = null; // null, A or F\r\n        this.retreatController = null;\r\n        this.retreatUnit = null; // null or `{unit type} {loc}`\r\n        this.aliases = [];\r\n    }\r\n\r\n    compareControlType(a, b) {\r\n        const controlTypeLevels = {C: 0, I: 1, U: 2};\r\n        return controlTypeLevels[a] - controlTypeLevels[b];\r\n    }\r\n\r\n    __set_controller(controller, controlType) {\r\n        this.controller = controller;\r\n        this.controlType = controlType;\r\n        for (let coast of Object.values(this.coasts))\r\n            coast.setController(controller, controlType);\r\n    }\r\n\r\n    setController(controller, controlType) {\r\n        if (!['C', 'I', 'U'].includes(controlType))\r\n            throw new Error(`Invalid province control type (${controlType}), expected 'C', 'I' or 'U'.`);\r\n        if (this.controller && this.controller !== controller) {\r\n            const controlTypeComparison = this.compareControlType(controlType, this.controlType);\r\n            if (controlTypeComparison === 0)\r\n                throw new Error(`Found 2 powers (${this.controller}, ${controller}) trying to control same province ` +\r\n                    `(${this.name}) with same control type (${controlType} VS ${this.controlType}).`);\r\n            if (controlTypeComparison > 0)\r\n                this.__set_controller(controller, controlType);\r\n        } else\r\n            this.__set_controller(controller, controlType);\r\n    }\r\n\r\n    setCoasts(provinces) {\r\n        const name = this.name.toUpperCase();\r\n        for (let entry of Object.entries(provinces)) {\r\n            const pieces = entry[0].split(/[^A-Za-z0-9]+/);\r\n            if (pieces.length > 1 && pieces[0].toUpperCase() === name) {\r\n                this.coasts[entry[0]] = entry[1];\r\n                entry[1].parent = this;\r\n            }\r\n        }\r\n    }\r\n\r\n    setNeighbors(neighborProvinces) {\r\n        for (let province of neighborProvinces)\r\n            this.neighbors[province.name] = province;\r\n    }\r\n\r\n    getLocationNames() {\r\n        const arr = Object.keys(this.coasts);\r\n        arr.splice(0, 0, this.name);\r\n        return arr;\r\n    }\r\n\r\n    getOccupied(powerName) {\r\n        if (!this.controller)\r\n            return null;\r\n        if (powerName && this.controller !== powerName)\r\n            return null;\r\n        if (this.unit)\r\n            return this;\r\n        for (let coast of Object.values(this.coasts))\r\n            if (coast.unit)\r\n                return coast;\r\n        return null;\r\n    }\r\n\r\n    getRetreated(powerName) {\r\n        if (this.retreatController === powerName)\r\n            return this;\r\n        for (let coast of Object.values(this.coasts))\r\n            if (coast.retreatController === powerName)\r\n                return coast;\r\n        return null;\r\n    }\r\n\r\n    isCoast() {\r\n        return this.type === ProvinceType.COAST;\r\n    }\r\n\r\n    isWater() {\r\n        return this.type === ProvinceType.WATER;\r\n    }\r\n\r\n    _id(id) {\r\n        return `_${id.toLowerCase()}`;\r\n    }\r\n\r\n    getID(identifiers) {\r\n        let id = this._id(this.name);\r\n        if (!identifiers[id]) {\r\n            for (let alias of this.aliases) {\r\n                id = this._id(alias);\r\n                if (identifiers[id])\r\n                    break;\r\n            }\r\n        }\r\n        if (!identifiers[id] && this.isCoast())\r\n            id = this.parent.getID(identifiers);\r\n        return id;\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {Province} from \"./province\";\r\n\r\nexport class MapData {\r\n    constructor(mapInfo, game) {\r\n        // mapInfo: {powers: [], supply_centers: [], aliases: {alias: name}, loc_type: {loc => type}, loc_abut: {loc => [abuts]}}\r\n        // game: a NetworkGame object.\r\n        this.game = game;\r\n        this.powers = new Set(mapInfo.powers);\r\n        this.supplyCenters = new Set(mapInfo.supply_centers);\r\n        this.aliases = Object.assign({}, mapInfo.aliases);\r\n        this.provinces = {};\r\n        for (let entry of Object.entries(mapInfo.loc_type)) {\r\n            const provinceName = entry[0];\r\n            const provinceType = entry[1];\r\n            this.provinces[provinceName] = new Province(provinceName, provinceType, this.supplyCenters.has(provinceName));\r\n        }\r\n        for (let entry of Object.entries(mapInfo.loc_abut)) {\r\n            this.getProvince(entry[0]).setNeighbors(entry[1].map(name => this.getProvince(name)));\r\n        }\r\n        for (let province of Object.values(this.provinces)) {\r\n            province.setCoasts(this.provinces);\r\n        }\r\n        for (let power of Object.values(this.game.powers)) {\r\n            for (let center of power.centers) {\r\n                this.getProvince(center).setController(power.name, 'C');\r\n            }\r\n            for (let loc of power.influence) {\r\n                this.getProvince(loc).setController(power.name, 'I');\r\n            }\r\n            for (let unit of power.units) {\r\n                this.__add_unit(unit, power.name);\r\n            }\r\n            for (let unit of Object.keys(power.retreats)) {\r\n                this.__add_retreat(unit, power.name);\r\n            }\r\n        }\r\n        for (let entry of Object.entries(this.aliases)) {\r\n            const alias = entry[0];\r\n            const provinceName = entry[1];\r\n            const province = this.getProvince(provinceName);\r\n            if (province)\r\n                province.aliases.push(alias);\r\n        }\r\n    }\r\n\r\n    __add_unit(unit, power_name) {\r\n        const splitUnit = unit.split(/ +/);\r\n        const unitType = splitUnit[0];\r\n        const location = splitUnit[1];\r\n        const province = this.getProvince(location);\r\n        province.setController(power_name, 'U');\r\n        province.unit = unitType;\r\n    }\r\n\r\n    __add_retreat(unit, power_name) {\r\n        const splitUnit = unit.split(/ +/);\r\n        const location = splitUnit[1];\r\n        const province = this.getProvince(location);\r\n        province.retreatController = power_name;\r\n        province.retreatUnit = unit;\r\n    }\r\n\r\n    getProvince(abbr) {\r\n        if (abbr === '')\r\n            return null;\r\n        if (abbr[0] === '_')\r\n            abbr = abbr.substr(1, 3);\r\n        if (!abbr)\r\n            return null;\r\n        if (this.provinces.hasOwnProperty(abbr))\r\n            return this.provinces[abbr];\r\n        if (this.provinces.hasOwnProperty(abbr.toUpperCase()))\r\n            return this.provinces[abbr.toUpperCase()];\r\n        if (this.provinces.hasOwnProperty(abbr.toLowerCase()))\r\n            return this.provinces[abbr.toLowerCase()];\r\n        if (this.aliases.hasOwnProperty(abbr))\r\n            return this.provinces[this.aliases[abbr]];\r\n        if (this.aliases.hasOwnProperty(abbr.toUpperCase()))\r\n            return this.provinces[this.aliases[abbr.toUpperCase()]];\r\n        if (this.aliases.hasOwnProperty(abbr.toLowerCase()))\r\n            return this.provinces[this.aliases[abbr.toLowerCase()]];\r\n        return null;\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {ARMY, FLEET} from \"./common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Unit extends React.Component {\r\n    render() {\r\n        const Coordinates = this.props.coordinates;\r\n        const SymbolSizes = this.props.symbolSizes;\r\n        const split_unit = this.props.unit.split(/ +/);\r\n        const unit_type = split_unit[0];\r\n        const loc = split_unit[1];\r\n        const dislogged_type = this.props.isDislodged ? 'disl' : 'unit';\r\n        const symbol = unit_type === 'F' ? FLEET : ARMY;\r\n        const loc_x = Coordinates[loc][dislogged_type][0];\r\n        const loc_y = Coordinates[loc][dislogged_type][1];\r\n        return (\r\n            <use href={`#${this.props.isDislodged ? 'Dislodged' : ''}${symbol}`}\r\n                 x={loc_x}\r\n                 y={loc_y}\r\n                 id={`${this.props.isDislodged ? 'dislodged_' : ''}unit_${loc}`}\r\n                 width={SymbolSizes[symbol].width}\r\n                 height={SymbolSizes[symbol].height}\r\n                 className={`unit${this.props.powerName.toLowerCase()}`}/>\r\n        );\r\n    }\r\n}\r\n\r\nUnit.propTypes = {\r\n    unit: PropTypes.string.isRequired,\r\n    powerName: PropTypes.string.isRequired,\r\n    isDislodged: PropTypes.bool.isRequired,\r\n    coordinates: PropTypes.object.isRequired,\r\n    symbolSizes: PropTypes.object.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {centerSymbolAroundUnit} from \"./common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Hold extends React.Component {\r\n    render() {\r\n        const Coordinates = this.props.coordinates;\r\n        const Colors = this.props.colors;\r\n        const SymbolSizes = this.props.symbolSizes;\r\n        const symbol = 'HoldUnit';\r\n        const [loc_x, loc_y] = centerSymbolAroundUnit(Coordinates, SymbolSizes, this.props.loc, false, symbol);\r\n        return (\r\n            <g stroke={Colors[this.props.powerName]}>\r\n                <use\r\n                    x={loc_x}\r\n                    y={loc_y}\r\n                    width={SymbolSizes[symbol].width}\r\n                    height={SymbolSizes[symbol].height}\r\n                    href={`#${symbol}`}/>\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nHold.propTypes = {\r\n    loc: PropTypes.string.isRequired,\r\n    powerName: PropTypes.string.isRequired,\r\n    coordinates: PropTypes.object.isRequired,\r\n    symbolSizes: PropTypes.object.isRequired,\r\n    colors: PropTypes.object.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {ARMY, coloredStrokeWidth, getUnitCenter, plainStrokeWidth} from \"./common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Move extends React.Component {\r\n    render() {\r\n        const Coordinates = this.props.coordinates;\r\n        const SymbolSizes = this.props.symbolSizes;\r\n        const Colors = this.props.colors;\r\n        const src_loc = this.props.srcLoc;\r\n        const dest_loc = this.props.dstLoc;\r\n        const is_dislodged = this.props.phaseType === 'R';\r\n        const [src_loc_x, src_loc_y] = getUnitCenter(Coordinates, SymbolSizes, src_loc, is_dislodged);\r\n        let [dest_loc_x, dest_loc_y] = getUnitCenter(Coordinates, SymbolSizes, dest_loc, is_dislodged);\r\n        // Adjusting destination\r\n        const delta_x = dest_loc_x - src_loc_x;\r\n        const delta_y = dest_loc_y - src_loc_y;\r\n        const vector_length = Math.sqrt(delta_x * delta_x + delta_y * delta_y);\r\n        const delta_dec = parseFloat(SymbolSizes[ARMY].width) / 2 + 2 * coloredStrokeWidth(SymbolSizes);\r\n        dest_loc_x = '' + Math.round((parseFloat(src_loc_x) + (vector_length - delta_dec) / vector_length * delta_x) * 100.) / 100.;\r\n        dest_loc_y = '' + Math.round((parseFloat(src_loc_y) + (vector_length - delta_dec) / vector_length * delta_y) * 100.) / 100.;\r\n        return (\r\n            <g>\r\n                <line x1={src_loc_x}\r\n                      y1={src_loc_y}\r\n                      x2={dest_loc_x}\r\n                      y2={dest_loc_y}\r\n                      className={'varwidthshadow'}\r\n                      strokeWidth={'' + plainStrokeWidth(SymbolSizes)}/>\r\n                <line x1={src_loc_x}\r\n                      y1={src_loc_y}\r\n                      x2={dest_loc_x}\r\n                      y2={dest_loc_y}\r\n                      className={'varwidthorder'}\r\n                      markerEnd={'url(#arrow)'}\r\n                      stroke={Colors[this.props.powerName]}\r\n                      strokeWidth={'' + coloredStrokeWidth(SymbolSizes)}/>\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nMove.propTypes = {\r\n    srcLoc: PropTypes.string.isRequired,\r\n    dstLoc: PropTypes.string.isRequired,\r\n    powerName: PropTypes.string.isRequired,\r\n    phaseType: PropTypes.string.isRequired,\r\n    coordinates: PropTypes.object.isRequired,\r\n    symbolSizes: PropTypes.object.isRequired,\r\n    colors: PropTypes.object.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {ARMY, coloredStrokeWidth, getUnitCenter} from \"./common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class SupportMove extends React.Component {\r\n    render() {\r\n        const Coordinates = this.props.coordinates;\r\n        const SymbolSizes = this.props.symbolSizes;\r\n        const Colors = this.props.colors;\r\n        const loc = this.props.loc;\r\n        const src_loc = this.props.srcLoc;\r\n        const dest_loc = this.props.dstLoc;\r\n        const [loc_x, loc_y] = getUnitCenter(Coordinates, SymbolSizes, loc, false);\r\n        const [src_loc_x, src_loc_y] = getUnitCenter(Coordinates, SymbolSizes, src_loc, false);\r\n        let [dest_loc_x, dest_loc_y] = getUnitCenter(Coordinates, SymbolSizes, dest_loc, false);\r\n\r\n        // Adjusting destination\r\n        const delta_x = dest_loc_x - src_loc_x;\r\n        const delta_y = dest_loc_y - src_loc_y;\r\n        const vector_length = Math.sqrt(delta_x * delta_x + delta_y * delta_y);\r\n        const delta_dec = parseFloat(SymbolSizes[ARMY].width) / 2 + 2 * coloredStrokeWidth(SymbolSizes);\r\n        dest_loc_x = '' + Math.round((parseFloat(src_loc_x) + (vector_length - delta_dec) / vector_length * delta_x) * 100.) / 100.;\r\n        dest_loc_y = '' + Math.round((parseFloat(src_loc_y) + (vector_length - delta_dec) / vector_length * delta_y) * 100.) / 100.;\r\n        return (\r\n            <g>\r\n                <path className={'shadowdash'}\r\n                      d={`M ${loc_x},${loc_y} C ${src_loc_x},${src_loc_y} ${src_loc_x},${src_loc_y} ${dest_loc_x},${dest_loc_y}`}/>\r\n                <path className={'supportorder'}\r\n                      markerEnd={'url(#arrow)'}\r\n                      stroke={Colors[this.props.powerName]}\r\n                      d={`M ${loc_x},${loc_y} C ${src_loc_x},${src_loc_y} ${src_loc_x},${src_loc_y} ${dest_loc_x},${dest_loc_y}`}/>\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nSupportMove.propTypes = {\r\n    loc: PropTypes.string.isRequired,\r\n    srcLoc: PropTypes.string.isRequired,\r\n    dstLoc: PropTypes.string.isRequired,\r\n    powerName: PropTypes.string.isRequired,\r\n    coordinates: PropTypes.object.isRequired,\r\n    symbolSizes: PropTypes.object.isRequired,\r\n    colors: PropTypes.object.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {centerSymbolAroundUnit, getUnitCenter} from \"./common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class SupportHold extends React.Component {\r\n    render() {\r\n        const Coordinates = this.props.coordinates;\r\n        const SymbolSizes = this.props.symbolSizes;\r\n        const Colors = this.props.colors;\r\n        const loc = this.props.loc;\r\n        const dest_loc = this.props.dstLoc;\r\n        const symbol = 'SupportHoldUnit';\r\n        const [symbol_loc_x, symbol_loc_y] = centerSymbolAroundUnit(Coordinates, SymbolSizes, dest_loc, false, symbol);\r\n        const [loc_x, loc_y] = getUnitCenter(Coordinates, SymbolSizes, loc, false);\r\n        let [dest_loc_x, dest_loc_y] = getUnitCenter(Coordinates, SymbolSizes, dest_loc, false);\r\n\r\n        const delta_x = dest_loc_x - loc_x;\r\n        const delta_y = dest_loc_y - loc_y;\r\n        const vector_length = Math.sqrt(delta_x * delta_x + delta_y * delta_y);\r\n        const delta_dec = parseFloat(SymbolSizes[symbol].height) / 2;\r\n        dest_loc_x = '' + Math.round((parseFloat(loc_x) + (vector_length - delta_dec) / vector_length * delta_x) * 100.) / 100.;\r\n        dest_loc_y = '' + Math.round((parseFloat(loc_y) + (vector_length - delta_dec) / vector_length * delta_y) * 100.) / 100.;\r\n\r\n        return (\r\n            <g stroke={Colors[this.props.powerName]}>\r\n                <line x1={loc_x}\r\n                      y1={loc_y}\r\n                      x2={dest_loc_x}\r\n                      y2={dest_loc_y}\r\n                      className={'shadowdash'}/>\r\n                <line x1={loc_x}\r\n                      y1={loc_y}\r\n                      x2={dest_loc_x}\r\n                      y2={dest_loc_y}\r\n                      className={'supportorder'}\r\n                      stroke={Colors[this.props.powerName]}/>\r\n                <use\r\n                    x={symbol_loc_x}\r\n                    y={symbol_loc_y}\r\n                    width={SymbolSizes[symbol].width}\r\n                    height={SymbolSizes[symbol].height}\r\n                    href={`#${symbol}`}\r\n                />\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nSupportHold.propTypes = {\r\n    loc: PropTypes.string.isRequired,\r\n    dstLoc: PropTypes.string.isRequired,\r\n    powerName: PropTypes.string.isRequired,\r\n    coordinates: PropTypes.object.isRequired,\r\n    symbolSizes: PropTypes.object.isRequired,\r\n    colors: PropTypes.object.isRequired\r\n};\r\n","export class EquilateralTriangle {\r\n    /** Helper class that represent an equilateral triangle.;\r\n     Used to compute intersection of a line with a side of convoy symbol, which is an equilateral triangle. **/\r\n    constructor(x_top, y_top, x_right, y_right, x_left, y_left) {\r\n        this.x_A = x_top;\r\n        this.y_A = y_top;\r\n        this.x_B = x_right;\r\n        this.y_B = y_right;\r\n        this.x_C = x_left;\r\n        this.y_C = y_left;\r\n        this.h = this.y_B - this.y_A;\r\n        this.x_O = this.x_A;\r\n        this.y_O = this.y_A + 2 * this.h / 3;\r\n        this.line_AB_a = (this.y_B - this.y_A) / (this.x_B - this.x_A);\r\n        this.line_AB_b = this.y_B - this.x_B * this.line_AB_a;\r\n        this.line_AC_a = (this.y_C - this.y_A) / (this.x_C - this.x_A);\r\n        this.line_AC_b = this.y_C - this.x_C * this.line_AC_a;\r\n    }\r\n\r\n    __line_OM(x_M, y_M) {\r\n        const a = (y_M - this.y_O) / (x_M - this.x_O);\r\n        const b = y_M - a * x_M;\r\n        return [a, b];\r\n    }\r\n\r\n    __intersection_with_AB(x_M, y_M) {\r\n        const [a, b] = [this.line_AB_a, this.line_AB_b];\r\n        let x = null;\r\n        if (x_M === this.x_O) {\r\n            x = x_M;\r\n        } else {\r\n            const [u, v] = this.__line_OM(x_M, y_M);\r\n            if (a === u)\r\n                return [null, null];\r\n            x = (v - b) / (a - u);\r\n        }\r\n        const y = a * x + b;\r\n        if (this.x_A <= x && x <= this.x_B && this.y_A <= y && y <= this.y_B)\r\n            return [x, y];\r\n        return [null, null];\r\n    }\r\n\r\n    __intersection_with_AC(x_M, y_M) {\r\n        const [a, b] = [this.line_AC_a, this.line_AC_b];\r\n        let x = null;\r\n        if (x_M === this.x_O) {\r\n            x = x_M;\r\n        } else {\r\n            const [u, v] = this.__line_OM(x_M, y_M);\r\n            if (a === u)\r\n                return [null, null];\r\n            x = (v - b) / (a - u);\r\n        }\r\n        const y = a * x + b;\r\n        if (this.x_C <= x && x <= this.x_A && this.y_A <= y && y <= this.y_C)\r\n            return [x, y];\r\n        return [null, null];\r\n    }\r\n\r\n    __intersection_with_BC(x_M, y_M) {\r\n        const y = this.y_C;\r\n        let x = null;\r\n        if (x_M === this.x_O) {\r\n            x = x_M;\r\n        } else {\r\n            const [a, b] = this.__line_OM(x_M, y_M);\r\n            if (a === 0)\r\n                return [null, null];\r\n            x = (y - b) / a;\r\n        }\r\n        if (this.x_C <= x && x <= this.x_A)\r\n            return [x, y];\r\n        return [null, null];\r\n    }\r\n\r\n    intersection(x_M, y_M) {\r\n        if (this.x_O === x_M && this.y_O === y_M)\r\n            return [x_M, y_M];\r\n        if (this.x_O === x_M) {\r\n            if (y_M < this.y_O)\r\n                return [x_M, this.y_A];\r\n            else {\r\n                // vertical line intersects BC;\r\n                return [x_M, this.y_C];\r\n            }\r\n        } else if (this.y_O === y_M) {\r\n            let a = null;\r\n            let b = null;\r\n            if (x_M < this.x_O) {\r\n                // horizontal line intersects AC;\r\n                [a, b] = [this.line_AC_a, this.line_AC_b];\r\n            } else {\r\n                // horizontal line intersects AB;\r\n                [a, b] = [this.line_AB_a, this.line_AB_b];\r\n            }\r\n            const x = (y_M - b) / a;\r\n            return [x, y_M];\r\n        } else {\r\n            // get nearest point in intersections with AB, AC, BC;\r\n            const [p1_x, p1_y] = this.__intersection_with_AB(x_M, y_M);\r\n            const [p2_x, p2_y] = this.__intersection_with_AC(x_M, y_M);\r\n            const [p3_x, p3_y] = this.__intersection_with_BC(x_M, y_M);\r\n            const distances = [];\r\n            if (p1_x !== null) {\r\n                const d1 = Math.sqrt((p1_x - x_M) * (p1_x - x_M) + (p1_y - y_M) * (p1_y - y_M));\r\n                distances.push([d1, p1_x, p1_y]);\r\n            }\r\n            if (p2_x !== null) {\r\n                const d2 = Math.sqrt((p2_x - x_M) * (p2_x - x_M) + (p2_y - y_M) * (p2_y - y_M));\r\n                distances.push([d2, p2_x, p2_y]);\r\n            }\r\n            if (p3_x !== null) {\r\n                const d3 = Math.sqrt((p3_x - x_M) * (p3_x - x_M) + (p3_y - y_M) * (p3_y - y_M));\r\n                distances.push([d3, p3_x, p3_y]);\r\n            }\r\n            distances.sort();\r\n            const output = distances[0];\r\n            output.shift();\r\n            return output;\r\n        }\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {ARMY, centerSymbolAroundUnit, coloredStrokeWidth, getUnitCenter} from \"./common\";\r\nimport {EquilateralTriangle} from \"./equilateralTriangle\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Convoy extends React.Component {\r\n    render() {\r\n        const Coordinates = this.props.coordinates;\r\n        const SymbolSizes = this.props.symbolSizes;\r\n        const Colors = this.props.colors;\r\n        const loc = this.props.loc;\r\n        const src_loc = this.props.srcLoc;\r\n        const dest_loc = this.props.dstLoc;\r\n\r\n        const symbol = 'ConvoyTriangle';\r\n        let [symbol_loc_x, symbol_loc_y] = centerSymbolAroundUnit(Coordinates, SymbolSizes, src_loc, false, symbol);\r\n        const symbol_height = parseFloat(SymbolSizes[symbol].height);\r\n        const symbol_width = parseFloat(SymbolSizes[symbol].width);\r\n        const triangle = new EquilateralTriangle(\r\n            parseFloat(symbol_loc_x) + symbol_width / 2,\r\n            parseFloat(symbol_loc_y),\r\n            parseFloat(symbol_loc_x) + symbol_width,\r\n            parseFloat(symbol_loc_y) + symbol_height,\r\n            parseFloat(symbol_loc_x),\r\n            parseFloat(symbol_loc_y) + symbol_height\r\n        );\r\n        symbol_loc_y = '' + (parseFloat(symbol_loc_y) - symbol_height / 6);\r\n        const [loc_x, loc_y] = getUnitCenter(Coordinates, SymbolSizes, loc, false);\r\n        const [src_loc_x, src_loc_y] = getUnitCenter(Coordinates, SymbolSizes, src_loc, false);\r\n        let [dest_loc_x, dest_loc_y] = getUnitCenter(Coordinates, SymbolSizes, dest_loc, false);\r\n\r\n        const [src_loc_x_1, src_loc_y_1] = triangle.intersection(loc_x, loc_y);\r\n        const [src_loc_x_2, src_loc_y_2] = triangle.intersection(dest_loc_x, dest_loc_y);\r\n\r\n        const dest_delta_x = dest_loc_x - src_loc_x;\r\n        const dest_delta_y = dest_loc_y - src_loc_y;\r\n        const dest_vector_length = Math.sqrt(dest_delta_x * dest_delta_x + dest_delta_y * dest_delta_y);\r\n        const delta_dec = parseFloat(SymbolSizes[ARMY].width) / 2 + 2 * coloredStrokeWidth(SymbolSizes);\r\n        dest_loc_x = '' + Math.round((parseFloat(src_loc_x) + (dest_vector_length - delta_dec) / dest_vector_length * dest_delta_x) * 100.) / 100.;\r\n        dest_loc_y = '' + Math.round((parseFloat(src_loc_y) + (dest_vector_length - delta_dec) / dest_vector_length * dest_delta_y) * 100.) / 100.;\r\n\r\n        return (\r\n            <g stroke={Colors[this.props.powerName]}>\r\n                <line x1={loc_x}\r\n                      y1={loc_y}\r\n                      x2={src_loc_x_1}\r\n                      y2={src_loc_y_1}\r\n                      className={'shadowdash'}/>\r\n                <line x1={src_loc_x_2}\r\n                      y1={src_loc_y_2}\r\n                      x2={dest_loc_x}\r\n                      y2={dest_loc_y}\r\n                      className={'shadowdash'}/>\r\n                <line x1={loc_x}\r\n                      y1={loc_y}\r\n                      x2={src_loc_x_1}\r\n                      y2={src_loc_y_1}\r\n                      className={'convoyorder'}\r\n                      stroke={Colors[this.props.powerName]}/>\r\n                <line x1={src_loc_x_2}\r\n                      y1={src_loc_y_2}\r\n                      x2={dest_loc_x}\r\n                      y2={dest_loc_y}\r\n                      className={'convoyorder'}\r\n                      markerEnd={'url(#arrow)'}\r\n                      stroke={Colors[this.props.powerName]}/>\r\n                <use\r\n                    x={symbol_loc_x}\r\n                    y={symbol_loc_y}\r\n                    width={'' + symbol_width}\r\n                    height={'' + symbol_height}\r\n                    href={`#${symbol}`}\r\n                />\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nConvoy.propTypes = {\r\n    loc: PropTypes.string.isRequired,\r\n    srcLoc: PropTypes.string.isRequired,\r\n    dstLoc: PropTypes.string.isRequired,\r\n    powerName: PropTypes.string.isRequired,\r\n    coordinates: PropTypes.object.isRequired,\r\n    symbolSizes: PropTypes.object.isRequired,\r\n    colors: PropTypes.object.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {ARMY, centerSymbolAroundUnit, FLEET} from \"./common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Build extends React.Component {\r\n    render() {\r\n        const Coordinates = this.props.coordinates;\r\n        const SymbolSizes = this.props.symbolSizes;\r\n        const loc = this.props.loc;\r\n        const unit_type = this.props.unitType;\r\n        const build_symbol = 'BuildUnit';\r\n        const loc_x = Coordinates[loc].unit[0];\r\n        const loc_y = Coordinates[loc].unit[1];\r\n        const [build_loc_x, build_loc_y] = centerSymbolAroundUnit(Coordinates, SymbolSizes, loc, false, build_symbol);\r\n\r\n        const symbol = unit_type === 'A' ? ARMY : FLEET;\r\n        return (\r\n            <g>\r\n                <use x={build_loc_x}\r\n                     y={build_loc_y}\r\n                     height={SymbolSizes[build_symbol].height}\r\n                     width={SymbolSizes[build_symbol].width}\r\n                     href={`#${build_symbol}`}/>\r\n                <use x={loc_x}\r\n                     y={loc_y}\r\n                     height={SymbolSizes[symbol].height}\r\n                     width={SymbolSizes[symbol].width}\r\n                     href={`#${symbol}`}\r\n                     className={`unit${this.props.powerName.toLowerCase()}`}/>\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nBuild.propTypes = {\r\n    unitType: PropTypes.string.isRequired,\r\n    loc: PropTypes.string.isRequired,\r\n    powerName: PropTypes.string.isRequired,\r\n    coordinates: PropTypes.object.isRequired,\r\n    symbolSizes: PropTypes.object.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {centerSymbolAroundUnit} from \"./common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Disband extends React.Component {\r\n    render() {\r\n        const Coordinates = this.props.coordinates;\r\n        const SymbolSizes = this.props.symbolSizes;\r\n        const loc = this.props.loc;\r\n        const phaseType = this.props.phaseType;\r\n        const symbol = 'RemoveUnit';\r\n        const [loc_x, loc_y] = centerSymbolAroundUnit(Coordinates, SymbolSizes, loc, phaseType === 'R', symbol);\r\n        return (\r\n            <g>\r\n                <use x={loc_x}\r\n                     y={loc_y}\r\n                     height={SymbolSizes[symbol].height}\r\n                     width={SymbolSizes[symbol].width}\r\n                     href={`#${symbol}`}\r\n                />\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nDisband.propTypes = {\r\n    loc: PropTypes.string.isRequired,\r\n    phaseType: PropTypes.string.isRequired,\r\n    coordinates: PropTypes.object.isRequired,\r\n    symbolSizes: PropTypes.object.isRequired\r\n};\r\n","/**\r\n==============================================================================\r\nCopyright (C) 2019 - Philip Paquette, Steven Bocco\r\n\r\n This program is free software: you can redistribute it and/or modify it under\r\n the terms of the GNU Affero General Public License as published by the Free\r\n Software Foundation, either version 3 of the License, or (at your option) any\r\n later version.\r\n\r\n This program is distributed in the hope that it will be useful, but WITHOUT\r\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n details.\r\n\r\n You should have received a copy of the GNU Affero General Public License along\r\n with this program.  If not, see <https:www.gnu.org/licenses/>.\r\n==============================================================================\r\n**/\r\n/** Generated with parameters: Namespace(input='src/diplomacy/maps/svg/standard.svg', name='SvgStandard', output='src/gui/maps/standard/') **/\r\n import React from 'react'; import PropTypes from 'prop-types'; import './SvgStandard.css'; import {Coordinates, SymbolSizes, Colors} from \"./SvgStandardMetadata\"; import {getClickedID, parseLocation, setInfluence} from \"../common/common\"; import {Game} from \"../../../diplomacy/engine/game\"; import {MapData} from \"../../utils/map_data\"; import {UTILS} from \"../../../diplomacy/utils/utils\"; import {Diplog} from \"../../../diplomacy/utils/diplog\"; import {extendOrderBuilding} from \"../../utils/order_building\"; import {Unit} from \"../common/unit\"; import {Hold} from \"../common/hold\"; import {Move} from \"../common/move\"; import {SupportMove} from \"../common/supportMove\"; import {SupportHold} from \"../common/supportHold\"; import {Convoy} from \"../common/convoy\"; import {Build} from \"../common/build\"; import {Disband} from \"../common/disband\"; export class SvgStandard extends React.Component { constructor(props) { super(props); this.onClick = this.onClick.bind(this); this.onHover = this.onHover.bind(this); } onClick(event) { if (this.props.orderBuilding) return this.handleClickedID(getClickedID(event)); } onHover(event) { return this.handleHoverID(getClickedID(event)); } handleClickedID(id) { const orderBuilding = this.props.orderBuilding; if (!orderBuilding.builder) return this.props.onError('No orderable locations.'); const province = this.props.mapData.getProvince(id); if (!province) throw new Error(`Cannot find a province named ${id}`); const stepLength = orderBuilding.builder.steps.length; if (orderBuilding.path.length >= stepLength) throw new Error(`Order building: current steps count (${orderBuilding.path.length}) should be less than  expected steps count (${stepLength}) (${orderBuilding.path.join(', ')}).`); const lengthAfterClick = orderBuilding.path.length + 1; let validLocations = []; const testedPath = [orderBuilding.type].concat(orderBuilding.path); const value = UTILS.javascript.getTreeValue(this.props.game.ordersTree, testedPath); if (value !== null) { const checker = orderBuilding.builder.steps[lengthAfterClick - 1]; try { const possibleLocations = checker(province, orderBuilding.power); for (let possibleLocation of possibleLocations) { possibleLocation = possibleLocation.toUpperCase(); if (value.includes(possibleLocation)) validLocations.push(possibleLocation); } } catch (error) { return this.props.onError(error); } } if (!validLocations.length) return this.props.onError('Disallowed.'); if (validLocations.length > 1 && orderBuilding.type === 'S' && orderBuilding.path.length >= 2) { /* We are building a support order and we have a multiple choice for a location. */ /* Let's check if next location to choose is a coast. To have a coast: */ /* - all possible locations must start with same 3 characters. */ /* - we expect at least province name in possible locations (e.g. 'SPA' for 'SPA/NC'). */ /* If we have a coast, we will remove province name from possible locations. */ let isACoast = true; let validLocationsNoProvinceName = []; for (let i = 0; i < validLocations.length; ++i) { let location = validLocations[i]; if (i > 0) { /* Compare 3 first letters with previous location. */ if (validLocations[i - 1].substring(0, 3).toUpperCase() !== validLocations[i].substring(0, 3).toUpperCase()) { /* No same prefix with previous location. We does not have a coast. */ isACoast = false; break; } } if (location.length !== 3) validLocationsNoProvinceName.push(location); } if (validLocations.length === validLocationsNoProvinceName.length) { /* We have not found province name. */ isACoast = false; } if (isACoast) { /* We want to choose location in a coastal province. Let's remove province name. */ validLocations = validLocationsNoProvinceName; } } if (validLocations.length > 1) { if (this.props.onSelectLocation) { return this.props.onSelectLocation(validLocations, orderBuilding.power, orderBuilding.type, orderBuilding.path); } else { Diplog.warn(`Forced to select first valid location.`); validLocations = [validLocations[0]]; } } let orderBuildingType = orderBuilding.type; if (lengthAfterClick === stepLength && orderBuildingType === 'M') { const moveOrderPath = ['M'].concat(orderBuilding.path, validLocations[0]); const moveTypes = UTILS.javascript.getTreeValue(this.props.game.ordersTree, moveOrderPath); if (moveTypes !== null) { if (moveTypes.length === 2 && this.props.onSelectVia) { /* This move can be done either regularly or VIA a fleet. Let user choose. */ return this.props.onSelectVia(validLocations[0], orderBuilding.power, orderBuilding.path); } else { orderBuildingType = moveTypes[0]; } } } extendOrderBuilding( orderBuilding.power, orderBuildingType, orderBuilding.path, validLocations[0], this.props.onOrderBuilding, this.props.onOrderBuilt, this.props.onError ); } handleHoverID(id) { if (this.props.onHover) { const province = this.props.mapData.getProvince(id); if (province) { this.props.onHover(province.name, this.getRelatedOrders(province.name)); } } } getRelatedOrders(name) { const orders = []; if (this.props.orders) { for (let powerOrders of Object.values(this.props.orders)) { if (powerOrders) { for (let order of powerOrders) { const pieces = order.split(/ +/); if (pieces[1].slice(0, 3) === name.toUpperCase().slice(0, 3)) orders.push(order); } } } } return orders; } getNeighbors(extraLocation) { const selectedPath = [this.props.orderBuilding.type].concat(this.props.orderBuilding.path); if (extraLocation) selectedPath.push(extraLocation); const possibleNeighbors = UTILS.javascript.getTreeValue(this.props.game.ordersTree, selectedPath); const neighbors = possibleNeighbors ? possibleNeighbors.map(neighbor => parseLocation(neighbor)) : []; return neighbors.length ? neighbors: null; } render() { const classes = {\"_ank\":\"nopower\",\"_arm\":\"nopower\",\"_con\":\"nopower\",\"_mos\":\"nopower\",\"_sev\":\"nopower\",\"_stp\":\"nopower\",\"_syr\":\"nopower\",\"_ukr\":\"nopower\",\"_lvn\":\"nopower\",\"_war\":\"nopower\",\"_pru\":\"nopower\",\"_sil\":\"nopower\",\"_ber\":\"nopower\",\"_kie\":\"nopower\",\"_ruh\":\"nopower\",\"_mun\":\"nopower\",\"_rum\":\"nopower\",\"_bul\":\"nopower\",\"_gre\":\"nopower\",\"_smy\":\"nopower\",\"_alb\":\"nopower\",\"_ser\":\"nopower\",\"_bud\":\"nopower\",\"_gal\":\"nopower\",\"_vie\":\"nopower\",\"_boh\":\"nopower\",\"_tyr\":\"nopower\",\"_tri\":\"nopower\",\"_fin\":\"nopower\",\"_swe\":\"nopower\",\"_nwy\":\"nopower\",\"_den\":\"nopower\",\"_hol\":\"nopower\",\"_bel\":\"nopower\",\"_swi\":\"impassable\",\"_ven\":\"nopower\",\"_pie\":\"nopower\",\"_tus\":\"nopower\",\"_rom\":\"nopower\",\"_apu\":\"nopower\",\"_nap\":\"nopower\",\"_bur\":\"nopower\",\"_mar\":\"nopower\",\"_gas\":\"nopower\",\"_pic\":\"nopower\",\"_par\":\"nopower\",\"_bre\":\"nopower\",\"_spa\":\"nopower\",\"_por\":\"nopower\",\"_naf\":\"nopower\",\"_tun\":\"nopower\",\"_lon\":\"nopower\",\"_wal\":\"nopower\",\"_lvp\":\"nopower\",\"_yor\":\"nopower\",\"_edi\":\"nopower\",\"_cly\":\"nopower\",\"unplayable\":\"neutral\",\"unplayable_water\":\"water\",\"_nat\":\"water\",\"_nrg\":\"water\",\"_bar\":\"water\",\"_bot\":\"water\",\"_bal\":\"water\",\"denmark_water\":\"water\",\"_ska\":\"water\",\"_hel\":\"water\",\"_nth\":\"water\",\"_eng\":\"water\",\"_iri\":\"water\",\"_mid\":\"water\",\"_wes\":\"water\",\"_gol\":\"water\",\"_tyn\":\"water\",\"_adr\":\"water\",\"_ion\":\"water\",\"_aeg\":\"water\",\"_eas\":\"water\",\"constantinople_water\":\"water\",\"_bla\":\"water\",\"BriefLabelLayer\":\"labeltext24\",\"CurrentNote\":\"currentnotetext\",\"CurrentNote2\":\"currentnotetext\",\"CurrentPhase\":\"currentphasetext\",\"MouseLayer\":\"invisibleContent\"}; const game = this.props.game; const mapData = this.props.mapData; const orders = this.props.orders; /* Current phase. */ const current_phase = (game.phase[0] === '?' || game.phase === 'COMPLETED') ? 'FINAL' : game.phase; /* Notes. */ const nb_centers = []; for (let power of Object.values(game.powers)) { if (!power.isEliminated()) nb_centers.push([power.name.substr(0, 3), power.centers.length]); } /* Sort nb_centers by descending number of centers. */ nb_centers.sort((a, b) => { return -(a[1] - b[1]) || a[0].localeCompare(b[0]); }); const nb_centers_per_power = nb_centers.map((couple) => (couple[0] + ': ' + couple[1])).join(' '); const note = game.note; /* Adding units, influence and orders. */ const renderedUnits = []; const renderedDislodgedUnits = []; const renderedOrders = []; const renderedOrders2 = []; const renderedHighestOrders = []; for (let power of Object.values(game.powers)) if (!power.isEliminated()) { for (let unit of power.units) { renderedUnits.push( <Unit key={unit} unit={unit} powerName={power.name} isDislodged={false} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } for (let unit of Object.keys(power.retreats)) { renderedDislodgedUnits.push( <Unit key={unit} unit={unit} powerName={power.name} isDislodged={true} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } for (let center of power.centers) { setInfluence(classes, mapData, center, power.name); } for (let loc of power.influence) { if (!mapData.supplyCenters.has(loc)) setInfluence(classes, mapData, loc, power.name); } if (orders) { const powerOrders = (orders && orders.hasOwnProperty(power.name) && orders[power.name]) || []; for (let order of powerOrders) { const tokens = order.split(/ +/); if (!tokens || tokens.length < 3) continue; const unit_loc = tokens[1]; if (tokens[2] === 'H') { renderedOrders.push( <Hold key={order} loc={unit_loc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else if (tokens[2] === '-') { const destLoc = tokens[tokens.length - (tokens[tokens.length - 1] === 'VIA' ? 2 : 1)]; renderedOrders.push( <Move key={order} srcLoc={unit_loc} dstLoc={destLoc} powerName={power.name} phaseType={game.getPhaseType()} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else if (tokens[2] === 'S') { const destLoc = tokens[tokens.length - 1]; if (tokens.includes('-')) { const srcLoc = tokens[4]; renderedOrders2.push( <SupportMove key={order} loc={unit_loc} srcLoc={srcLoc} dstLoc={destLoc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else { renderedOrders2.push( <SupportHold key={order} loc={unit_loc} dstLoc={destLoc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } } else if (tokens[2] === 'C') { const srcLoc = tokens[4]; const destLoc = tokens[tokens.length - 1]; if ((srcLoc !== destLoc) && (tokens.includes('-'))) { renderedOrders2.push( <Convoy key={order} loc={unit_loc} srcLoc={srcLoc} dstLoc={destLoc} powerName={power.name} coordinates={Coordinates} colors={Colors} symbolSizes={SymbolSizes}/> ); } } else if (tokens[2] === 'B') { renderedHighestOrders.push( <Build key={order} unitType={tokens[0]} loc={unit_loc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } else if (tokens[2] === 'D') { renderedHighestOrders.push( <Disband key={order} loc={unit_loc} phaseType={game.getPhaseType()} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } else if (tokens[2] === 'R') { const destLoc = tokens[3]; renderedOrders.push( <Move key={order} srcLoc={unit_loc} dstLoc={destLoc} powerName={power.name} phaseType={game.getPhaseType()} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else { throw new Error(`Unknown error to render (${order}).`); } } } } if (this.props.orderBuilding && this.props.orderBuilding.path.length) { const clicked = parseLocation(this.props.orderBuilding.path[0]); const province = this.props.mapData.getProvince(clicked); if (!province) throw new Error(('Unknown clicked province ' + clicked)); const clickedID = province.getID(classes); if (!clicked) throw new Error(`Unknown path (${clickedID}) for province (${clicked}).`); classes[clickedID] = 'provinceRed'; const neighbors = this.getNeighbors(); if (neighbors) { for (let neighbor of neighbors) { const neighborProvince = this.props.mapData.getProvince(neighbor); if (!neighborProvince) throw new Error('Unknown neighbor province ' + neighbor); const neighborID = neighborProvince.getID(classes); if (!neighborID) throw new Error(`Unknown neoghbor path (${neighborID}) for province (${neighbor}).`); classes[neighborID] = neighborProvince.isWater() ? 'provinceBlue' : 'provinceGreen'; } } } if (this.props.showAbbreviations === false) { classes['BriefLabelLayer'] = 'visibilityHidden'; } return ( <svg className=\"SvgStandard\" colorRendering=\"optimizeQuality\" height=\"680px\" preserveAspectRatio=\"xMinYMin\" viewBox=\"0 0 1835 1360\" width=\"918px\" xmlns=\"http://www.w3.org/2000/svg\"> <defs> <symbol id=\"WaivedBuild\" overflow=\"visible\" viewBox=\"0 0 100 100\"> <linearGradient gradientUnits=\"userSpaceOnUse\" id=\"symWBGradient\" x1=\"15\" x2=\"100\" y1=\"100\" y2=\"10\"> <stop offset=\"20%\" stopColor=\"yellow\" stopOpacity=\"1\"/> <stop offset=\"95%\" stopColor=\"yellow\" stopOpacity=\"0\"/> </linearGradient> <linearGradient gradientUnits=\"userSpaceOnUse\" id=\"symShadowWBGradient\" x1=\"15\" x2=\"100\" y1=\"100\" y2=\"10\"> <stop offset=\"20%\" stopColor=\"black\" stopOpacity=\"0.5\"/> <stop offset=\"90%\" stopColor=\"black\" stopOpacity=\"0\"/> </linearGradient> <g> <polygon fill=\"url(#symShadowWBGradient)\" points=\"40,100 100,35 95,30 40,85 13,65 10,70\" transform=\"translate(1 7)\"/> <polygon fill=\"url(#symWBGradient)\" points=\"40,100 100,35 90,20 40,85 13,65 10,70\" stroke=\"black\" strokeWidth=\"0.5\"/> </g> </symbol> <symbol id=\"BuildUnit\" overflow=\"visible\" viewBox=\"-23.5 -23.5 153 153\"> <g> <g fill=\"none\" opacity=\"0.5\" stroke=\"black\" strokeWidth=\"7\" transform=\"translate(6 6)\"> <circle cx=\"50\" cy=\"50\" r=\"10\"/> <circle cx=\"50\" cy=\"50\" r=\"30\"/> <circle cx=\"50\" cy=\"50\" r=\"50\"/> <circle cx=\"50\" cy=\"50\" r=\"70\"/> </g> <g fill=\"none\" stroke=\"yellow\" strokeWidth=\"7\"> <circle cx=\"50\" cy=\"50\" r=\"10\"/> <circle cx=\"50\" cy=\"50\" r=\"30\"/> <circle cx=\"50\" cy=\"50\" r=\"50\"/> <circle cx=\"50\" cy=\"50\" r=\"70\"/> </g> </g> </symbol> <symbol id=\"RemoveUnit\" overflow=\"visible\" viewBox=\"-2.5 -2.5 15.5 15.5\"> <g fill=\"none\" stroke=\"red\" strokeWidth=\"1\"> <circle cx=\"5\" cy=\"5\" r=\"7\"/> <line x1=\"-2\" x2=\"12\" y1=\"-2\" y2=\"12\"/> <line x1=\"-2\" x2=\"12\" y1=\"12\" y2=\"-2\"/> </g> </symbol> <symbol id=\"FailedOrder\" overflow=\"visible\" viewBox=\"0 0 35 35\"> <g> <polygon className=\"shadow\" points=\"0,0 12,0 17,6 22,0 35,0 22,17 32,34 19,34 15,27 9,34 -4,34 10,17\" strokeWidth=\"1\" transform=\"translate(3.5,3.5)\"/> <polygon fill=\"red\" fillOpacity=\"1\" points=\"0,0 12,0 17,6 22,0 35,0 22,17 32,34 19,34 15,27 9,34 -4,34 10,17\" stroke=\"black\" strokeWidth=\"3%\"/> </g> </symbol> <symbol id=\"SupplyCenter\" overflow=\"visible\" viewBox=\"-0.375 -0.375 10.75 10.75\"> <g> <circle cx=\"5\" cy=\"5\" r=\"3\" stroke=\"black\" strokeWidth=\"0.4\"/> <circle cx=\"5\" cy=\"5\" fill=\"none\" r=\"5\" stroke=\"black\" strokeWidth=\"0.75\"/> </g> </symbol> <symbol id=\"HoldUnit\" overflow=\"visible\" viewBox=\"-5 -5 76.6 76.6\"> <g> <polygon fill=\"none\" points=\"47.1,0.0 66.6,19.5 66.6, 47.1 47.1,66.6 19.5,66.6 0.0,47.1 0.0,19.5 19.5,0.0\" stroke=\"black\" strokeWidth=\"10\"/> <polygon fill=\"none\" points=\"47.1,0.0 66.6,19.5 66.6, 47.1 47.1,66.6 19.5,66.6 0.0,47.1 0.0,19.5 19.5,0.0\" strokeWidth=\"6\"/> </g> </symbol> <symbol id=\"SupportHoldUnit\" overflow=\"visible\" viewBox=\"-5 -5 86.6 86.6\"> <g> <polygon fill=\"none\" opacity=\"0.45\" points=\"54.2,0.0 76.6,22.4 76.6,54.2 54.2,76.6 22.4,76.6 0.0,54.2 0.0,22.4 22.4,0.0\" stroke=\"black\" strokeWidth=\"10\"/> <polygon fill=\"none\" points=\"54.2,0.0 76.6,22.4 76.6,54.2 54.2,76.6 22.4,76.6 0.0,54.2 0.0,22.4 22.4,0.0\" strokeDasharray=\"5,5\" strokeWidth=\"6\"/> </g> </symbol> <symbol id=\"ConvoyTriangle\" overflow=\"visible\" viewBox=\"-9 -10 84.4 72.4\"> <g> <polygon fill=\"none\" opacity=\"0.45\" points=\"33.2,0.0 66.4,57.4 0.0,57.4\" stroke=\"black\" strokeWidth=\"10\"/> <polygon fill=\"none\" points=\"33.2,0.0 66.4,57.4 0.0,57.4\" strokeDasharray=\"15,5\" strokeWidth=\"6\"/> </g> </symbol> <symbol id=\"Army\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"black\" height=\"13\" opacity=\"0.40\" rx=\"4\" stroke=\"black\" strokeWidth=\"1\" width=\"23\" x=\"2\" y=\"2\"/> <rect height=\"13\" rx=\"4\" stroke=\"black\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"13\" x=\"6\" y=\"6\"/> <rect height=\"1\" width=\"14\" x=\"5\" y=\"7\"/> <rect height=\"1\" width=\"12\" x=\"6\" y=\"8\"/> <rect height=\"1\" width=\"10\" x=\"7\" y=\"9\"/> <rect height=\"3\" width=\"5\" x=\"10\" y=\"3\"/> <rect height=\"1.5\" width=\"1\" x=\"15\" y=\"4.5\"/> <line x1=\"3\" x2=\"10\" y1=\"4\" y2=\"4\"/> </g> </g> </symbol> <symbol id=\"Fleet\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"black\" height=\"13\" opacity=\"0.40\" rx=\"4\" stroke=\"black\" strokeWidth=\"1\" width=\"23\" x=\"2\" y=\"2\"/> <rect height=\"13\" rx=\"4\" stroke=\"black\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"16.5\" x=\"3\" y=\"7\"/> <rect height=\"1\" width=\"15\" x=\"4\" y=\"8\"/> <rect height=\"1\" width=\"13.5\" x=\"5\" y=\"9\"/> <rect height=\"1\" width=\"2.75\" x=\"13.5\" y=\"6\"/> <rect height=\"2\" width=\"4\" x=\"7\" y=\"5\"/> <rect height=\"1\" width=\"1\" x=\"8.5\" y=\"4\"/> <rect height=\"1\" width=\"1\" x=\"6\" y=\"6\"/> </g> </g> </symbol> <symbol id=\"DislodgedArmy\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"red\" height=\"13\" opacity=\"0.50\" rx=\"4\" stroke=\"red\" strokeWidth=\"1\" width=\"23\" x=\"3\" y=\"3\"/> <rect height=\"13\" rx=\"4\" stroke=\"red\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"13\" x=\"6\" y=\"6\"/> <rect height=\"1\" width=\"14\" x=\"5\" y=\"7\"/> <rect height=\"1\" width=\"12\" x=\"6\" y=\"8\"/> <rect height=\"1\" width=\"10\" x=\"7\" y=\"9\"/> <rect height=\"3\" width=\"5\" x=\"10\" y=\"3\"/> <rect height=\"1.5\" width=\"1\" x=\"15\" y=\"4.5\"/> <line x1=\"3\" x2=\"10\" y1=\"4\" y2=\"4\"/> </g> </g> </symbol> <symbol id=\"DislodgedFleet\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"red\" height=\"13\" opacity=\"0.50\" rx=\"4\" stroke=\"red\" strokeWidth=\"1\" width=\"23\" x=\"3\" y=\"3\"/> <rect height=\"13\" rx=\"4\" stroke=\"red\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"16.5\" x=\"3\" y=\"7\"/> <rect height=\"1\" width=\"15\" x=\"4\" y=\"8\"/> <rect height=\"1\" width=\"13.5\" x=\"5\" y=\"9\"/> <rect height=\"1\" width=\"2.75\" x=\"13.5\" y=\"6\"/> <rect height=\"2\" width=\"4\" x=\"7\" y=\"5\"/> <rect height=\"1\" width=\"1\" x=\"8.5\" y=\"4\"/> <rect height=\"1\" width=\"1\" x=\"6\" y=\"6\"/> </g> </g> </symbol> <marker id=\"arrow\" markerHeight=\"4\" markerUnits=\"strokeWidth\" markerWidth=\"4\" orient=\"auto\" refX=\"5\" refY=\"5\" viewBox=\"0 0 10 10\"><path d=\"M 0 0 L 10 5 L 0 10 z\"/></marker> <pattern height=\"10\" id=\"patternRed\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"red\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"pink\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternBrown\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"peru\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"antiquewhite\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternGreen\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"seagreen\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"yellowgreen\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternBlue\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"CornflowerBlue\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"cyan\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternBlack\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"black\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"gray\" height=\"10\" width=\"10\" x=\"0\" y=\"5\"/> </pattern> </defs> <g id=\"MapLayer\" transform=\"translate(-195 -170)\"> <rect fill=\"black\" height=\"1360\" width=\"1835\" x=\"195\" y=\"170\"/> <path className={classes['_ank']} d=\"M 1424 1364 C 1437 1361 1448 1353 1459 1346 C 1464 1343 1470 1337 1475 1336 C 1482 1334 1492 1338 1499 1340 C 1510 1342 1518 1341 1528 1336 C 1544 1328 1555 1307 1575 1297 C 1587 1291 1598 1293 1611 1293 C 1614 1293 1621 1292 1624 1292 C 1646 1286 1638 1257 1637 1241 C 1618 1244 1604 1253 1583 1253 C 1566 1253 1565 1248 1554 1246 C 1553 1247 1553 1248 1551 1248 C 1548 1249 1541 1242 1538 1240 C 1535 1242 1529 1247 1526 1246 C 1521 1245 1517 1235 1511 1235 C 1507 1236 1507 1239 1497 1241 C 1483 1243 1471 1243 1457 1249 C 1450 1253 1440 1261 1435 1266 C 1433 1268 1421 1282 1420 1284 C 1419 1286 1419 1290 1419 1292 C 1419 1300 1423 1305 1425 1312 C 1428 1318 1430 1326 1431 1333 C 1432 1342 1427 1355 1424 1364 z\" id=\"_ank\"/> <path className={classes['_arm']} d=\"M 1671 1218 C 1663 1226 1648 1237 1638 1240 C 1638 1240 1641 1241 1641 1241 C 1641 1241 1643 1272 1643 1272 C 1642 1279 1638 1298 1639 1303 C 1641 1311 1648 1312 1652 1318 C 1658 1325 1657 1329 1657 1337 C 1657 1337 1708 1337 1708 1337 C 1708 1337 1720 1338 1720 1338 C 1720 1338 1730 1338 1730 1338 C 1730 1338 1825 1348 1825 1348 C 1825 1348 1837 1349 1837 1349 C 1837 1349 1845 1349 1845 1349 C 1853 1349 1867 1347 1874 1345 C 1892 1339 1913 1320 1927 1307 C 1927 1307 1956 1280 1956 1280 C 1956 1280 1938 1277 1938 1277 C 1922 1273 1905 1266 1896 1251 C 1894 1251 1890 1252 1888 1252 C 1883 1251 1872 1247 1869 1242 C 1868 1240 1867 1220 1858 1221 C 1853 1221 1846 1232 1843 1236 C 1833 1248 1822 1262 1805 1261 C 1784 1260 1786 1252 1767 1252 C 1767 1252 1753 1252 1753 1252 C 1753 1252 1736 1251 1736 1251 C 1727 1251 1722 1253 1713 1250 C 1697 1243 1680 1223 1671 1218 z\" id=\"_arm\"/> <path className={classes['_con']} d=\"M 1331 1267 C 1320 1272 1310 1264 1298 1274 C 1289 1282 1298 1291 1291 1305 C 1289 1310 1284 1314 1287 1316 C 1289 1319 1295 1316 1303 1317 C 1303 1317 1303 1319 1303 1319 C 1299 1321 1292 1327 1290 1332 C 1294 1330 1296 1329 1297 1324 C 1297 1324 1323 1304 1323 1304 C 1323 1304 1337 1298 1337 1298 C 1337 1298 1356 1294 1356 1294 C 1356 1294 1340 1282 1340 1282 C 1340 1282 1331 1267 1331 1267 z M 1414 1284 C 1414 1284 1389 1288 1389 1288 C 1389 1288 1375 1292 1375 1292 C 1372 1292 1361 1293 1364 1299 C 1366 1301 1376 1303 1380 1304 C 1380 1304 1380 1306 1380 1306 C 1380 1306 1367 1310 1367 1310 C 1367 1310 1357 1315 1357 1315 C 1357 1315 1348 1318 1348 1318 C 1341 1321 1342 1326 1329 1326 C 1322 1326 1314 1323 1308 1328 C 1304 1331 1290 1344 1288 1349 C 1287 1351 1287 1353 1288 1356 C 1296 1354 1305 1345 1307 1359 C 1307 1359 1307 1364 1307 1364 C 1311 1361 1315 1355 1319 1355 C 1323 1354 1328 1358 1331 1360 C 1335 1363 1340 1364 1345 1365 C 1355 1366 1363 1362 1368 1361 C 1374 1361 1378 1364 1383 1365 C 1389 1365 1393 1361 1400 1361 C 1405 1361 1407 1361 1412 1362 C 1414 1363 1418 1364 1419 1363 C 1422 1362 1424 1355 1424 1352 C 1429 1337 1427 1328 1422 1314 C 1422 1314 1416 1297 1416 1297 C 1415 1292 1416 1288 1414 1284 z M 1346 1295 C 1346 1295 1346 1296 1346 1296 C 1346 1296 1345 1295 1345 1295 C 1345 1295 1346 1295 1346 1295 z\" id=\"_con\"/> <path className={classes['_mos']} d=\"M 2022 319 C 2022 319 1994 345 1994 345 C 1994 345 1970 368 1970 368 C 1929 405 1867 454 1820 484 C 1791 502 1771 510 1741 525 C 1741 525 1716 539 1716 539 C 1708 544 1703 547 1694 551 C 1679 557 1664 558 1648 562 C 1618 570 1610 579 1590 585 C 1590 585 1546 593 1546 593 C 1535 596 1530 601 1521 607 C 1512 612 1496 620 1487 623 C 1468 629 1453 625 1434 632 C 1418 639 1408 654 1405 671 C 1404 678 1406 690 1401 696 C 1391 707 1376 685 1365 691 C 1360 693 1356 701 1353 706 C 1348 713 1340 724 1334 730 C 1321 742 1301 741 1284 741 C 1284 754 1279 767 1278 772 C 1278 777 1279 780 1280 784 C 1280 792 1276 793 1276 804 C 1276 804 1278 828 1278 828 C 1278 838 1278 846 1268 851 C 1264 853 1259 854 1255 856 C 1255 856 1242 870 1242 870 C 1242 870 1228 882 1228 882 C 1226 883 1222 886 1221 888 C 1220 891 1222 897 1223 900 C 1225 911 1226 909 1229 918 C 1229 918 1234 935 1234 935 C 1237 932 1238 930 1242 927 C 1247 925 1271 918 1278 916 C 1278 916 1353 897 1353 897 C 1364 894 1385 889 1396 889 C 1401 889 1407 889 1412 890 C 1415 890 1424 892 1427 892 C 1432 891 1438 885 1448 884 C 1448 884 1481 888 1481 888 C 1490 888 1497 888 1502 880 C 1506 873 1508 855 1519 855 C 1525 855 1535 862 1541 865 C 1551 869 1556 870 1567 870 C 1579 870 1580 865 1588 866 C 1593 867 1602 869 1606 872 C 1617 879 1623 900 1636 913 C 1647 924 1652 919 1660 927 C 1667 936 1662 948 1673 958 C 1678 962 1688 966 1694 968 C 1707 974 1719 977 1732 984 C 1748 993 1759 1009 1770 1017 C 1771 1015 1771 1011 1773 1010 C 1776 1008 1778 1010 1780 1010 C 1784 1009 1786 1005 1788 1002 C 1791 996 1789 991 1793 985 C 1797 977 1808 967 1815 960 C 1815 960 1828 941 1828 941 C 1834 935 1842 931 1849 928 C 1863 923 1881 917 1889 934 C 1892 941 1895 955 1895 963 C 1895 969 1896 975 1892 980 C 1887 988 1878 987 1874 997 C 1869 1008 1879 1013 1874 1020 C 1869 1028 1858 1029 1854 1040 C 1866 1041 1876 1045 1885 1053 C 1892 1060 1891 1065 1895 1067 C 1897 1067 1900 1067 1902 1067 C 1907 1067 1909 1070 1916 1068 C 1920 1068 1926 1064 1930 1065 C 1936 1066 1936 1072 1936 1077 C 1936 1088 1935 1099 1947 1105 C 1947 1096 1946 1088 1954 1081 C 1957 1079 1960 1079 1964 1080 C 1969 1081 1975 1087 1980 1090 C 1985 1093 1994 1094 1997 1100 C 1999 1105 1996 1111 1994 1115 C 1987 1126 1985 1124 1975 1127 C 1973 1128 1969 1130 1967 1130 C 1965 1130 1961 1128 1959 1127 C 1959 1138 1964 1147 1970 1156 C 1976 1153 1983 1143 1989 1143 C 1991 1142 1993 1143 1993 1145 C 1993 1148 1990 1151 1990 1154 C 1989 1160 1993 1158 1988 1166 C 1988 1166 2007 1175 2007 1175 C 2007 1175 2013 1183 2013 1183 C 2013 1183 2022 1217 2022 1217 C 2022 1217 2023 1195 2023 1195 C 2023 1195 2023 1149 2023 1149 C 2023 1149 2023 990 2023 990 C 2023 990 2023 516 2023 516 C 2023 516 2023 378 2023 378 C 2023 378 2023 338 2023 338 C 2023 338 2022 319 2022 319 z\" id=\"_mos\"/> <path className={classes['_sev']} d=\"M 1364 1100 C 1367 1100 1372 1102 1374 1101 C 1376 1101 1381 1094 1383 1092 C 1389 1087 1394 1085 1401 1084 C 1404 1083 1410 1082 1413 1084 C 1419 1086 1415 1090 1411 1091 C 1411 1091 1406 1092 1406 1092 C 1408 1094 1410 1099 1412 1100 C 1422 1108 1442 1099 1446 1098 C 1450 1098 1453 1101 1452 1105 C 1452 1110 1446 1112 1442 1115 C 1437 1118 1435 1122 1434 1128 C 1439 1129 1450 1131 1453 1135 C 1457 1140 1451 1155 1464 1157 C 1466 1157 1467 1157 1469 1156 C 1474 1154 1480 1144 1485 1140 C 1491 1136 1499 1137 1499 1127 C 1503 1126 1504 1126 1508 1126 C 1508 1126 1512 1126 1512 1126 C 1514 1126 1518 1126 1519 1124 C 1521 1122 1520 1115 1516 1113 C 1509 1111 1504 1119 1499 1120 C 1490 1122 1478 1109 1471 1104 C 1469 1103 1461 1101 1461 1098 C 1460 1095 1464 1094 1466 1093 C 1474 1090 1479 1088 1486 1083 C 1486 1083 1512 1061 1512 1061 C 1512 1061 1549 1043 1549 1043 C 1549 1043 1564 1033 1564 1033 C 1566 1032 1569 1030 1571 1031 C 1575 1033 1571 1039 1569 1041 C 1569 1041 1543 1061 1543 1061 C 1545 1064 1546 1066 1549 1067 C 1552 1067 1556 1066 1557 1070 C 1558 1073 1557 1077 1556 1080 C 1556 1080 1549 1097 1549 1097 C 1548 1102 1549 1109 1544 1112 C 1540 1115 1536 1112 1530 1111 C 1531 1119 1535 1119 1542 1122 C 1542 1122 1554 1126 1554 1126 C 1554 1126 1571 1130 1571 1130 C 1584 1134 1594 1138 1605 1145 C 1613 1150 1620 1157 1628 1160 C 1640 1166 1653 1164 1664 1171 C 1672 1176 1682 1188 1681 1198 C 1680 1204 1676 1209 1677 1212 C 1678 1216 1690 1226 1693 1228 C 1699 1234 1710 1242 1718 1245 C 1724 1246 1727 1244 1734 1244 C 1734 1244 1749 1246 1749 1246 C 1756 1246 1759 1245 1765 1245 C 1782 1244 1789 1254 1804 1255 C 1820 1256 1831 1242 1840 1230 C 1844 1224 1849 1215 1857 1214 C 1866 1213 1872 1224 1873 1231 C 1874 1233 1874 1237 1875 1239 C 1878 1244 1887 1246 1892 1245 C 1890 1239 1886 1229 1886 1223 C 1886 1218 1889 1218 1889 1212 C 1889 1203 1883 1184 1891 1178 C 1895 1175 1899 1174 1903 1173 C 1900 1167 1894 1170 1888 1169 C 1883 1168 1880 1166 1876 1163 C 1876 1163 1855 1144 1855 1144 C 1847 1139 1843 1139 1839 1136 C 1839 1136 1831 1128 1831 1128 C 1824 1122 1818 1118 1811 1110 C 1799 1097 1803 1092 1796 1084 C 1793 1079 1788 1075 1782 1073 C 1778 1071 1774 1071 1772 1068 C 1769 1064 1768 1055 1768 1051 C 1768 1051 1769 1035 1769 1035 C 1769 1027 1769 1028 1770 1020 C 1765 1019 1762 1014 1759 1011 C 1759 1011 1738 992 1738 992 C 1724 982 1708 978 1692 971 C 1685 968 1674 964 1668 958 C 1660 948 1662 936 1658 930 C 1655 926 1651 926 1646 924 C 1642 922 1639 920 1636 917 C 1628 909 1623 901 1617 892 C 1614 886 1609 877 1603 874 C 1599 871 1587 869 1582 870 C 1578 871 1576 873 1569 874 C 1559 875 1550 873 1541 868 C 1535 866 1522 857 1516 860 C 1513 861 1512 865 1510 868 C 1507 875 1506 882 1500 888 C 1488 897 1465 889 1451 888 C 1446 888 1433 891 1431 896 C 1430 898 1431 902 1432 904 C 1432 908 1434 917 1434 921 C 1434 921 1429 938 1429 938 C 1426 958 1424 989 1411 1006 C 1404 1015 1391 1024 1381 1029 C 1381 1029 1367 1035 1367 1035 C 1363 1038 1362 1041 1359 1045 C 1359 1045 1350 1058 1350 1058 C 1348 1063 1348 1065 1344 1070 C 1340 1074 1335 1079 1330 1083 C 1328 1085 1323 1088 1322 1090 C 1321 1092 1324 1103 1325 1107 C 1325 1115 1320 1130 1329 1140 C 1334 1144 1339 1142 1344 1141 C 1347 1140 1356 1139 1357 1137 C 1359 1136 1360 1132 1361 1130 C 1362 1126 1368 1116 1369 1113 C 1369 1108 1365 1107 1364 1100 z\" id=\"_sev\"/> <path className={classes['_stp']} d=\"M 1586 175 C 1590 180 1597 184 1598 190 C 1599 194 1597 196 1597 201 C 1598 204 1601 211 1595 211 C 1590 211 1588 204 1581 201 C 1578 207 1576 215 1572 220 C 1566 226 1562 224 1556 230 C 1551 236 1552 242 1550 245 C 1549 248 1547 248 1546 251 C 1544 254 1543 262 1543 266 C 1541 271 1539 277 1539 282 C 1540 291 1546 299 1547 308 C 1542 306 1541 303 1538 299 C 1530 288 1528 274 1530 261 C 1532 255 1537 239 1528 236 C 1525 235 1522 237 1522 240 C 1520 245 1523 248 1521 258 C 1520 257 1518 255 1516 255 C 1513 255 1511 258 1510 260 C 1506 265 1503 270 1500 276 C 1495 286 1493 293 1491 304 C 1490 311 1493 316 1489 322 C 1483 334 1471 334 1460 329 C 1456 328 1452 326 1449 323 C 1441 312 1463 307 1455 295 C 1450 288 1442 289 1434 288 C 1429 287 1424 286 1419 289 C 1428 296 1432 302 1434 313 C 1435 318 1436 327 1438 331 C 1440 335 1443 334 1446 337 C 1449 339 1451 342 1452 346 C 1453 351 1454 365 1449 368 C 1447 369 1445 369 1443 369 C 1438 369 1431 368 1426 372 C 1423 374 1418 386 1413 392 C 1410 396 1402 404 1403 409 C 1404 413 1409 416 1412 419 C 1416 422 1418 424 1421 428 C 1431 438 1435 433 1443 436 C 1445 437 1450 439 1448 442 C 1446 446 1437 443 1434 442 C 1426 441 1420 441 1412 441 C 1403 441 1398 443 1388 440 C 1381 438 1374 430 1369 433 C 1366 435 1366 440 1367 443 C 1368 448 1372 454 1377 455 C 1382 457 1385 454 1391 460 C 1396 466 1398 468 1392 474 C 1391 475 1390 477 1388 477 C 1384 479 1372 473 1368 471 C 1361 468 1352 467 1346 461 C 1343 457 1341 452 1338 448 C 1336 444 1331 439 1330 434 C 1328 428 1331 419 1326 414 C 1324 411 1319 411 1314 408 C 1314 408 1303 400 1303 400 C 1297 395 1296 396 1289 389 C 1288 387 1283 382 1286 380 C 1289 376 1295 385 1302 386 C 1302 386 1313 386 1313 386 C 1313 386 1322 390 1322 390 C 1329 391 1351 394 1358 394 C 1365 394 1378 395 1384 392 C 1395 387 1409 365 1406 352 C 1405 349 1394 336 1392 334 C 1383 327 1369 324 1358 321 C 1358 321 1313 304 1313 304 C 1303 303 1291 306 1284 306 C 1281 306 1272 304 1272 300 C 1272 297 1275 298 1276 291 C 1272 290 1267 289 1263 292 C 1257 296 1255 305 1252 312 C 1250 316 1246 322 1243 326 C 1241 329 1238 333 1237 336 C 1236 339 1237 344 1237 347 C 1240 361 1249 363 1251 372 C 1251 372 1253 396 1253 396 C 1254 406 1256 416 1258 426 C 1262 439 1275 471 1280 483 C 1287 498 1297 513 1297 530 C 1297 540 1292 539 1292 553 C 1292 553 1293 561 1293 561 C 1293 574 1286 587 1279 598 C 1276 603 1269 613 1272 619 C 1276 624 1284 623 1289 625 C 1293 626 1297 629 1300 631 C 1292 639 1293 635 1285 636 C 1285 636 1273 641 1273 641 C 1268 643 1266 651 1262 655 C 1258 658 1254 658 1249 658 C 1249 658 1226 656 1226 656 C 1214 656 1205 659 1194 665 C 1200 677 1215 678 1227 678 C 1232 678 1239 677 1243 678 C 1255 680 1256 690 1262 698 C 1267 705 1272 707 1276 712 C 1282 718 1284 729 1284 737 C 1301 737 1320 739 1334 726 C 1343 717 1349 705 1356 695 C 1360 690 1364 685 1371 686 C 1377 687 1383 692 1390 694 C 1393 695 1396 695 1398 693 C 1401 691 1401 683 1401 680 C 1401 673 1402 667 1404 661 C 1414 632 1438 623 1466 623 C 1484 623 1504 613 1519 604 C 1531 597 1535 592 1550 588 C 1550 588 1590 581 1590 581 C 1590 581 1643 560 1643 560 C 1643 560 1693 548 1693 548 C 1702 544 1709 539 1717 534 C 1717 534 1736 524 1736 524 C 1736 524 1795 495 1795 495 C 1825 477 1854 457 1882 436 C 1909 416 1934 395 1959 373 C 1959 373 1978 356 1978 356 C 1978 356 2008 328 2008 328 C 2012 324 2017 317 2023 316 C 2023 316 2023 175 2023 175 C 2023 175 1586 175 1586 175 z\" id=\"_stp\"/> <path className={classes['_syr']} d=\"M 2022 1247 C 2020 1256 2012 1263 2005 1268 C 1988 1280 1980 1283 1959 1280 C 1958 1285 1953 1287 1950 1290 C 1950 1290 1934 1305 1934 1305 C 1918 1320 1892 1344 1871 1350 C 1862 1352 1859 1351 1850 1352 C 1850 1352 1842 1353 1842 1353 C 1842 1353 1831 1352 1831 1352 C 1798 1352 1766 1345 1733 1342 C 1709 1340 1683 1341 1659 1341 C 1645 1341 1636 1348 1624 1353 C 1614 1358 1609 1356 1600 1365 C 1591 1374 1592 1381 1588 1392 C 1582 1405 1577 1410 1576 1412 C 1576 1412 1574 1420 1574 1420 C 1574 1420 1568 1433 1568 1433 C 1568 1433 1572 1437 1572 1437 C 1572 1437 1573 1459 1573 1459 C 1580 1460 1579 1463 1579 1468 C 1579 1468 1581 1475 1581 1475 C 1583 1484 1582 1484 1582 1492 C 1582 1492 1584 1509 1584 1509 C 1584 1509 1584 1527 1584 1527 C 1584 1527 2023 1527 2023 1527 C 2023 1527 2023 1330 2023 1330 C 2023 1330 2023 1273 2023 1273 C 2023 1273 2022 1247 2022 1247 z\" id=\"_syr\"/> <path className={classes['_ukr']} d=\"M 1275 1047 C 1293 1047 1303 1065 1311 1078 C 1311 1078 1318 1088 1318 1088 C 1324 1084 1337 1074 1341 1068 C 1344 1064 1344 1062 1347 1058 C 1347 1058 1362 1035 1362 1035 C 1367 1030 1371 1029 1377 1027 C 1383 1024 1390 1020 1395 1017 C 1415 1003 1417 987 1421 965 C 1421 965 1426 935 1426 935 C 1428 924 1431 925 1429 912 C 1429 909 1427 899 1425 897 C 1424 895 1419 895 1417 894 C 1409 893 1402 893 1394 893 C 1383 893 1365 898 1354 901 C 1354 901 1275 921 1275 921 C 1275 921 1257 926 1257 926 C 1249 928 1241 929 1237 938 C 1234 947 1237 953 1233 965 C 1232 968 1229 973 1230 976 C 1233 983 1249 989 1256 995 C 1266 1005 1275 1025 1275 1039 C 1275 1039 1275 1047 1275 1047 z\" id=\"_ukr\"/> <path className={classes['_lvn']} d=\"M 1190 668 C 1187 675 1186 680 1189 688 C 1192 699 1199 697 1203 702 C 1206 705 1206 708 1206 711 C 1207 719 1207 731 1204 738 C 1202 742 1197 749 1192 747 C 1185 745 1175 723 1164 725 C 1159 726 1157 731 1155 735 C 1151 744 1145 758 1145 767 C 1145 770 1145 777 1146 780 C 1148 782 1152 782 1157 789 C 1159 794 1160 800 1165 803 C 1171 808 1178 805 1185 815 C 1191 823 1191 835 1188 844 C 1187 848 1184 853 1185 857 C 1188 866 1202 873 1209 879 C 1212 881 1214 883 1217 886 C 1225 881 1236 871 1243 864 C 1243 864 1251 855 1251 855 C 1257 849 1263 850 1268 848 C 1275 843 1274 833 1274 826 C 1274 817 1271 810 1272 801 C 1273 796 1276 793 1276 786 C 1276 780 1273 778 1274 771 C 1274 771 1278 757 1278 757 C 1280 747 1281 732 1278 722 C 1274 710 1266 710 1260 701 C 1255 695 1253 686 1246 682 C 1240 679 1231 682 1224 682 C 1218 682 1207 680 1202 677 C 1198 675 1194 671 1190 668 z\" id=\"_lvn\"/> <path className={classes['_war']} d=\"M 1180 860 C 1162 885 1123 876 1100 892 C 1073 911 1079 940 1096 963 C 1098 966 1107 976 1109 978 C 1113 981 1125 983 1130 983 C 1138 983 1146 978 1152 973 C 1155 970 1157 966 1160 965 C 1167 962 1176 971 1186 973 C 1200 977 1205 969 1213 967 C 1218 967 1222 970 1226 972 C 1230 962 1231 958 1232 947 C 1232 942 1228 923 1226 918 C 1226 918 1221 908 1221 908 C 1219 901 1219 894 1214 888 C 1209 881 1201 878 1194 873 C 1189 869 1186 863 1180 860 z\" id=\"_war\"/> <path className={classes['_pru']} d=\"M 1146 788 C 1147 796 1148 812 1141 817 C 1137 821 1131 817 1127 821 C 1125 824 1125 827 1123 830 C 1122 833 1119 836 1116 838 C 1109 843 1100 847 1093 840 C 1090 837 1090 835 1090 831 C 1087 831 1083 830 1080 830 C 1069 831 1058 838 1048 842 C 1031 848 1028 850 1010 853 C 1010 853 1014 883 1014 883 C 1016 891 1018 893 1019 898 C 1021 904 1019 909 1022 912 C 1025 915 1030 916 1033 916 C 1033 916 1061 918 1061 918 C 1064 918 1072 919 1074 917 C 1074 917 1081 904 1081 904 C 1085 896 1092 890 1099 885 C 1111 878 1130 875 1144 872 C 1154 870 1164 868 1172 861 C 1176 857 1179 851 1181 846 C 1182 841 1183 839 1183 834 C 1183 834 1183 830 1183 830 C 1183 824 1182 818 1177 815 C 1172 812 1168 814 1161 808 C 1151 799 1155 792 1146 788 z\" id=\"_pru\"/> <path className={classes['_sil']} d=\"M 960 935 C 960 935 970 964 970 964 C 970 964 997 957 997 957 C 1004 956 1012 954 1019 956 C 1029 960 1036 969 1044 975 C 1053 982 1055 981 1065 984 C 1080 989 1090 995 1104 983 C 1104 983 1088 962 1088 962 C 1079 949 1075 937 1075 921 C 1075 921 1039 921 1039 921 C 1039 921 1027 919 1027 919 C 1027 919 1019 916 1019 916 C 1019 916 1012 921 1012 921 C 1012 921 1002 926 1002 926 C 1002 926 960 935 960 935 z\" id=\"_sil\"/> <path className={classes['_ber']} d=\"M 939 938 C 939 938 969 929 969 929 C 969 929 1001 923 1001 923 C 1001 923 1017 913 1017 913 C 1017 913 1016 899 1016 899 C 1016 899 1010 884 1010 884 C 1008 875 1007 862 1007 853 C 1001 852 995 851 990 847 C 988 846 985 843 986 840 C 987 838 988 837 989 836 C 988 835 987 834 985 833 C 980 832 966 839 959 841 C 955 842 949 842 947 845 C 947 845 943 868 943 868 C 941 880 936 900 936 912 C 936 920 936 931 939 938 z\" id=\"_ber\"/> <path className={classes['_kie']} d=\"M 823 916 C 842 925 854 923 872 938 C 878 944 883 947 888 954 C 890 956 892 960 895 960 C 899 961 903 956 906 954 C 913 949 918 950 927 945 C 929 943 933 941 933 939 C 935 937 934 934 933 932 C 933 932 932 918 932 918 C 932 913 932 912 933 908 C 933 908 936 886 936 886 C 938 874 942 860 942 848 C 942 848 926 848 926 848 C 928 845 933 839 933 836 C 932 832 926 829 923 825 C 918 818 915 812 915 803 C 915 803 900 803 900 803 C 898 803 894 803 893 804 C 889 807 893 819 893 823 C 893 826 891 839 890 842 C 889 844 888 846 886 848 C 876 857 871 837 859 845 C 855 848 856 853 856 858 C 856 869 852 871 849 880 C 848 884 848 889 845 893 C 838 904 826 902 823 916 z\" id=\"_kie\"/> <path className={classes['_ruh']} d=\"M 822 920 C 820 928 819 933 815 940 C 813 943 810 948 810 951 C 809 957 817 969 815 978 C 813 984 810 984 808 988 C 805 998 813 1013 817 1015 C 821 1017 831 1013 834 1010 C 838 1007 841 1000 844 996 C 849 989 856 980 864 976 C 873 971 877 974 884 971 C 886 970 890 968 891 966 C 892 962 882 952 879 949 C 863 933 857 932 837 925 C 837 925 822 920 822 920 z\" id=\"_ruh\"/> <path className={classes['_mun']} d=\"M 820 1020 C 820 1020 824 1031 824 1031 C 824 1031 821 1045 821 1045 C 821 1045 819 1058 819 1058 C 829 1058 833 1058 843 1057 C 847 1056 855 1054 859 1054 C 865 1055 868 1059 872 1060 C 875 1062 879 1060 883 1062 C 887 1064 889 1067 894 1068 C 894 1068 919 1066 919 1066 C 932 1066 937 1066 950 1069 C 950 1065 948 1059 950 1055 C 952 1049 956 1049 960 1047 C 967 1043 966 1040 975 1039 C 974 1033 971 1029 967 1024 C 967 1024 948 1001 948 1001 C 942 993 938 985 947 976 C 949 975 952 973 954 971 C 958 969 962 968 966 966 C 966 966 957 936 957 936 C 953 937 939 942 935 944 C 935 944 924 950 924 950 C 919 953 913 953 908 957 C 900 962 895 969 887 973 C 876 979 871 974 859 984 C 848 992 845 1004 837 1012 C 832 1017 826 1017 820 1020 z\" id=\"_mun\"/> <path className={classes['_rum']} d=\"M 1277 1053 C 1276 1059 1276 1068 1272 1073 C 1268 1079 1259 1080 1258 1086 C 1257 1092 1263 1097 1266 1101 C 1276 1111 1287 1119 1280 1134 C 1275 1143 1265 1147 1256 1150 C 1256 1150 1203 1163 1203 1163 C 1193 1167 1180 1178 1187 1190 C 1189 1192 1192 1193 1194 1195 C 1198 1197 1198 1200 1201 1201 C 1205 1203 1226 1205 1231 1205 C 1242 1205 1255 1206 1266 1204 C 1266 1204 1287 1197 1287 1197 C 1303 1194 1323 1194 1339 1199 C 1339 1193 1341 1177 1343 1172 C 1346 1167 1352 1163 1355 1158 C 1357 1154 1357 1150 1357 1145 C 1349 1146 1336 1151 1329 1148 C 1321 1143 1317 1130 1317 1122 C 1317 1122 1318 1110 1318 1110 C 1318 1096 1314 1093 1307 1082 C 1299 1069 1293 1057 1277 1053 z\" id=\"_rum\"/> <path className={classes['_bul']} d=\"M 1188 1199 C 1187 1205 1185 1210 1187 1216 C 1189 1223 1196 1231 1196 1237 C 1197 1245 1189 1244 1190 1255 C 1193 1268 1204 1282 1189 1291 C 1195 1299 1199 1297 1208 1294 C 1208 1294 1224 1288 1224 1288 C 1236 1284 1244 1282 1249 1297 C 1250 1301 1250 1303 1250 1307 C 1250 1307 1250 1311 1250 1311 C 1250 1311 1269 1311 1269 1311 C 1272 1311 1276 1313 1279 1311 C 1281 1310 1282 1308 1283 1306 C 1292 1293 1281 1282 1293 1270 C 1306 1258 1316 1264 1328 1262 C 1328 1262 1320 1248 1320 1248 C 1319 1245 1321 1241 1322 1238 C 1325 1229 1323 1223 1326 1218 C 1331 1210 1335 1216 1338 1206 C 1324 1199 1299 1201 1284 1204 C 1276 1206 1273 1209 1263 1211 C 1263 1211 1242 1212 1242 1212 C 1242 1212 1229 1211 1229 1211 C 1222 1211 1207 1210 1201 1208 C 1193 1206 1195 1202 1188 1199 z\" id=\"_bul\"/> <path className={classes['_gre']} d=\"M 1155 1385 C 1155 1385 1155 1387 1155 1387 C 1153 1388 1149 1389 1148 1391 C 1146 1395 1152 1403 1155 1404 C 1162 1406 1184 1400 1188 1400 C 1191 1401 1193 1402 1196 1403 C 1200 1405 1207 1407 1206 1413 C 1205 1416 1203 1418 1200 1418 C 1200 1418 1191 1413 1191 1413 C 1186 1411 1178 1409 1173 1411 C 1173 1411 1166 1413 1166 1413 C 1162 1414 1160 1414 1158 1416 C 1155 1418 1156 1422 1158 1425 C 1161 1430 1165 1433 1167 1439 C 1167 1439 1172 1459 1172 1459 C 1173 1458 1175 1455 1176 1454 C 1185 1448 1189 1467 1191 1471 C 1193 1468 1195 1461 1199 1461 C 1202 1461 1203 1464 1209 1465 C 1208 1457 1204 1448 1201 1441 C 1199 1438 1197 1435 1201 1432 C 1206 1428 1214 1437 1217 1432 C 1220 1429 1212 1426 1211 1422 C 1210 1418 1213 1415 1217 1415 C 1223 1415 1227 1419 1232 1421 C 1232 1421 1231 1414 1231 1414 C 1230 1409 1232 1407 1228 1403 C 1223 1398 1203 1395 1199 1388 C 1196 1384 1199 1382 1199 1379 C 1200 1376 1198 1374 1198 1372 C 1199 1365 1208 1368 1212 1369 C 1208 1358 1195 1350 1192 1338 C 1190 1329 1198 1325 1201 1326 C 1204 1328 1202 1331 1205 1335 C 1207 1339 1212 1341 1216 1343 C 1216 1343 1214 1336 1214 1336 C 1214 1336 1230 1344 1230 1344 C 1230 1344 1222 1331 1222 1331 C 1222 1331 1233 1332 1233 1332 C 1231 1330 1226 1324 1226 1322 C 1225 1319 1229 1318 1231 1317 C 1237 1315 1235 1313 1243 1313 C 1243 1307 1245 1296 1238 1292 C 1234 1291 1222 1296 1218 1297 C 1218 1297 1187 1308 1187 1308 C 1187 1308 1166 1313 1166 1313 C 1164 1314 1159 1315 1158 1316 C 1155 1318 1156 1323 1156 1326 C 1156 1331 1154 1335 1151 1339 C 1146 1344 1141 1345 1138 1349 C 1136 1351 1135 1353 1134 1355 C 1132 1358 1130 1360 1129 1363 C 1127 1371 1134 1379 1140 1382 C 1145 1385 1145 1381 1155 1385 z M 1208 1382 C 1211 1386 1222 1396 1226 1399 C 1229 1400 1232 1401 1235 1401 C 1235 1390 1229 1393 1222 1389 C 1216 1385 1216 1382 1208 1382 z\" id=\"_gre\"/> <path className={classes['_smy']} d=\"M 1636 1288 C 1625 1299 1615 1296 1600 1296 C 1584 1296 1573 1300 1561 1311 C 1546 1324 1537 1340 1516 1344 C 1513 1344 1510 1345 1507 1345 C 1498 1344 1483 1338 1475 1340 C 1470 1341 1465 1346 1461 1348 C 1451 1355 1437 1365 1425 1367 C 1418 1369 1409 1364 1401 1365 C 1395 1365 1391 1368 1386 1368 C 1379 1368 1376 1365 1371 1365 C 1366 1364 1362 1367 1358 1368 C 1358 1368 1349 1368 1349 1368 C 1342 1369 1337 1368 1331 1364 C 1328 1362 1323 1358 1319 1358 C 1316 1359 1311 1365 1311 1368 C 1311 1371 1313 1373 1313 1376 C 1314 1379 1312 1381 1311 1384 C 1311 1388 1312 1390 1311 1393 C 1311 1396 1307 1399 1305 1401 C 1312 1403 1321 1406 1322 1414 C 1322 1419 1320 1417 1323 1428 C 1323 1428 1331 1427 1331 1427 C 1333 1434 1333 1433 1330 1440 C 1330 1440 1349 1436 1349 1436 C 1351 1436 1354 1437 1355 1439 C 1355 1442 1350 1448 1349 1451 C 1355 1449 1355 1447 1359 1446 C 1363 1445 1366 1447 1370 1447 C 1372 1448 1375 1447 1377 1448 C 1381 1450 1383 1454 1385 1457 C 1389 1460 1395 1462 1400 1462 C 1404 1462 1416 1458 1418 1455 C 1421 1450 1418 1435 1432 1432 C 1443 1431 1460 1441 1469 1446 C 1474 1449 1478 1452 1484 1452 C 1493 1452 1512 1447 1518 1441 C 1524 1435 1528 1424 1535 1420 C 1544 1415 1552 1425 1558 1422 C 1565 1418 1564 1405 1575 1408 C 1579 1402 1583 1394 1586 1388 C 1590 1375 1588 1369 1603 1358 C 1611 1353 1614 1353 1622 1350 C 1622 1350 1640 1342 1640 1342 C 1644 1340 1652 1339 1654 1335 C 1657 1322 1641 1315 1637 1308 C 1634 1303 1637 1293 1636 1288 z\" id=\"_smy\"/> <path className={classes['_alb']} d=\"M 1149 1316 C 1136 1313 1137 1308 1136 1297 C 1134 1284 1137 1271 1125 1262 C 1123 1261 1120 1259 1118 1258 C 1112 1257 1101 1264 1101 1273 C 1100 1280 1110 1281 1112 1290 C 1113 1298 1107 1314 1107 1326 C 1107 1329 1107 1334 1108 1337 C 1109 1341 1121 1352 1125 1353 C 1130 1354 1128 1349 1133 1344 C 1137 1340 1142 1339 1145 1336 C 1151 1331 1150 1323 1149 1316 z\" id=\"_alb\"/> <path className={classes['_ser']} d=\"M 1189 1301 C 1187 1298 1181 1293 1183 1288 C 1185 1285 1189 1285 1190 1280 C 1191 1274 1184 1263 1184 1254 C 1184 1251 1184 1248 1185 1245 C 1187 1242 1190 1240 1190 1236 C 1189 1231 1184 1226 1181 1218 C 1178 1209 1181 1208 1181 1200 C 1181 1196 1181 1185 1177 1183 C 1176 1182 1173 1182 1171 1182 C 1171 1182 1144 1180 1144 1180 C 1137 1179 1135 1175 1131 1176 C 1128 1176 1125 1179 1121 1181 C 1115 1183 1111 1176 1107 1181 C 1106 1181 1104 1184 1104 1185 C 1100 1194 1107 1196 1107 1204 C 1106 1208 1104 1212 1103 1216 C 1101 1222 1101 1232 1104 1238 C 1110 1249 1126 1253 1134 1262 C 1140 1269 1140 1274 1141 1283 C 1141 1283 1142 1292 1142 1292 C 1142 1296 1141 1303 1144 1307 C 1146 1309 1151 1309 1154 1309 C 1165 1309 1174 1302 1189 1301 z\" id=\"_ser\"/> <path className={classes['_bud']} d=\"M 1121 1029 C 1121 1031 1121 1033 1120 1035 C 1118 1041 1113 1038 1109 1039 C 1106 1040 1104 1041 1102 1043 C 1092 1052 1092 1061 1085 1069 C 1079 1075 1074 1076 1069 1080 C 1065 1083 1060 1089 1056 1093 C 1052 1097 1047 1100 1047 1106 C 1047 1106 1048 1113 1048 1113 C 1050 1124 1054 1132 1063 1139 C 1069 1143 1075 1144 1079 1148 C 1088 1155 1088 1174 1103 1173 C 1103 1173 1111 1171 1111 1171 C 1113 1172 1115 1174 1117 1174 C 1123 1176 1125 1169 1132 1169 C 1136 1170 1139 1173 1144 1174 C 1151 1175 1155 1175 1162 1175 C 1162 1175 1169 1176 1169 1176 C 1181 1177 1183 1170 1191 1163 C 1196 1160 1200 1157 1206 1156 C 1206 1156 1258 1143 1258 1143 C 1268 1139 1276 1135 1275 1123 C 1274 1113 1259 1104 1253 1095 C 1253 1095 1249 1087 1249 1087 C 1249 1087 1234 1065 1234 1065 C 1230 1061 1227 1062 1221 1056 C 1213 1047 1208 1039 1197 1033 C 1187 1028 1182 1031 1173 1028 C 1166 1026 1162 1021 1154 1021 C 1144 1021 1131 1027 1121 1029 z\" id=\"_bud\"/> <path className={classes['_gal']} d=\"M 1083 997 C 1083 997 1085 1015 1085 1015 C 1094 1015 1098 1015 1106 1018 C 1112 1021 1115 1025 1120 1025 C 1123 1025 1128 1023 1131 1022 C 1139 1020 1146 1018 1155 1018 C 1164 1018 1166 1023 1174 1025 C 1182 1027 1189 1024 1201 1031 C 1212 1038 1216 1046 1224 1054 C 1229 1059 1232 1058 1238 1065 C 1243 1071 1246 1078 1252 1083 C 1258 1073 1266 1074 1269 1066 C 1270 1062 1269 1047 1269 1042 C 1269 1030 1262 1010 1254 1001 C 1249 996 1240 993 1234 988 C 1229 985 1220 975 1216 974 C 1209 973 1205 980 1193 981 C 1186 981 1180 978 1174 975 C 1172 974 1166 971 1163 971 C 1160 971 1157 976 1155 978 C 1151 982 1145 985 1140 988 C 1134 990 1130 990 1124 989 C 1121 989 1113 987 1111 987 C 1108 988 1105 991 1100 994 C 1096 996 1088 997 1083 997 z\" id=\"_gal\"/> <path className={classes['_vie']} d=\"M 1117 1036 C 1117 1034 1118 1031 1117 1029 C 1116 1028 1113 1026 1111 1025 C 1104 1021 1099 1019 1091 1019 C 1091 1019 1074 1020 1074 1020 C 1067 1019 1069 1016 1057 1016 C 1057 1016 1045 1018 1045 1018 C 1040 1018 1033 1013 1025 1019 C 1020 1024 1016 1031 1012 1037 C 1010 1042 1005 1049 1003 1054 C 1001 1061 1002 1078 1005 1085 C 1006 1088 1007 1090 1009 1092 C 1012 1097 1017 1107 1023 1108 C 1027 1108 1031 1104 1035 1102 C 1035 1102 1044 1100 1044 1100 C 1052 1096 1059 1084 1065 1078 C 1072 1072 1078 1073 1084 1064 C 1087 1060 1088 1057 1090 1053 C 1093 1048 1101 1037 1107 1036 C 1110 1035 1114 1036 1117 1036 z\" id=\"_vie\"/> <path className={classes['_boh']} d=\"M 1081 1016 C 1081 1016 1079 997 1079 997 C 1079 997 1083 997 1083 997 C 1083 997 1075 995 1075 995 C 1075 995 1063 990 1063 990 C 1056 988 1053 988 1046 984 C 1034 977 1023 959 1008 961 C 999 963 971 970 963 974 C 959 976 952 979 950 983 C 947 988 950 993 953 997 C 953 997 977 1027 977 1027 C 979 1031 981 1039 986 1040 C 990 1041 995 1041 999 1041 C 1001 1041 1004 1042 1005 1041 C 1008 1040 1011 1033 1012 1031 C 1017 1023 1025 1011 1036 1012 C 1040 1013 1042 1014 1046 1014 C 1050 1014 1053 1012 1060 1012 C 1067 1012 1069 1015 1073 1016 C 1075 1017 1079 1016 1081 1016 z\" id=\"_boh\"/> <path className={classes['_tyr']} d=\"M 875 1067 C 878 1085 889 1086 894 1098 C 898 1108 892 1109 892 1122 C 892 1129 895 1137 903 1135 C 908 1135 915 1130 917 1125 C 918 1122 917 1119 920 1115 C 926 1109 936 1108 944 1108 C 947 1108 957 1108 959 1107 C 961 1106 962 1104 964 1102 C 967 1100 970 1099 973 1099 C 977 1098 981 1098 985 1099 C 988 1099 991 1100 994 1099 C 998 1097 1001 1088 1000 1084 C 999 1065 995 1064 1003 1045 C 994 1045 981 1042 973 1046 C 970 1047 967 1050 964 1052 C 962 1053 958 1054 957 1056 C 952 1060 962 1072 952 1075 C 950 1076 946 1075 944 1074 C 939 1073 936 1073 931 1073 C 931 1073 910 1073 910 1073 C 904 1073 897 1075 891 1074 C 884 1073 885 1068 875 1067 z\" id=\"_tyr\"/> <path className={classes['_tri']} d=\"M 1003 1091 C 1001 1096 998 1102 993 1103 C 987 1104 968 1097 964 1109 C 966 1110 968 1112 970 1114 C 973 1120 969 1134 967 1140 C 966 1145 968 1144 965 1152 C 964 1157 962 1168 969 1169 C 972 1170 975 1165 976 1163 C 980 1156 980 1153 989 1154 C 989 1157 989 1159 988 1162 C 986 1168 982 1170 986 1181 C 990 1193 1002 1199 1011 1207 C 1016 1212 1018 1214 1024 1219 C 1024 1219 1047 1234 1047 1234 C 1047 1234 1064 1248 1064 1248 C 1064 1248 1081 1260 1081 1260 C 1086 1263 1090 1268 1095 1270 C 1097 1260 1102 1257 1110 1253 C 1101 1243 1094 1239 1095 1224 C 1095 1214 1099 1210 1100 1205 C 1100 1200 1097 1197 1096 1192 C 1096 1187 1099 1182 1100 1177 C 1095 1175 1091 1174 1088 1169 C 1084 1164 1083 1156 1078 1151 C 1073 1147 1068 1148 1059 1140 C 1047 1131 1046 1119 1043 1105 C 1039 1105 1037 1105 1034 1107 C 1031 1108 1027 1112 1023 1112 C 1014 1111 1010 1098 1003 1091 z\" id=\"_tri\"/> <path className={classes['_fin']} d=\"M 1181 440 C 1190 443 1204 455 1199 465 C 1199 465 1189 478 1189 478 C 1189 478 1175 500 1175 500 C 1175 500 1153 527 1153 527 C 1148 534 1139 544 1140 553 C 1140 553 1142 562 1142 562 C 1142 562 1143 572 1143 572 C 1143 572 1147 586 1147 586 C 1147 593 1142 600 1142 608 C 1142 612 1142 618 1146 622 C 1148 624 1151 624 1154 626 C 1154 626 1163 631 1163 631 C 1163 631 1170 633 1170 633 C 1175 635 1176 639 1181 640 C 1186 640 1200 636 1205 635 C 1205 635 1238 622 1238 622 C 1244 620 1258 617 1262 614 C 1268 611 1271 605 1275 599 C 1282 588 1290 572 1289 559 C 1289 555 1288 553 1288 549 C 1289 539 1294 537 1294 528 C 1292 512 1283 498 1276 483 C 1269 468 1260 443 1255 427 C 1252 417 1250 405 1249 394 C 1249 389 1248 376 1247 372 C 1246 367 1241 364 1237 357 C 1234 350 1232 341 1232 333 C 1228 336 1224 334 1224 329 C 1223 325 1227 318 1227 312 C 1226 301 1208 291 1199 299 C 1196 302 1196 308 1195 312 C 1193 323 1191 330 1179 332 C 1171 334 1157 331 1149 328 C 1149 328 1139 323 1139 323 C 1135 322 1132 323 1131 327 C 1130 332 1134 334 1137 337 C 1145 343 1153 350 1159 358 C 1171 374 1173 391 1177 410 C 1177 410 1181 440 1181 440 z\" id=\"_fin\"/> <path className={classes['_swe']} d=\"M 1128 338 C 1128 338 1126 348 1126 348 C 1120 349 1118 350 1112 351 C 1109 351 1104 351 1101 352 C 1098 355 1101 358 1098 362 C 1095 366 1091 362 1087 367 C 1082 373 1075 395 1071 403 C 1068 409 1064 416 1059 422 C 1055 428 1052 430 1048 437 C 1048 437 1043 456 1043 456 C 1043 456 1032 478 1032 478 C 1032 478 1028 494 1028 494 C 1023 504 1015 499 1008 505 C 1006 508 1004 513 1003 517 C 999 529 999 540 999 552 C 999 552 1000 567 1000 567 C 1000 567 1000 581 1000 581 C 1000 586 1000 589 998 593 C 994 601 991 599 991 610 C 991 623 987 636 984 649 C 981 657 978 676 970 679 C 967 680 964 679 961 679 C 961 689 964 693 966 703 C 966 703 973 731 973 731 C 975 736 981 751 982 755 C 982 760 978 769 979 774 C 979 774 982 786 982 786 C 984 794 980 803 993 801 C 1005 800 1003 794 1009 786 C 1014 780 1019 778 1026 778 C 1030 778 1037 779 1041 777 C 1045 774 1048 768 1049 764 C 1055 750 1054 741 1055 727 C 1055 727 1060 704 1060 704 C 1060 702 1060 699 1059 697 C 1058 696 1056 694 1057 692 C 1057 690 1060 689 1062 689 C 1067 688 1072 687 1077 684 C 1086 680 1090 674 1094 665 C 1097 659 1099 657 1099 650 C 1098 635 1083 627 1078 620 C 1075 616 1074 610 1074 605 C 1074 592 1078 571 1083 559 C 1086 553 1095 542 1099 537 C 1112 523 1128 517 1139 498 C 1144 489 1138 486 1139 477 C 1140 464 1149 444 1162 439 C 1166 438 1170 438 1174 438 C 1174 438 1171 417 1171 417 C 1169 402 1165 380 1158 367 C 1151 355 1139 345 1128 338 z\" id=\"_swe\"/> <path className={classes['_nwy']} d=\"M 1198 263 C 1194 266 1193 270 1192 274 C 1189 282 1188 287 1182 292 C 1180 283 1183 280 1183 272 C 1183 270 1183 267 1181 266 C 1178 265 1175 267 1173 268 C 1166 275 1167 275 1158 280 C 1158 280 1133 298 1133 298 C 1128 300 1123 302 1118 303 C 1115 304 1111 304 1108 305 C 1104 307 1104 312 1100 315 C 1097 317 1095 316 1093 317 C 1089 319 1087 324 1086 328 C 1088 330 1090 332 1089 335 C 1088 337 1083 342 1081 344 C 1081 344 1063 367 1063 367 C 1063 367 1045 394 1045 394 C 1045 394 1024 415 1024 415 C 1019 422 1015 431 1010 439 C 1005 447 995 464 992 472 C 992 472 991 483 991 483 C 983 480 980 483 974 488 C 971 491 967 496 965 499 C 964 502 964 506 961 508 C 958 510 952 509 947 512 C 941 515 937 521 933 522 C 929 523 928 521 925 521 C 921 520 918 522 916 526 C 916 526 920 528 920 528 C 915 534 912 532 905 535 C 906 537 908 541 907 542 C 905 545 900 541 894 542 C 888 544 882 551 879 556 C 871 567 869 577 867 590 C 866 593 865 601 865 604 C 867 609 872 610 874 614 C 876 619 871 620 867 621 C 867 621 871 624 871 624 C 879 633 863 634 861 637 C 860 638 860 642 860 644 C 864 643 878 639 879 646 C 879 650 874 653 872 655 C 865 660 859 665 864 674 C 866 677 869 681 872 683 C 874 685 877 686 880 688 C 899 697 913 679 929 672 C 934 669 939 668 944 664 C 946 663 950 658 953 658 C 957 658 960 668 961 672 C 964 672 968 674 970 671 C 972 668 974 659 975 656 C 978 646 984 626 984 616 C 984 612 984 606 985 602 C 987 597 991 595 993 589 C 994 584 994 578 994 573 C 994 573 992 546 992 546 C 992 536 995 516 1000 507 C 1002 502 1006 498 1011 496 C 1016 494 1020 495 1022 491 C 1022 491 1026 476 1026 476 C 1026 476 1037 453 1037 453 C 1037 453 1043 434 1043 434 C 1046 427 1053 421 1058 414 C 1067 400 1070 386 1077 372 C 1081 364 1084 358 1093 357 C 1092 343 1110 344 1120 344 C 1121 340 1122 336 1123 332 C 1124 326 1127 318 1134 316 C 1139 315 1144 319 1149 321 C 1156 324 1165 326 1172 326 C 1176 326 1181 326 1184 323 C 1191 317 1185 298 1199 291 C 1201 290 1203 290 1205 290 C 1217 289 1232 299 1234 312 C 1234 317 1231 324 1230 330 C 1241 325 1247 308 1251 297 C 1249 298 1243 300 1241 299 C 1237 299 1229 292 1227 288 C 1232 287 1244 285 1246 281 C 1251 273 1234 268 1229 268 C 1222 269 1223 277 1219 279 C 1216 280 1215 277 1214 275 C 1214 271 1218 257 1210 259 C 1203 260 1207 278 1201 280 C 1197 281 1197 275 1197 273 C 1197 273 1198 263 1198 263 z\" id=\"_nwy\"/> <path className={classes['_den']} d=\"M 939 716 C 933 720 923 725 917 728 C 912 729 904 731 900 734 C 896 737 895 742 894 746 C 892 754 888 769 889 777 C 891 785 894 784 894 796 C 899 796 912 796 916 798 C 919 794 919 789 920 784 C 922 779 927 774 930 770 C 932 768 934 767 936 766 C 938 766 942 768 943 763 C 943 757 933 755 934 747 C 934 743 938 738 940 734 C 943 728 943 721 939 716 z M 946 786 C 951 798 951 796 959 805 C 962 809 962 810 967 813 C 967 813 969 804 969 804 C 971 802 974 800 974 797 C 975 795 973 791 972 788 C 970 782 972 777 964 775 C 963 775 959 775 958 775 C 954 776 955 780 946 786 z M 944 812 C 943 813 943 815 943 816 C 942 826 959 823 952 815 C 951 815 950 814 949 814 C 947 813 946 812 944 812 z\" id=\"_den\"/> <path className={classes['_hol']} d=\"M 768 906 C 778 917 791 914 799 922 C 804 928 800 932 804 943 C 804 943 806 943 806 943 C 809 937 813 931 815 924 C 816 918 817 911 820 906 C 824 900 834 897 839 892 C 841 889 841 883 843 879 C 847 866 850 867 850 850 C 850 850 823 849 823 849 C 815 850 801 861 796 866 C 786 876 790 890 780 900 C 776 903 772 904 768 906 z\" id=\"_hol\"/> <path className={classes['_bel']} d=\"M 715 931 C 715 931 747 950 747 950 C 760 958 761 961 777 969 C 782 972 798 980 804 980 C 809 979 808 972 807 968 C 805 954 798 945 796 940 C 794 934 796 929 793 926 C 791 923 785 922 782 921 C 782 921 775 918 775 918 C 769 915 766 914 761 908 C 754 910 745 912 738 913 C 733 914 726 914 722 917 C 718 921 717 926 715 931 z\" id=\"_bel\"/> <path className={classes['_swi']} d=\"M 778 1102 C 786 1104 791 1096 798 1099 C 809 1103 801 1114 814 1113 C 822 1111 825 1108 834 1112 C 842 1114 846 1121 851 1120 C 856 1120 857 1113 865 1112 C 870 1111 883 1114 886 1111 C 890 1109 890 1101 888 1098 C 887 1097 885 1094 884 1093 C 880 1089 877 1086 874 1081 C 868 1070 869 1061 853 1061 C 853 1061 827 1063 827 1063 C 823 1063 818 1063 814 1065 C 811 1066 797 1081 793 1085 C 793 1085 786 1092 786 1092 C 782 1096 780 1095 778 1102 z\" id=\"_swi\"/> <path className={classes['_ven']} d=\"M 957 1271 C 959 1266 960 1265 964 1260 C 966 1258 969 1255 969 1252 C 969 1250 965 1243 964 1240 C 959 1228 962 1222 951 1210 C 941 1199 927 1193 928 1176 C 928 1168 932 1168 933 1164 C 934 1160 928 1155 935 1150 C 938 1148 949 1143 952 1142 C 955 1141 959 1141 961 1139 C 962 1137 964 1125 965 1122 C 965 1120 965 1118 963 1117 C 961 1115 950 1114 947 1114 C 942 1114 929 1115 926 1119 C 924 1121 924 1123 923 1126 C 918 1134 910 1143 900 1142 C 894 1141 892 1136 888 1136 C 886 1136 883 1139 881 1141 C 877 1146 873 1153 872 1160 C 872 1167 879 1174 884 1178 C 891 1184 897 1186 903 1190 C 912 1196 920 1205 926 1213 C 934 1224 937 1231 942 1244 C 942 1244 945 1260 945 1260 C 946 1264 953 1269 957 1271 z\" id=\"_ven\"/> <path className={classes['_pie']} d=\"M 804 1114 C 803 1117 801 1120 802 1124 C 803 1128 807 1130 806 1135 C 805 1138 801 1142 801 1146 C 800 1151 804 1156 805 1161 C 806 1168 800 1176 806 1184 C 807 1186 809 1188 811 1189 C 815 1191 823 1187 826 1184 C 832 1179 839 1173 848 1174 C 856 1175 860 1182 869 1186 C 871 1183 875 1178 874 1175 C 874 1171 869 1169 869 1161 C 869 1149 878 1138 887 1131 C 887 1131 886 1119 886 1119 C 886 1119 866 1116 866 1116 C 859 1117 860 1129 851 1127 C 844 1126 838 1116 830 1115 C 821 1114 814 1125 804 1114 z\" id=\"_pie\"/> <path className={classes['_tus']} d=\"M 878 1178 C 877 1180 873 1185 873 1188 C 873 1191 875 1194 876 1201 C 877 1208 877 1215 878 1221 C 882 1232 891 1245 899 1253 C 899 1253 914 1239 914 1239 C 914 1239 932 1229 932 1229 C 927 1220 918 1207 911 1200 C 901 1191 899 1192 889 1186 C 889 1186 878 1178 878 1178 z\" id=\"_tus\"/> <path className={classes['_rom']} d=\"M 973 1291 C 973 1291 951 1271 951 1271 C 951 1271 942 1262 942 1262 C 942 1262 939 1249 939 1249 C 939 1249 934 1233 934 1233 C 925 1235 916 1241 909 1246 C 907 1249 903 1252 903 1256 C 903 1261 911 1268 914 1272 C 921 1280 926 1290 936 1295 C 941 1297 945 1296 950 1297 C 956 1298 958 1301 961 1300 C 961 1300 973 1291 973 1291 z\" id=\"_rom\"/> <path className={classes['_apu']} d=\"M 972 1256 C 968 1260 960 1267 960 1272 C 960 1277 967 1281 969 1283 C 969 1283 991 1300 991 1300 C 996 1304 1005 1314 1008 1320 C 1011 1326 1010 1330 1013 1334 C 1015 1337 1028 1344 1032 1345 C 1034 1342 1038 1334 1041 1332 C 1042 1330 1043 1329 1046 1330 C 1046 1330 1052 1335 1052 1335 C 1057 1339 1063 1343 1069 1346 C 1072 1347 1077 1351 1079 1348 C 1081 1345 1079 1339 1077 1336 C 1074 1331 1061 1323 1055 1319 C 1044 1312 1029 1303 1021 1294 C 1019 1292 1018 1290 1017 1287 C 1017 1285 1018 1282 1016 1280 C 1015 1279 1010 1279 1008 1279 C 1003 1278 999 1277 995 1275 C 984 1270 980 1262 972 1256 z\" id=\"_apu\"/> <path className={classes['_nap']} d=\"M 1029 1348 C 1024 1345 1013 1339 1009 1335 C 1006 1331 1007 1326 1005 1321 C 1002 1314 992 1305 986 1300 C 982 1297 978 1294 973 1296 C 969 1297 962 1303 962 1307 C 962 1310 964 1314 966 1316 C 966 1318 968 1321 969 1322 C 972 1326 979 1322 984 1326 C 988 1329 986 1333 991 1340 C 996 1346 1004 1350 1008 1357 C 1010 1360 1017 1377 1017 1381 C 1018 1383 1018 1385 1017 1387 C 1017 1389 1009 1402 1008 1404 C 1005 1407 1001 1412 1004 1417 C 1007 1421 1012 1419 1016 1416 C 1019 1413 1024 1405 1025 1400 C 1026 1397 1027 1392 1029 1389 C 1032 1385 1037 1387 1039 1385 C 1042 1383 1042 1378 1042 1375 C 1041 1362 1030 1364 1028 1356 C 1027 1354 1028 1350 1029 1348 z\" id=\"_nap\"/> <path className={classes['_bur']} d=\"M 773 975 C 769 985 759 1008 751 1015 C 747 1018 745 1018 742 1021 C 742 1021 733 1028 733 1028 C 733 1028 725 1033 725 1033 C 721 1036 720 1039 717 1041 C 713 1044 710 1043 707 1046 C 702 1052 703 1058 701 1064 C 699 1073 692 1083 683 1086 C 683 1090 684 1093 688 1096 C 692 1099 699 1098 702 1103 C 704 1107 701 1113 700 1118 C 700 1128 713 1145 724 1138 C 731 1134 735 1120 737 1112 C 737 1108 736 1100 740 1098 C 743 1096 746 1097 749 1098 C 754 1100 759 1101 764 1101 C 766 1101 770 1101 772 1100 C 772 1100 785 1086 785 1086 C 791 1080 807 1065 811 1058 C 813 1054 813 1049 815 1044 C 815 1044 818 1034 818 1034 C 818 1028 812 1019 808 1014 C 802 1003 800 998 802 986 C 802 986 773 975 773 975 z\" id=\"_bur\"/> <path className={classes['_mar']} d=\"M 741 1100 C 741 1112 739 1122 733 1133 C 730 1138 727 1142 721 1143 C 715 1144 712 1141 707 1139 C 704 1143 700 1147 695 1148 C 691 1150 682 1148 677 1153 C 674 1155 670 1164 667 1168 C 667 1168 650 1192 650 1192 C 654 1197 668 1205 674 1208 C 677 1209 682 1211 685 1211 C 690 1210 686 1204 690 1196 C 693 1189 703 1182 711 1181 C 721 1180 725 1187 733 1189 C 738 1190 743 1188 748 1191 C 754 1196 756 1207 768 1208 C 781 1210 791 1196 803 1193 C 801 1186 797 1185 797 1176 C 797 1176 798 1161 798 1161 C 797 1157 794 1153 794 1147 C 794 1140 800 1137 799 1133 C 799 1130 795 1127 794 1123 C 794 1117 800 1112 798 1108 C 797 1105 792 1106 789 1107 C 781 1109 778 1112 773 1104 C 760 1107 753 1102 741 1100 z\" id=\"_mar\"/> <path className={classes['_gas']} d=\"M 611 1058 C 611 1058 611 1079 611 1079 C 611 1079 614 1086 614 1086 C 614 1086 609 1084 609 1084 C 606 1088 601 1097 601 1102 C 600 1105 601 1107 601 1110 C 600 1113 591 1131 589 1134 C 587 1138 584 1141 580 1145 C 578 1146 576 1148 576 1151 C 577 1155 588 1165 592 1168 C 600 1173 611 1180 620 1183 C 620 1183 633 1185 633 1185 C 637 1186 643 1189 647 1191 C 647 1191 664 1167 664 1167 C 667 1162 671 1153 676 1149 C 682 1145 688 1147 695 1145 C 699 1143 702 1140 705 1137 C 702 1132 698 1128 697 1122 C 696 1116 699 1110 700 1104 C 695 1102 688 1101 684 1098 C 680 1094 681 1090 677 1087 C 675 1086 670 1085 663 1080 C 658 1076 655 1070 650 1067 C 643 1063 620 1059 611 1058 z\" id=\"_gas\"/> <path className={classes['_pic']} d=\"M 711 936 C 707 940 703 944 698 946 C 694 947 692 947 688 947 C 684 948 680 950 677 952 C 677 952 677 954 677 954 C 677 954 681 956 681 956 C 681 956 681 958 681 958 C 673 960 670 959 667 960 C 664 961 662 975 661 979 C 673 979 687 980 698 977 C 705 976 709 972 715 972 C 721 971 728 975 733 977 C 749 983 743 978 763 989 C 763 989 770 972 770 972 C 759 967 755 962 745 956 C 745 956 711 936 711 936 z\" id=\"_pic\"/> <path className={classes['_par']} d=\"M 661 980 C 657 990 660 1003 660 1014 C 660 1035 658 1046 654 1066 C 658 1069 658 1071 661 1074 C 666 1079 675 1084 682 1082 C 690 1081 695 1072 697 1065 C 699 1058 698 1052 703 1045 C 708 1039 711 1041 716 1038 C 716 1038 722 1031 722 1031 C 722 1031 732 1025 732 1025 C 732 1025 740 1018 740 1018 C 744 1015 746 1015 750 1012 C 753 1008 759 997 761 992 C 745 983 747 986 733 981 C 728 979 720 975 715 975 C 709 976 706 979 701 980 C 693 983 684 982 676 982 C 671 982 665 983 661 980 z\" id=\"_par\"/> <path className={classes['_bre']} d=\"M 631 936 C 631 936 633 952 633 952 C 633 952 631 966 631 966 C 631 966 633 976 633 976 C 626 975 627 974 621 971 C 621 971 601 963 601 963 C 597 961 595 957 592 956 C 589 955 586 956 582 956 C 576 955 564 953 559 958 C 557 959 556 962 555 965 C 553 967 550 969 550 973 C 552 980 562 979 567 982 C 573 985 586 997 591 1002 C 595 1007 593 1008 595 1011 C 596 1013 598 1015 599 1019 C 601 1024 599 1027 599 1031 C 600 1037 605 1048 610 1052 C 613 1055 619 1056 623 1056 C 623 1056 651 1063 651 1063 C 653 1053 656 1036 656 1026 C 656 1026 656 1009 656 1009 C 656 1009 655 999 655 999 C 655 982 659 974 662 958 C 656 956 651 954 647 950 C 642 945 644 941 641 939 C 640 937 634 936 631 936 z M 553 968 C 553 968 553 969 553 969 C 553 969 552 968 552 968 C 552 968 553 968 553 968 z\" id=\"_bre\"/> <path className={classes['_spa']} d=\"M 386 1138 C 391 1137 398 1136 403 1138 C 407 1141 408 1144 414 1146 C 424 1149 439 1146 447 1159 C 449 1162 450 1166 450 1169 C 448 1177 442 1174 434 1184 C 434 1184 415 1216 415 1216 C 413 1219 410 1224 407 1226 C 405 1228 401 1230 400 1232 C 399 1235 399 1243 399 1246 C 399 1257 395 1257 393 1265 C 392 1272 396 1276 391 1284 C 388 1289 383 1291 379 1295 C 375 1300 372 1308 370 1314 C 379 1319 387 1329 389 1339 C 391 1347 388 1357 397 1362 C 404 1366 407 1361 413 1359 C 418 1358 420 1361 427 1361 C 427 1361 445 1357 445 1357 C 454 1357 462 1363 470 1365 C 478 1368 478 1367 485 1367 C 491 1366 497 1370 501 1369 C 507 1368 509 1360 520 1355 C 527 1352 541 1353 545 1350 C 545 1350 565 1326 565 1326 C 569 1323 575 1322 579 1321 C 577 1315 572 1310 572 1303 C 573 1298 577 1294 580 1290 C 584 1285 588 1276 592 1271 C 592 1271 599 1266 599 1266 C 604 1260 605 1257 613 1257 C 613 1255 613 1253 615 1251 C 618 1247 631 1245 636 1245 C 650 1243 675 1237 683 1225 C 685 1222 686 1220 686 1217 C 671 1217 656 1204 643 1196 C 640 1195 635 1192 632 1191 C 628 1191 626 1192 621 1190 C 613 1188 604 1183 597 1179 C 591 1175 583 1169 578 1164 C 578 1164 567 1151 567 1151 C 567 1151 558 1148 558 1148 C 553 1145 552 1143 548 1141 C 544 1139 540 1141 533 1138 C 533 1138 522 1132 522 1132 C 516 1130 514 1131 506 1127 C 506 1127 472 1110 472 1110 C 472 1110 448 1101 448 1101 C 439 1095 439 1088 427 1089 C 417 1089 419 1094 414 1096 C 409 1098 403 1095 400 1095 C 398 1095 396 1096 394 1098 C 385 1105 390 1114 390 1123 C 390 1129 388 1133 386 1138 z\" id=\"_spa\"/> <path className={classes['_por']} d=\"M 394 1143 C 391 1144 387 1144 385 1146 C 383 1148 381 1158 380 1161 C 378 1169 372 1180 369 1187 C 365 1194 356 1210 351 1215 C 346 1220 340 1218 336 1224 C 335 1227 332 1240 332 1243 C 332 1245 332 1248 333 1249 C 335 1253 343 1251 343 1259 C 343 1264 340 1269 338 1273 C 336 1280 339 1280 334 1288 C 332 1291 326 1298 327 1302 C 327 1304 337 1309 340 1310 C 344 1312 347 1314 352 1314 C 354 1314 362 1312 363 1311 C 365 1310 369 1298 371 1295 C 379 1282 387 1287 387 1273 C 387 1269 387 1265 388 1261 C 389 1256 392 1254 393 1248 C 394 1242 391 1236 394 1230 C 397 1223 401 1226 409 1215 C 409 1215 429 1180 429 1180 C 439 1168 446 1171 442 1163 C 437 1153 421 1156 412 1152 C 404 1149 404 1143 394 1143 z\" id=\"_por\"/> <path className={classes['_naf']} d=\"M 216 1527 C 216 1527 780 1527 780 1527 C 780 1505 779 1473 783 1452 C 786 1442 790 1439 793 1431 C 784 1430 782 1426 770 1425 C 763 1424 763 1428 757 1427 C 752 1427 746 1422 739 1422 C 736 1422 721 1426 718 1427 C 715 1428 711 1430 708 1429 C 705 1429 701 1425 699 1423 C 695 1420 691 1417 686 1416 C 673 1412 646 1412 632 1412 C 632 1412 612 1410 612 1410 C 602 1410 593 1409 583 1411 C 575 1412 568 1415 561 1418 C 558 1420 552 1423 548 1423 C 544 1423 542 1420 539 1420 C 537 1419 526 1419 524 1420 C 520 1423 516 1427 510 1430 C 501 1434 486 1430 477 1427 C 474 1426 469 1424 466 1422 C 464 1419 463 1417 462 1414 C 457 1415 456 1416 451 1416 C 440 1416 423 1415 416 1406 C 411 1400 409 1391 406 1384 C 405 1381 403 1377 399 1378 C 392 1378 385 1387 381 1392 C 369 1405 360 1419 345 1428 C 332 1437 308 1433 292 1438 C 283 1441 272 1448 265 1454 C 265 1454 256 1465 256 1465 C 256 1465 242 1475 242 1475 C 232 1485 218 1513 216 1527 z\" id=\"_naf\"/> <path className={classes['_tun']} d=\"M 787 1527 C 787 1527 857 1527 857 1527 C 859 1527 863 1527 865 1526 C 867 1524 868 1521 869 1518 C 871 1510 872 1502 868 1494 C 864 1487 861 1486 856 1481 C 853 1478 852 1474 853 1470 C 854 1459 864 1455 869 1450 C 871 1448 873 1442 871 1440 C 869 1438 867 1439 865 1440 C 862 1442 855 1447 851 1446 C 846 1444 849 1438 846 1434 C 842 1429 832 1427 826 1427 C 826 1427 810 1430 810 1430 C 807 1431 804 1431 801 1433 C 795 1438 790 1451 789 1459 C 786 1477 787 1508 787 1527 z\" id=\"_tun\"/> <path className={classes['_lon']} d=\"M 716 901 C 713 899 704 896 702 893 C 699 888 709 883 712 880 C 721 875 735 868 736 856 C 736 854 736 851 735 849 C 731 842 713 838 705 840 C 705 840 694 845 694 845 C 689 847 684 849 679 851 C 679 851 669 853 669 853 C 661 856 655 866 655 875 C 656 883 659 891 664 898 C 665 900 667 903 669 905 C 672 907 677 907 680 908 C 693 910 705 910 716 901 z\" id=\"_lon\"/> <path className={classes['_wal']} d=\"M 612 810 C 624 811 622 824 617 828 C 612 833 594 831 590 837 C 586 844 597 847 601 849 C 608 852 613 860 619 864 C 625 866 626 863 634 865 C 633 867 632 868 630 870 C 619 878 611 870 603 870 C 596 870 596 877 590 872 C 583 878 586 880 571 888 C 565 892 560 890 555 896 C 558 897 561 900 564 900 C 567 900 572 897 575 896 C 582 894 591 897 596 902 C 603 899 605 894 610 892 C 615 891 624 896 630 897 C 630 897 660 900 660 900 C 657 891 650 882 651 872 C 652 864 657 856 664 852 C 668 849 671 849 672 847 C 674 845 672 836 672 832 C 667 831 649 824 645 821 C 642 818 640 815 640 810 C 640 807 640 803 639 800 C 633 792 615 804 612 810 z\" id=\"_wal\"/> <path className={classes['_lvp']} d=\"M 622 715 C 622 715 633 711 633 711 C 636 700 641 699 643 706 C 644 715 635 723 630 730 C 624 738 625 742 634 745 C 637 747 636 746 639 746 C 643 747 642 749 645 750 C 647 751 652 751 654 751 C 654 751 647 757 647 757 C 647 757 651 765 651 765 C 651 765 651 778 651 778 C 652 783 654 788 652 793 C 650 803 640 801 644 813 C 644 815 645 817 647 818 C 650 820 668 827 672 828 C 672 813 670 810 672 793 C 672 793 677 777 677 777 C 679 771 678 760 677 754 C 676 748 665 735 661 728 C 654 714 657 711 657 697 C 650 695 633 692 626 692 C 622 693 617 695 616 699 C 615 703 619 703 621 705 C 622 707 622 712 622 715 z\" id=\"_lvp\"/> <path className={classes['_yor']} d=\"M 680 750 C 680 750 681 758 681 758 C 681 758 681 767 681 767 C 681 767 675 804 675 804 C 675 804 677 848 677 848 C 683 846 698 840 703 837 C 703 837 707 832 707 832 C 710 830 714 828 714 824 C 714 818 707 811 704 806 C 711 803 712 802 711 794 C 709 779 702 779 698 768 C 694 761 695 754 692 752 C 690 750 683 750 680 750 z\" id=\"_yor\"/> <path className={classes['_edi']} d=\"M 690 621 C 683 631 677 631 673 638 C 669 644 667 656 666 663 C 666 663 661 699 661 699 C 660 708 659 714 662 723 C 664 727 674 742 677 746 C 683 746 689 748 692 747 C 697 745 697 737 696 733 C 693 724 681 713 687 701 C 691 693 701 684 707 677 C 710 674 714 669 714 665 C 712 657 697 653 690 652 C 687 652 679 654 677 651 C 674 648 681 643 683 642 C 683 642 700 631 700 631 C 706 626 702 623 696 622 C 696 622 690 621 690 621 z\" id=\"_edi\"/> <path className={classes['_cly']} d=\"M 624 681 C 629 681 639 680 631 688 C 631 688 658 694 658 694 C 658 694 661 670 661 670 C 662 661 665 645 669 637 C 674 629 682 627 686 620 C 682 619 676 617 672 618 C 667 619 664 624 661 628 C 659 630 647 638 645 639 C 640 641 636 632 631 639 C 627 646 636 652 636 658 C 635 664 626 673 624 681 z\" id=\"_cly\"/> <path className={classes['unplayable']} d=\"M 560 240 C 560 240 554 258 554 258 C 549 251 550 244 546 242 C 539 240 539 256 533 247 C 533 247 529 255 529 255 C 529 255 522 250 522 250 C 522 264 533 259 542 264 C 546 266 549 271 545 274 C 543 276 541 276 539 277 C 539 277 543 286 543 286 C 531 284 525 274 512 273 C 516 281 528 284 528 291 C 529 295 525 306 522 308 C 517 312 512 314 510 307 C 506 308 506 310 505 314 C 514 319 522 323 529 331 C 537 341 537 361 557 360 C 564 360 568 358 576 358 C 576 358 595 360 595 360 C 595 360 620 359 620 359 C 626 358 638 352 643 347 C 654 338 650 326 649 314 C 649 307 650 300 644 294 C 639 290 634 290 628 290 C 620 290 617 291 611 286 C 609 287 606 289 604 289 C 599 287 601 276 593 278 C 592 279 591 279 590 280 C 589 281 587 282 586 283 C 586 283 585 268 585 268 C 584 268 583 268 582 270 C 579 272 572 290 565 279 C 563 280 558 283 556 283 C 552 282 555 273 556 271 C 559 266 562 265 564 262 C 566 259 566 246 564 243 C 563 241 562 241 560 240 z M 536 763 C 532 771 524 766 517 770 C 512 772 508 777 506 781 C 504 784 502 788 499 789 C 496 790 492 787 489 786 C 489 793 492 793 486 798 C 486 798 486 800 486 800 C 490 803 491 803 489 808 C 495 812 492 813 492 819 C 492 819 514 817 514 817 C 514 817 529 815 529 815 C 529 815 544 811 544 811 C 544 811 559 813 559 813 C 562 813 565 813 568 812 C 572 809 583 797 584 792 C 585 788 585 774 590 764 C 592 758 596 755 601 753 C 605 751 611 750 613 746 C 616 741 612 736 611 731 C 609 726 611 721 609 718 C 606 714 603 716 599 714 C 599 714 594 709 594 709 C 591 708 583 705 580 705 C 572 703 572 707 566 712 C 564 713 561 715 560 717 C 559 720 564 724 558 727 C 548 731 534 717 526 719 C 520 721 525 728 523 733 C 521 738 515 741 514 746 C 513 754 530 762 536 763 z M 845 1233 C 838 1239 834 1238 831 1242 C 825 1249 826 1269 838 1275 C 844 1265 853 1243 845 1233 z M 809 1293 C 806 1304 812 1303 813 1311 C 813 1311 811 1325 811 1325 C 811 1332 812 1339 810 1346 C 809 1350 807 1360 811 1363 C 816 1367 820 1361 825 1360 C 828 1359 830 1360 832 1358 C 834 1355 837 1346 838 1343 C 840 1334 846 1316 846 1307 C 846 1307 846 1298 846 1298 C 845 1297 845 1294 844 1293 C 843 1290 839 1288 836 1288 C 830 1287 823 1293 817 1294 C 814 1294 812 1294 809 1293 z M 647 1310 C 647 1310 659 1317 659 1317 C 666 1320 672 1311 671 1307 C 669 1301 654 1298 647 1310 z M 918 1408 C 915 1410 909 1417 912 1421 C 915 1427 924 1428 930 1430 C 939 1434 951 1443 958 1449 C 963 1453 974 1461 981 1458 C 984 1456 985 1453 985 1450 C 985 1444 985 1443 986 1436 C 986 1436 990 1423 990 1423 C 990 1420 990 1416 988 1414 C 985 1412 977 1410 974 1410 C 963 1410 954 1413 942 1411 C 935 1409 925 1406 918 1408 z M 1477 1489 C 1478 1492 1478 1494 1480 1497 C 1487 1508 1502 1502 1510 1495 C 1510 1495 1517 1489 1517 1489 C 1520 1486 1522 1486 1525 1485 C 1523 1475 1523 1477 1528 1467 C 1522 1469 1520 1471 1514 1473 C 1514 1473 1496 1477 1496 1477 C 1493 1478 1493 1481 1490 1484 C 1487 1487 1481 1488 1477 1489 z M 1302 1505 C 1300 1506 1297 1507 1295 1507 C 1293 1507 1290 1504 1288 1503 C 1288 1503 1273 1499 1273 1499 C 1264 1498 1256 1503 1240 1497 C 1235 1495 1229 1493 1226 1499 C 1225 1500 1225 1502 1225 1504 C 1226 1505 1226 1506 1227 1506 C 1227 1506 1245 1508 1245 1508 C 1252 1510 1258 1514 1265 1514 C 1270 1514 1272 1513 1276 1513 C 1286 1512 1295 1514 1302 1505 z\" id=\"unplayable\"/> <path className={classes['unplayable_water']} d=\"M 1774 1010 C 1771 1023 1771 1042 1771 1056 C 1771 1059 1771 1064 1773 1066 C 1775 1068 1780 1069 1783 1071 C 1788 1073 1794 1078 1797 1082 C 1805 1092 1802 1098 1815 1112 C 1815 1112 1841 1134 1841 1134 C 1846 1138 1848 1137 1855 1142 C 1855 1142 1876 1161 1876 1161 C 1880 1164 1884 1166 1890 1167 C 1894 1167 1901 1166 1904 1170 C 1905 1172 1905 1174 1903 1175 C 1900 1177 1893 1176 1890 1183 C 1888 1187 1889 1195 1890 1200 C 1891 1209 1891 1210 1891 1219 C 1891 1219 1888 1219 1888 1219 C 1888 1225 1889 1231 1891 1237 C 1900 1263 1918 1270 1943 1275 C 1952 1277 1961 1278 1970 1279 C 1985 1280 2010 1266 2017 1253 C 2021 1247 2021 1243 2021 1237 C 2021 1237 2021 1226 2021 1226 C 2021 1216 2017 1207 2015 1198 C 2014 1193 2013 1185 2009 1180 C 2006 1175 2001 1174 1996 1172 C 1993 1171 1988 1169 1987 1166 C 1986 1164 1988 1162 1988 1160 C 1988 1160 1988 1154 1988 1154 C 1988 1151 1990 1149 1991 1144 C 1983 1146 1976 1152 1973 1160 C 1965 1156 1961 1145 1958 1137 C 1958 1135 1956 1130 1956 1128 C 1958 1122 1964 1128 1969 1127 C 1969 1127 1984 1123 1984 1123 C 1989 1120 1996 1110 1996 1104 C 1995 1096 1985 1096 1977 1091 C 1973 1088 1968 1083 1964 1082 C 1961 1081 1959 1081 1956 1082 C 1947 1087 1950 1100 1950 1108 C 1940 1106 1933 1094 1934 1085 C 1934 1081 1935 1071 1932 1068 C 1927 1065 1918 1073 1910 1071 C 1910 1071 1902 1069 1902 1069 C 1899 1069 1895 1070 1892 1067 C 1889 1065 1889 1061 1886 1057 C 1883 1053 1877 1049 1872 1047 C 1866 1044 1865 1044 1859 1043 C 1857 1043 1854 1042 1853 1040 C 1852 1037 1854 1035 1856 1033 C 1863 1026 1870 1024 1872 1020 C 1875 1015 1871 1010 1870 1005 C 1869 998 1874 991 1880 987 C 1884 984 1887 984 1890 980 C 1896 971 1892 949 1888 939 C 1887 935 1885 930 1881 927 C 1875 924 1867 926 1861 927 C 1851 929 1837 935 1830 942 C 1830 942 1814 964 1814 964 C 1808 971 1801 975 1796 983 C 1791 991 1795 998 1787 1007 C 1785 1009 1782 1012 1779 1011 C 1777 1011 1775 1011 1774 1010 z\" id=\"unplayable_water\"/> <path className={classes['_nat']} d=\"M 202 175 C 202 175 202 859 202 859 C 202 859 240 849 240 849 C 272 844 323 842 355 846 C 372 849 395 856 410 862 C 416 865 419 866 424 869 C 426 871 429 873 432 872 C 436 871 445 861 448 858 C 448 858 477 829 477 829 C 483 823 489 819 491 811 C 487 809 487 808 488 804 C 483 799 483 797 489 794 C 488 792 485 788 488 786 C 491 782 496 789 500 786 C 500 786 508 774 508 774 C 515 766 523 765 533 765 C 527 762 510 754 512 746 C 513 741 519 738 521 733 C 523 727 517 721 525 718 C 530 716 537 719 542 722 C 549 725 553 726 560 724 C 559 722 557 719 558 717 C 558 714 561 713 563 712 C 568 708 571 703 576 702 C 580 702 591 705 594 707 C 594 707 599 711 599 711 C 603 714 606 712 610 716 C 613 720 612 725 613 729 C 614 736 616 737 617 741 C 617 745 613 750 611 753 C 615 756 618 759 623 761 C 631 764 640 763 648 763 C 645 759 645 759 647 754 C 643 752 642 752 641 748 C 640 748 638 749 637 749 C 632 749 623 744 624 737 C 626 731 633 724 637 719 C 640 713 640 709 640 703 C 634 707 637 713 628 713 C 627 714 627 715 626 716 C 625 716 624 717 622 717 C 618 715 620 708 620 705 C 613 705 611 700 615 695 C 620 689 627 691 633 683 C 633 683 629 683 629 683 C 612 683 633 668 633 658 C 634 652 625 646 629 639 C 633 632 638 633 642 638 C 646 636 656 630 659 627 C 664 621 665 618 673 615 C 673 615 670 614 670 614 C 670 614 672 594 672 594 C 672 594 676 553 676 553 C 676 553 684 485 684 485 C 684 476 684 469 682 460 C 679 450 664 424 658 413 C 658 413 629 359 629 359 C 629 359 620 362 620 362 C 620 362 593 362 593 362 C 593 362 572 360 572 360 C 563 361 553 365 544 359 C 534 353 531 337 526 330 C 522 325 515 322 510 319 C 508 318 504 316 503 313 C 503 312 504 311 504 310 C 507 299 511 311 517 309 C 523 307 523 303 525 298 C 525 298 526 293 526 293 C 527 286 519 284 514 279 C 512 277 509 274 511 272 C 514 270 518 272 520 272 C 527 275 531 280 539 282 C 537 275 539 275 545 273 C 542 260 529 267 522 258 C 518 253 519 244 528 251 C 531 247 532 243 536 248 C 538 246 540 241 543 240 C 550 237 553 249 553 254 C 559 242 556 229 556 216 C 556 216 556 175 556 175 C 556 175 202 175 202 175 z\" id=\"_nat\"/> <path className={classes['_nrg']} d=\"M 560 175 C 560 175 560 228 560 228 C 560 243 569 238 568 255 C 567 263 563 265 560 269 C 558 273 556 278 556 282 C 556 282 568 277 568 277 C 568 277 568 281 568 281 C 577 279 575 273 580 268 C 586 263 587 268 587 273 C 587 273 587 278 587 278 C 589 277 593 276 595 276 C 601 276 602 283 604 287 C 606 286 609 285 611 285 C 613 285 614 287 618 288 C 618 288 630 288 630 288 C 633 288 635 288 638 289 C 653 293 651 308 652 320 C 653 327 654 334 651 341 C 647 348 639 353 632 357 C 632 357 667 423 667 423 C 679 443 688 458 688 482 C 688 482 684 516 684 516 C 684 516 677 587 677 587 C 677 587 674 615 674 615 C 674 615 698 620 698 620 C 701 621 705 623 708 623 C 710 622 718 615 720 612 C 730 604 737 597 748 590 C 775 574 808 568 838 562 C 848 559 868 554 877 555 C 886 543 890 538 905 541 C 901 531 909 531 917 530 C 913 525 913 522 920 519 C 926 517 928 521 932 520 C 935 519 941 513 947 510 C 953 506 957 508 959 506 C 961 504 961 502 964 497 C 967 492 978 481 983 480 C 985 479 987 480 989 480 C 989 466 999 454 1006 442 C 1012 433 1017 421 1023 413 C 1023 413 1042 394 1042 394 C 1042 394 1053 378 1053 378 C 1053 378 1069 356 1069 356 C 1069 356 1080 342 1080 342 C 1082 340 1086 336 1087 335 C 1088 332 1085 330 1085 327 C 1084 324 1088 319 1090 316 C 1094 313 1097 315 1099 312 C 1102 310 1103 305 1109 303 C 1113 301 1120 302 1131 297 C 1140 293 1145 286 1153 281 C 1159 277 1169 272 1172 266 C 1174 263 1172 256 1171 252 C 1171 252 1171 234 1171 234 C 1171 234 1172 219 1172 219 C 1172 219 1174 175 1174 175 C 1174 175 560 175 560 175 z\" id=\"_nrg\"/> <path className={classes['_bar']} d=\"M 1178 175 C 1178 175 1176 214 1176 214 C 1176 214 1175 230 1175 230 C 1175 230 1175 246 1175 246 C 1175 249 1175 259 1177 261 C 1179 264 1183 263 1184 267 C 1186 271 1183 283 1183 288 C 1189 282 1189 273 1193 266 C 1194 264 1197 260 1199 262 C 1201 265 1199 274 1200 279 C 1204 273 1202 263 1207 258 C 1210 254 1217 257 1218 262 C 1218 267 1215 270 1217 278 C 1222 274 1222 268 1228 266 C 1234 265 1252 272 1249 280 C 1247 286 1236 289 1230 289 C 1232 292 1237 296 1241 297 C 1246 297 1248 293 1260 293 C 1265 285 1277 288 1278 293 C 1278 295 1275 299 1274 301 C 1284 305 1293 302 1303 302 C 1306 302 1312 302 1315 302 C 1322 304 1337 311 1344 314 C 1344 314 1359 319 1359 319 C 1371 322 1386 326 1395 334 C 1398 337 1407 349 1408 353 C 1410 365 1401 379 1393 387 C 1390 390 1387 393 1383 395 C 1379 396 1370 397 1366 397 C 1357 397 1330 394 1322 392 C 1322 392 1313 388 1313 388 C 1309 388 1306 390 1301 388 C 1295 386 1294 383 1287 380 C 1289 391 1296 392 1304 398 C 1308 401 1310 404 1315 406 C 1319 408 1323 409 1327 412 C 1334 419 1331 430 1333 436 C 1335 440 1340 447 1343 451 C 1345 455 1346 459 1350 462 C 1350 462 1369 469 1369 469 C 1372 470 1384 476 1387 475 C 1389 475 1392 472 1394 470 C 1392 465 1389 460 1384 458 C 1381 458 1378 458 1375 457 C 1371 455 1367 450 1365 446 C 1363 441 1364 431 1371 430 C 1375 430 1380 434 1383 436 C 1388 438 1391 439 1397 439 C 1397 439 1423 439 1423 439 C 1430 439 1441 442 1447 441 C 1447 441 1447 439 1447 439 C 1440 437 1430 437 1426 435 C 1420 432 1418 426 1413 422 C 1409 418 1402 415 1401 410 C 1399 404 1408 395 1411 391 C 1420 380 1419 376 1422 372 C 1428 366 1440 366 1448 367 C 1451 360 1452 347 1447 340 C 1443 336 1439 337 1436 331 C 1433 326 1434 317 1430 306 C 1426 297 1421 294 1416 287 C 1428 283 1455 284 1459 299 C 1461 306 1452 309 1450 316 C 1450 318 1450 321 1452 322 C 1456 327 1471 331 1477 329 C 1493 325 1488 312 1489 300 C 1491 290 1496 278 1502 269 C 1504 265 1511 254 1515 253 C 1517 253 1518 253 1520 254 C 1520 249 1518 242 1520 237 C 1526 227 1534 237 1535 244 C 1537 251 1532 257 1532 270 C 1532 285 1533 289 1542 302 C 1543 298 1537 288 1537 282 C 1537 276 1539 270 1541 264 C 1541 260 1542 254 1544 251 C 1544 251 1548 244 1548 244 C 1550 240 1549 236 1554 229 C 1560 222 1565 224 1570 219 C 1574 214 1575 208 1577 204 C 1578 202 1580 199 1583 199 C 1585 199 1587 203 1588 204 C 1591 207 1593 209 1597 210 C 1596 207 1595 203 1595 200 C 1595 194 1598 192 1594 186 C 1593 184 1591 182 1589 181 C 1587 179 1584 177 1582 176 C 1578 174 1566 175 1561 175 C 1561 175 1493 175 1493 175 C 1493 175 1178 175 1178 175 z\" id=\"_bar\"/> <path className={classes['_bot']} d=\"M 1058 692 C 1058 692 1062 700 1062 700 C 1062 700 1064 709 1064 709 C 1064 709 1085 715 1085 715 C 1085 715 1129 730 1129 730 C 1129 730 1154 733 1154 733 C 1155 731 1156 729 1158 727 C 1167 716 1178 731 1185 738 C 1187 741 1189 744 1192 745 C 1202 747 1204 731 1204 724 C 1204 719 1205 707 1202 703 C 1200 700 1197 701 1192 697 C 1186 692 1184 681 1186 673 C 1188 666 1194 663 1200 660 C 1211 654 1223 653 1236 654 C 1236 654 1250 656 1250 656 C 1264 657 1263 645 1270 640 C 1273 638 1275 638 1278 637 C 1278 637 1286 633 1286 633 C 1289 633 1294 634 1298 634 C 1287 619 1270 633 1268 612 C 1268 612 1261 617 1261 617 C 1261 617 1237 625 1237 625 C 1237 625 1208 636 1208 636 C 1203 638 1185 643 1181 642 C 1176 642 1175 637 1170 635 C 1170 635 1163 633 1163 633 C 1163 633 1154 628 1154 628 C 1154 628 1147 625 1147 625 C 1142 622 1139 614 1140 608 C 1140 599 1144 597 1144 587 C 1144 587 1138 553 1138 553 C 1137 542 1147 531 1154 523 C 1154 523 1166 508 1166 508 C 1166 508 1186 478 1186 478 C 1186 478 1197 464 1197 464 C 1198 462 1198 459 1197 457 C 1194 447 1182 441 1172 440 C 1168 440 1163 441 1159 443 C 1150 449 1142 466 1142 477 C 1142 487 1145 488 1143 494 C 1140 504 1125 518 1117 525 C 1117 525 1103 535 1103 535 C 1100 538 1097 542 1095 545 C 1085 558 1083 563 1079 579 C 1077 590 1074 609 1079 619 C 1082 624 1086 625 1090 629 C 1097 637 1103 646 1100 657 C 1100 661 1097 666 1095 669 C 1085 686 1076 689 1058 692 z\" id=\"_bot\"/> <path className={classes['_bal']} d=\"M 1060 713 C 1059 721 1057 725 1057 734 C 1057 744 1056 753 1052 763 C 1050 769 1047 776 1041 779 C 1037 781 1031 780 1026 780 C 1021 780 1016 781 1012 785 C 1006 792 1007 803 993 804 C 990 804 985 803 983 804 C 981 805 975 814 973 817 C 966 825 955 830 945 829 C 931 828 931 808 917 804 C 918 812 919 816 924 823 C 927 826 935 831 935 836 C 935 839 932 844 930 846 C 934 846 939 846 942 845 C 946 844 947 842 952 840 C 952 840 967 836 967 836 C 971 834 979 830 984 831 C 985 831 986 831 987 831 C 994 835 986 840 989 844 C 991 848 1002 850 1007 850 C 1024 850 1040 843 1056 836 C 1070 830 1079 824 1094 831 C 1090 839 1098 844 1107 840 C 1113 838 1118 835 1121 830 C 1123 827 1123 824 1125 821 C 1127 818 1130 817 1133 816 C 1135 816 1137 817 1139 816 C 1143 814 1144 805 1144 801 C 1146 790 1140 777 1143 762 C 1143 762 1152 735 1152 735 C 1144 735 1138 735 1130 734 C 1122 732 1115 729 1108 727 C 1097 723 1071 715 1060 713 z\" id=\"_bal\"/> <path className={classes['denmark_water']} d=\"M 919 800 C 926 804 928 807 932 813 C 935 817 938 823 943 825 C 950 828 962 823 967 818 C 970 816 973 811 975 808 C 978 805 980 801 981 797 C 982 787 978 782 976 773 C 976 773 965 771 965 771 C 965 771 943 769 943 769 C 943 769 935 769 935 769 C 935 769 926 778 926 778 C 926 778 922 786 922 786 C 922 786 919 800 919 800 z M 966 815 C 961 812 959 809 955 805 C 952 802 945 792 944 788 C 944 785 947 783 949 781 C 953 777 955 772 961 772 C 973 772 972 779 975 788 C 976 792 978 795 976 799 C 975 805 969 810 966 815 z M 957 821 C 954 822 952 823 949 823 C 935 824 939 804 951 812 C 952 813 953 814 954 815 C 956 817 956 819 957 821 z\" id=\"denmark_water\"/> <path className={classes['_ska']} d=\"M 888 693 C 886 712 885 718 894 735 C 894 735 896 735 896 735 C 902 728 907 729 915 726 C 921 724 926 722 931 718 C 934 717 939 713 942 717 C 944 719 944 721 944 723 C 945 727 944 731 942 735 C 940 739 936 743 936 748 C 937 752 940 754 943 757 C 946 761 945 763 948 765 C 949 766 954 767 956 767 C 956 767 976 771 976 771 C 977 768 980 758 980 756 C 980 751 972 733 970 727 C 970 727 962 698 962 698 C 961 692 958 685 958 679 C 959 674 960 664 954 661 C 950 660 947 665 938 670 C 930 674 928 674 919 679 C 908 686 902 692 888 693 z\" id=\"_ska\"/> <path className={classes['_hel']} d=\"M 817 848 C 830 846 840 850 849 848 C 856 846 859 840 865 840 C 873 840 877 851 884 847 C 889 844 890 837 890 832 C 890 832 890 819 890 819 C 890 814 889 813 889 807 C 889 801 891 798 891 790 C 891 785 889 784 888 780 C 887 777 887 772 887 769 C 887 769 867 769 867 769 C 853 769 842 778 834 788 C 823 802 821 815 819 832 C 819 832 817 848 817 848 z\" id=\"_hel\"/> <path className={classes['_nth']} d=\"M 678 650 C 678 650 687 650 687 650 C 693 650 695 650 700 652 C 703 653 705 654 708 655 C 718 662 717 668 711 676 C 704 684 689 696 688 706 C 687 715 695 726 698 734 C 700 741 697 744 697 751 C 697 758 697 764 701 770 C 705 778 709 779 712 789 C 715 797 716 804 707 807 C 710 812 719 820 716 827 C 713 831 710 831 707 837 C 707 837 723 839 723 839 C 726 840 729 841 732 843 C 734 844 735 845 736 847 C 747 862 724 875 714 882 C 712 883 705 887 704 889 C 702 895 714 895 717 900 C 718 902 718 909 724 912 C 726 913 735 911 738 910 C 748 909 771 905 778 899 C 783 894 787 881 790 875 C 796 863 802 857 814 851 C 812 844 814 838 815 831 C 818 807 827 780 851 769 C 862 763 876 765 888 765 C 888 765 892 740 892 740 C 892 737 888 731 886 728 C 883 722 883 718 883 711 C 883 711 883 693 883 693 C 882 691 877 689 875 687 C 870 684 860 676 860 669 C 859 658 875 655 877 645 C 874 644 872 644 869 644 C 867 645 863 646 861 645 C 856 644 857 637 860 634 C 865 630 868 634 872 627 C 872 627 861 623 861 623 C 864 617 867 619 873 617 C 868 608 864 611 863 602 C 863 594 867 577 870 569 C 870 569 874 558 874 558 C 874 558 829 567 829 567 C 803 573 776 579 752 592 C 735 602 727 611 713 623 C 706 629 703 632 695 637 C 689 641 681 643 678 650 z\" id=\"_nth\"/> <path className={classes['_eng']} d=\"M 498 922 C 498 922 514 932 514 932 C 514 932 541 946 541 946 C 541 946 558 954 558 954 C 558 954 571 952 571 952 C 571 952 583 954 583 954 C 583 954 592 954 592 954 C 592 954 602 962 602 962 C 602 962 610 964 610 964 C 610 964 630 973 630 973 C 627 962 629 965 631 956 C 631 951 627 939 629 936 C 631 933 640 935 643 936 C 646 940 645 945 648 949 C 654 956 668 957 677 957 C 674 951 676 950 682 947 C 691 943 693 947 700 943 C 712 936 714 925 721 915 C 719 913 716 908 714 907 C 712 907 708 908 706 909 C 702 910 698 911 693 911 C 688 911 675 910 671 908 C 666 906 666 904 659 903 C 659 903 630 900 630 900 C 625 899 618 895 613 894 C 606 894 603 902 598 903 C 596 904 593 901 591 900 C 588 899 583 897 579 897 C 574 898 570 901 566 902 C 560 903 559 899 554 900 C 554 900 534 907 534 907 C 534 907 498 922 498 922 z\" id=\"_eng\"/> <path className={classes['_iri']} d=\"M 490 820 C 490 820 452 859 452 859 C 447 864 439 871 436 877 C 436 877 475 907 475 907 C 479 910 489 918 493 919 C 497 919 511 913 515 911 C 515 911 549 897 549 897 C 554 895 555 892 558 890 C 561 888 563 890 570 886 C 574 884 580 881 583 878 C 585 875 586 872 588 871 C 591 869 592 871 593 873 C 596 871 599 868 602 868 C 604 867 611 870 614 870 C 622 872 625 871 631 867 C 627 866 623 868 619 866 C 613 863 608 854 600 850 C 595 849 584 845 587 838 C 593 825 620 836 618 818 C 617 811 612 813 610 810 C 608 807 617 802 619 801 C 631 793 634 792 645 802 C 647 801 648 800 649 798 C 652 791 648 774 648 766 C 632 770 618 765 607 753 C 603 754 599 755 596 759 C 585 769 591 789 583 799 C 579 803 571 812 567 814 C 561 817 554 814 547 814 C 538 814 535 816 526 817 C 518 819 498 821 490 820 z\" id=\"_iri\"/> <path className={classes['_mid']} d=\"M 202 1527 C 204 1527 210 1527 212 1526 C 214 1525 216 1518 217 1516 C 219 1509 222 1502 226 1496 C 230 1489 236 1479 242 1473 C 242 1473 254 1464 254 1464 C 260 1458 263 1453 270 1448 C 278 1442 288 1436 298 1434 C 298 1434 336 1430 336 1430 C 353 1425 369 1402 381 1389 C 381 1389 391 1379 391 1379 C 393 1378 396 1376 397 1374 C 401 1366 392 1362 389 1356 C 389 1356 387 1340 387 1340 C 385 1330 379 1321 370 1316 C 361 1311 358 1317 349 1316 C 343 1315 338 1311 333 1308 C 330 1307 325 1305 324 1302 C 323 1298 330 1291 332 1288 C 336 1281 334 1279 336 1273 C 337 1268 340 1265 340 1260 C 340 1252 335 1256 332 1252 C 328 1248 329 1242 331 1238 C 332 1232 335 1224 340 1220 C 344 1216 347 1217 352 1210 C 361 1200 375 1172 378 1159 C 378 1159 383 1139 383 1139 C 385 1134 387 1130 388 1123 C 388 1114 383 1107 390 1099 C 393 1096 397 1093 401 1093 C 404 1093 410 1096 414 1094 C 416 1094 416 1091 418 1090 C 421 1087 427 1086 430 1086 C 441 1087 439 1095 453 1101 C 453 1101 477 1109 477 1109 C 477 1109 503 1123 503 1123 C 503 1123 523 1130 523 1130 C 523 1130 534 1136 534 1136 C 539 1138 544 1138 547 1139 C 555 1141 558 1149 570 1148 C 575 1148 583 1139 587 1135 C 589 1132 598 1113 598 1110 C 599 1107 598 1106 598 1103 C 599 1096 605 1086 610 1082 C 606 1069 610 1069 609 1059 C 607 1048 598 1044 597 1032 C 597 1028 598 1025 597 1021 C 597 1016 594 1014 593 1012 C 592 1009 592 1007 591 1005 C 590 1003 586 1001 584 999 C 579 994 574 988 568 984 C 563 982 554 983 549 976 C 548 974 547 971 547 969 C 554 967 554 964 555 957 C 555 957 535 947 535 947 C 512 936 496 928 475 912 C 453 895 439 879 412 867 C 390 857 356 848 332 848 C 332 848 290 848 290 848 C 290 848 278 849 278 849 C 259 850 241 852 222 858 C 219 859 205 862 203 864 C 202 865 202 869 202 871 C 202 871 202 1527 202 1527 z\" id=\"_mid\"/> <path className={classes['_wes']} d=\"M 674 1309 C 673 1311 672 1313 671 1315 C 670 1316 668 1318 667 1319 C 658 1325 653 1312 645 1313 C 645 1313 624 1321 624 1321 C 610 1325 596 1324 582 1324 C 577 1324 568 1325 564 1329 C 564 1329 546 1351 546 1351 C 540 1356 526 1353 517 1359 C 510 1363 506 1371 500 1372 C 497 1372 493 1370 490 1369 C 484 1368 482 1371 475 1369 C 475 1369 452 1360 452 1360 C 440 1358 436 1362 427 1363 C 418 1364 418 1358 408 1364 C 407 1365 404 1366 403 1368 C 400 1372 404 1376 406 1379 C 410 1386 412 1399 418 1406 C 424 1412 442 1414 451 1414 C 454 1414 460 1412 462 1413 C 466 1414 464 1418 470 1422 C 477 1426 494 1429 502 1429 C 516 1429 517 1420 526 1417 C 528 1417 537 1417 539 1417 C 543 1419 544 1421 549 1420 C 549 1420 571 1412 571 1412 C 580 1409 591 1407 600 1407 C 621 1407 621 1410 634 1410 C 650 1410 670 1409 685 1413 C 691 1415 694 1417 699 1421 C 701 1423 705 1427 708 1427 C 711 1428 714 1425 717 1425 C 717 1425 739 1419 739 1419 C 744 1420 753 1424 757 1425 C 762 1426 763 1422 770 1422 C 780 1423 784 1427 791 1429 C 799 1430 807 1428 815 1427 C 815 1427 819 1396 819 1396 C 819 1389 816 1376 813 1370 C 811 1366 808 1363 807 1358 C 805 1353 809 1345 809 1338 C 809 1335 808 1325 807 1324 C 806 1322 801 1320 799 1320 C 799 1320 779 1313 779 1313 C 758 1306 746 1305 724 1305 C 724 1305 692 1308 692 1308 C 686 1309 680 1310 674 1309 z\" id=\"_wes\"/> <path className={classes['_gol']} d=\"M 674 1307 C 674 1307 698 1304 698 1304 C 720 1301 738 1299 760 1304 C 760 1304 809 1319 809 1319 C 813 1307 808 1308 806 1300 C 806 1296 807 1293 808 1290 C 821 1296 822 1286 836 1285 C 836 1269 826 1273 825 1257 C 825 1251 826 1242 831 1239 C 835 1236 838 1236 843 1232 C 848 1227 848 1222 854 1221 C 860 1219 870 1222 876 1223 C 876 1223 874 1210 874 1210 C 874 1206 874 1202 873 1198 C 872 1190 868 1189 862 1184 C 855 1179 852 1175 842 1177 C 832 1179 829 1185 822 1189 C 822 1189 799 1197 799 1197 C 790 1201 784 1208 774 1210 C 765 1212 758 1207 752 1200 C 750 1197 750 1195 748 1193 C 743 1190 739 1192 734 1191 C 728 1190 721 1184 715 1183 C 711 1183 706 1185 702 1186 C 682 1196 698 1217 680 1232 C 672 1238 656 1244 646 1246 C 640 1247 622 1249 618 1251 C 614 1254 616 1257 613 1259 C 611 1260 608 1260 605 1262 C 605 1262 600 1267 600 1267 C 600 1267 594 1273 594 1273 C 590 1276 586 1284 583 1289 C 583 1289 576 1298 576 1298 C 573 1304 576 1316 582 1319 C 584 1320 588 1320 590 1320 C 590 1320 606 1320 606 1320 C 619 1320 631 1316 642 1310 C 647 1307 648 1304 653 1301 C 661 1298 669 1301 674 1307 z\" id=\"_gol\"/> <path className={classes['_tyn']} d=\"M 816 1367 C 820 1377 822 1381 822 1392 C 822 1392 822 1404 822 1404 C 822 1404 819 1426 819 1426 C 829 1424 844 1425 849 1435 C 850 1438 850 1442 850 1445 C 856 1444 870 1435 876 1432 C 876 1432 906 1419 906 1419 C 911 1415 913 1407 919 1405 C 924 1403 938 1408 944 1409 C 944 1409 951 1409 951 1409 C 964 1409 970 1407 983 1409 C 992 1398 994 1403 1004 1406 C 1006 1403 1014 1390 1015 1387 C 1016 1382 1014 1376 1012 1371 C 1010 1367 1009 1360 1006 1357 C 1003 1352 996 1347 991 1342 C 989 1340 987 1338 986 1335 C 985 1333 985 1330 982 1328 C 980 1325 970 1326 966 1326 C 967 1319 963 1315 960 1309 C 958 1306 957 1302 954 1300 C 950 1298 942 1298 938 1297 C 932 1296 927 1292 923 1287 C 923 1287 913 1273 913 1273 C 913 1273 898 1255 898 1255 C 898 1255 885 1238 885 1238 C 883 1236 880 1229 878 1228 C 875 1226 869 1225 866 1225 C 862 1224 857 1222 853 1225 C 847 1229 850 1237 850 1243 C 850 1252 849 1258 845 1266 C 843 1270 840 1275 839 1279 C 838 1288 844 1287 847 1293 C 848 1297 848 1303 848 1307 C 848 1318 842 1335 839 1346 C 838 1350 836 1358 833 1360 C 830 1363 828 1361 825 1362 C 823 1363 818 1366 816 1367 z\" id=\"_tyn\"/> <path className={classes['_adr']} d=\"M 1104 1335 C 1104 1321 1105 1317 1108 1304 C 1109 1300 1111 1292 1109 1288 C 1107 1284 1101 1280 1098 1277 C 1085 1265 1083 1264 1069 1254 C 1069 1254 1040 1231 1040 1231 C 1040 1231 1022 1219 1022 1219 C 1022 1219 1006 1205 1006 1205 C 1001 1201 995 1197 990 1192 C 986 1187 981 1178 982 1172 C 983 1164 989 1163 985 1155 C 978 1159 976 1173 969 1172 C 966 1171 962 1165 962 1162 C 960 1155 966 1148 964 1145 C 962 1142 958 1143 956 1144 C 952 1144 943 1148 939 1150 C 937 1151 935 1153 934 1155 C 933 1158 936 1161 935 1164 C 935 1166 932 1169 931 1171 C 929 1175 930 1182 931 1186 C 937 1198 952 1206 960 1219 C 964 1227 964 1234 967 1242 C 970 1251 979 1261 986 1267 C 991 1271 997 1274 1004 1276 C 1007 1276 1016 1277 1018 1279 C 1022 1283 1016 1286 1022 1293 C 1029 1301 1059 1319 1070 1327 C 1073 1329 1076 1332 1079 1335 C 1080 1337 1082 1340 1084 1340 C 1087 1341 1100 1336 1104 1335 z\" id=\"_adr\"/> <path className={classes['_ion']} d=\"M 1044 1331 C 1040 1336 1036 1342 1032 1348 C 1031 1350 1029 1353 1030 1356 C 1031 1359 1036 1361 1038 1363 C 1044 1369 1047 1377 1043 1385 C 1039 1391 1035 1386 1031 1390 C 1029 1392 1029 1397 1028 1400 C 1025 1406 1020 1416 1015 1419 C 1007 1425 999 1419 1001 1409 C 995 1406 990 1403 987 1411 C 990 1413 992 1414 993 1418 C 993 1422 990 1429 989 1434 C 989 1434 986 1455 986 1455 C 985 1458 982 1460 979 1461 C 969 1462 961 1453 954 1448 C 950 1444 937 1436 932 1433 C 932 1433 919 1429 919 1429 C 914 1427 912 1423 909 1423 C 906 1422 901 1425 898 1426 C 898 1426 874 1437 874 1437 C 877 1455 856 1455 855 1470 C 854 1481 866 1486 871 1495 C 876 1506 872 1516 868 1527 C 868 1527 1223 1527 1223 1527 C 1223 1527 1224 1509 1224 1509 C 1224 1509 1211 1479 1211 1479 C 1209 1474 1206 1464 1199 1464 C 1195 1464 1196 1471 1189 1475 C 1187 1467 1186 1458 1178 1454 C 1177 1456 1174 1462 1171 1461 C 1170 1460 1169 1457 1168 1455 C 1167 1450 1167 1444 1165 1439 C 1162 1431 1155 1427 1154 1421 C 1153 1412 1162 1412 1165 1411 C 1173 1409 1173 1407 1182 1408 C 1193 1410 1195 1414 1203 1416 C 1204 1408 1203 1409 1195 1405 C 1193 1404 1191 1403 1188 1402 C 1188 1402 1164 1406 1164 1406 C 1161 1406 1157 1407 1155 1406 C 1153 1405 1136 1392 1151 1387 C 1146 1384 1145 1387 1141 1385 C 1138 1384 1133 1379 1131 1376 C 1125 1369 1128 1367 1126 1361 C 1124 1355 1111 1342 1106 1340 C 1102 1338 1088 1343 1084 1346 C 1081 1348 1080 1351 1077 1351 C 1074 1352 1070 1349 1068 1348 C 1059 1344 1052 1337 1044 1331 z\" id=\"_ion\"/> <path className={classes['_aeg']} d=\"M 1227 1321 C 1227 1321 1242 1339 1242 1339 C 1237 1336 1231 1334 1225 1333 C 1225 1333 1233 1347 1233 1347 C 1233 1347 1217 1339 1217 1339 C 1217 1339 1221 1347 1221 1347 C 1214 1346 1202 1339 1201 1332 C 1200 1330 1201 1329 1201 1327 C 1184 1333 1203 1353 1209 1360 C 1211 1362 1214 1366 1214 1369 C 1213 1373 1207 1369 1204 1370 C 1202 1370 1201 1371 1199 1372 C 1200 1374 1202 1377 1202 1379 C 1202 1381 1200 1383 1200 1386 C 1202 1390 1213 1394 1217 1395 C 1214 1391 1213 1391 1210 1388 C 1204 1382 1209 1379 1213 1380 C 1215 1381 1219 1384 1221 1385 C 1227 1389 1231 1389 1234 1392 C 1238 1395 1238 1401 1233 1404 C 1233 1404 1233 1413 1233 1413 C 1233 1413 1234 1425 1234 1425 C 1229 1423 1225 1418 1219 1418 C 1217 1418 1213 1418 1213 1421 C 1213 1425 1224 1429 1218 1434 C 1213 1439 1210 1431 1200 1434 C 1200 1434 1209 1455 1209 1455 C 1209 1455 1212 1470 1212 1470 C 1212 1470 1223 1497 1223 1497 C 1225 1496 1228 1493 1231 1493 C 1234 1492 1239 1494 1242 1496 C 1247 1497 1252 1498 1257 1498 C 1267 1498 1268 1496 1279 1498 C 1279 1498 1296 1504 1296 1504 C 1298 1504 1300 1503 1302 1502 C 1305 1502 1306 1502 1309 1501 C 1318 1498 1333 1485 1339 1478 C 1345 1470 1350 1464 1350 1454 C 1340 1451 1353 1448 1352 1438 C 1352 1438 1335 1442 1335 1442 C 1333 1442 1330 1442 1329 1440 C 1328 1436 1332 1436 1329 1429 C 1328 1429 1326 1430 1325 1430 C 1316 1429 1322 1415 1318 1410 C 1314 1404 1302 1405 1305 1399 C 1306 1397 1309 1395 1309 1393 C 1310 1390 1308 1387 1309 1384 C 1309 1381 1311 1379 1311 1376 C 1311 1374 1308 1369 1306 1366 C 1305 1362 1304 1357 1303 1353 C 1297 1354 1293 1358 1289 1357 C 1286 1357 1285 1354 1284 1352 C 1281 1347 1276 1342 1280 1336 C 1284 1328 1294 1326 1300 1319 C 1300 1319 1288 1320 1288 1320 C 1288 1320 1280 1315 1280 1315 C 1280 1315 1259 1313 1259 1313 C 1259 1313 1238 1316 1238 1316 C 1238 1316 1227 1321 1227 1321 z\" id=\"_aeg\"/> <path className={classes['_eas']} d=\"M 1304 1506 C 1296 1516 1288 1514 1277 1515 C 1272 1516 1268 1518 1263 1516 C 1258 1515 1255 1513 1245 1511 C 1245 1511 1227 1509 1227 1509 C 1227 1509 1227 1527 1227 1527 C 1227 1527 1582 1527 1582 1527 C 1582 1527 1582 1515 1582 1515 C 1582 1515 1579 1485 1579 1485 C 1579 1485 1576 1461 1576 1461 C 1576 1461 1571 1462 1571 1462 C 1571 1462 1571 1440 1571 1440 C 1571 1440 1567 1432 1567 1432 C 1567 1432 1572 1420 1572 1420 C 1572 1420 1572 1409 1572 1409 C 1564 1413 1565 1422 1558 1424 C 1551 1427 1543 1417 1534 1423 C 1530 1426 1524 1436 1519 1442 C 1512 1449 1495 1455 1485 1454 C 1478 1454 1473 1450 1467 1447 C 1457 1441 1448 1435 1436 1435 C 1434 1435 1431 1435 1430 1435 C 1419 1438 1424 1450 1419 1457 C 1417 1460 1407 1463 1403 1464 C 1397 1465 1390 1463 1385 1459 C 1385 1459 1378 1451 1378 1451 C 1376 1450 1371 1450 1368 1449 C 1365 1449 1362 1447 1359 1448 C 1353 1450 1355 1458 1350 1469 C 1342 1482 1332 1492 1319 1500 C 1314 1502 1310 1506 1304 1506 z M 1536 1460 C 1534 1467 1530 1468 1527 1474 C 1525 1479 1528 1482 1526 1485 C 1525 1487 1523 1487 1520 1490 C 1515 1493 1513 1498 1504 1502 C 1495 1507 1483 1508 1477 1498 C 1476 1496 1475 1493 1475 1491 C 1474 1485 1481 1487 1487 1482 C 1491 1479 1490 1477 1494 1475 C 1494 1475 1517 1470 1517 1470 C 1524 1467 1528 1462 1536 1460 z\" id=\"_eas\"/> <path className={classes['constantinople_water']} d=\"M 1348 1283 C 1350 1286 1356 1290 1357 1292 C 1359 1297 1352 1298 1349 1299 C 1334 1302 1327 1302 1314 1313 C 1314 1313 1297 1329 1297 1329 C 1294 1332 1292 1335 1287 1333 C 1282 1339 1281 1340 1285 1347 C 1291 1341 1304 1327 1311 1323 C 1318 1320 1324 1326 1335 1323 C 1341 1321 1342 1318 1347 1316 C 1347 1316 1357 1312 1357 1312 C 1357 1312 1366 1308 1366 1308 C 1366 1308 1375 1305 1375 1305 C 1371 1303 1366 1304 1363 1301 C 1359 1297 1363 1291 1371 1290 C 1366 1279 1358 1276 1348 1283 z\" id=\"constantinople_water\"/> <path className={classes['_bla']} d=\"M 1570 1032 C 1570 1032 1546 1047 1546 1047 C 1546 1047 1511 1064 1511 1064 C 1511 1064 1483 1087 1483 1087 C 1483 1087 1462 1097 1462 1097 C 1462 1097 1474 1104 1474 1104 C 1481 1109 1488 1117 1496 1118 C 1505 1119 1513 1102 1521 1115 C 1523 1119 1523 1123 1520 1126 C 1515 1130 1507 1128 1503 1130 C 1500 1132 1499 1135 1496 1137 C 1492 1140 1489 1140 1486 1142 C 1483 1144 1478 1151 1475 1154 C 1471 1158 1467 1161 1461 1159 C 1457 1156 1454 1153 1453 1148 C 1453 1145 1454 1140 1452 1137 C 1449 1133 1442 1133 1438 1131 C 1435 1130 1432 1128 1432 1125 C 1433 1120 1438 1115 1442 1112 C 1444 1110 1448 1109 1449 1106 C 1450 1103 1448 1101 1445 1101 C 1439 1101 1428 1108 1417 1105 C 1408 1102 1409 1097 1402 1094 C 1405 1089 1409 1089 1415 1088 C 1413 1087 1413 1086 1411 1085 C 1404 1084 1389 1089 1384 1093 C 1380 1097 1378 1102 1375 1104 C 1372 1105 1369 1103 1366 1102 C 1368 1105 1371 1109 1371 1112 C 1371 1116 1368 1120 1366 1123 C 1364 1127 1362 1133 1361 1138 C 1359 1145 1360 1152 1357 1158 C 1353 1166 1347 1166 1344 1176 C 1344 1176 1339 1210 1339 1210 C 1336 1216 1332 1214 1329 1218 C 1325 1223 1327 1230 1325 1235 C 1325 1235 1322 1246 1322 1246 C 1322 1250 1325 1253 1327 1256 C 1327 1256 1337 1273 1337 1273 C 1338 1275 1340 1279 1343 1280 C 1347 1281 1350 1277 1355 1275 C 1366 1273 1370 1281 1375 1289 C 1375 1289 1400 1284 1400 1284 C 1406 1283 1414 1283 1419 1280 C 1419 1280 1442 1257 1442 1257 C 1453 1248 1463 1244 1477 1241 C 1477 1241 1501 1237 1501 1237 C 1506 1236 1507 1233 1511 1233 C 1519 1232 1522 1247 1529 1244 C 1530 1243 1532 1242 1533 1241 C 1534 1240 1536 1238 1537 1237 C 1537 1237 1552 1247 1552 1247 C 1552 1247 1553 1242 1553 1242 C 1561 1246 1570 1250 1579 1251 C 1582 1251 1584 1250 1587 1250 C 1603 1249 1607 1247 1622 1242 C 1640 1236 1637 1241 1655 1229 C 1670 1218 1687 1202 1673 1183 C 1670 1179 1665 1173 1660 1171 C 1652 1167 1640 1168 1630 1164 C 1620 1159 1611 1151 1601 1145 C 1592 1140 1583 1136 1573 1133 C 1573 1133 1556 1129 1556 1129 C 1556 1129 1543 1124 1543 1124 C 1538 1123 1533 1122 1530 1117 C 1528 1115 1527 1111 1530 1109 C 1534 1108 1539 1112 1543 1110 C 1547 1108 1546 1102 1547 1098 C 1549 1088 1555 1079 1556 1069 C 1554 1069 1551 1069 1549 1069 C 1544 1068 1540 1063 1544 1058 C 1544 1058 1565 1042 1565 1042 C 1568 1040 1571 1037 1570 1032 z\" id=\"_bla\"/> </g> <g id=\"SupplyCenterLayer\"> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_BUD\" width=\"20\" x=\"891.5\" y=\"905.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_TRI\" width=\"20\" x=\"785.5\" y=\"964.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_VIE\" width=\"20\" x=\"826.5\" y=\"876.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_EDI\" width=\"20\" x=\"480.5\" y=\"554.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_LON\" width=\"20\" x=\"480.5\" y=\"706.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_LVP\" width=\"20\" x=\"449.5\" y=\"627.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_BRE\" width=\"20\" x=\"360.5\" y=\"788.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_MAR\" width=\"20\" x=\"553.5\" y=\"1007.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_PAR\" width=\"20\" x=\"509.5\" y=\"808.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_BER\" width=\"20\" x=\"774.5\" y=\"725.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_KIE\" width=\"20\" x=\"715.5\" y=\"674.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_MUN\" width=\"20\" x=\"721.5\" y=\"867.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_NAP\" width=\"20\" x=\"769.5\" y=\"1132.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_ROM\" width=\"20\" x=\"710.5\" y=\"1076.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_VEN\" width=\"20\" x=\"724.5\" y=\"960.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_MOS\" width=\"20\" x=\"1258.5\" y=\"573.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_SEV\" width=\"20\" x=\"1258.5\" y=\"962.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_STP\" width=\"20\" x=\"1104.5\" y=\"458.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_WAR\" width=\"20\" x=\"928.5\" y=\"737.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_ANK\" width=\"20\" x=\"1262.5\" y=\"1133.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_CON\" width=\"20\" x=\"1132.5\" y=\"1108.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_SMY\" width=\"20\" x=\"1123.5\" y=\"1211.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_BEL\" width=\"20\" x=\"566.5\" y=\"744.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_BUL\" width=\"20\" x=\"1004.5\" y=\"1067.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_DEN\" width=\"20\" x=\"758.5\" y=\"615.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_GRE\" width=\"20\" x=\"1014.5\" y=\"1226.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_HOL\" width=\"20\" x=\"621.5\" y=\"681.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_NWY\" width=\"20\" x=\"752.5\" y=\"452.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_POR\" width=\"20\" x=\"142.5\" y=\"1049.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_RUM\" width=\"20\" x=\"1074.5\" y=\"1003.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_SER\" width=\"20\" x=\"927.5\" y=\"1010.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_SPA\" width=\"20\" x=\"293.5\" y=\"1045.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_SWE\" width=\"20\" x=\"881.5\" y=\"478.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_TUN\" width=\"20\" x=\"638.5\" y=\"1271.0\"/> </g> <g id=\"OrderLayer\"> <g id=\"Layer2\">{renderedOrders2}</g> <g id=\"Layer1\">{renderedOrders}</g> </g> <g id=\"UnitLayer\">{renderedUnits}</g> <g id=\"DislodgedUnitLayer\">{renderedDislodgedUnits}</g> <g id=\"HighestOrderLayer\">{renderedHighestOrders}</g> <g className={classes['BriefLabelLayer']} id=\"BriefLabelLayer\"> <text x=\"649.4\" y=\"924.2\">SWI</text> <text className=\"labeltext18\" x=\"849.4\" y=\"1100.6\">ADR</text> <text x=\"1085.7\" y=\"1296.4\">AEG</text> <text className=\"labeltext18\" x=\"932.4\" y=\"1164.4\">ALB</text> <text x=\"1368.8\" y=\"1115.5\">ANK</text> <text className=\"labeltext18\" x=\"832.3\" y=\"1151.7\">APU</text> <text x=\"1603\" y=\"1145.3\">ARM</text> <text x=\"827.2\" y=\"660.2\">BAL</text> <text x=\"1077.8\" y=\"59.3\">BAR</text> <text className=\"labeltext18\" x=\"591.8\" y=\"796.2\">BEL</text> <text className=\"labeltext18\" x=\"760\" y=\"728\">BER</text> <text x=\"1319.8\" y=\"1034.6\">BLA</text> <text className=\"labeltext18\" x=\"800.4\" y=\"855.8\">BOH</text> <text className=\"labeltext18\" x=\"430\" y=\"866.4\">BRE</text> <text className=\"labeltext18\" x=\"953.7\" y=\"964.3\">BUD</text> <text className=\"labeltext18\" x=\"1021.8\" y=\"1109.1\">BUL</text> <text className=\"labeltext18\" x=\"530.1\" y=\"915.4\">BUR</text> <text className=\"labeltext18\" x=\"457.7\" y=\"479\">CLY</text> <text x=\"1202.8\" y=\"1177.2\">CON</text> <text x=\"718.2\" y=\"584.3\">DEN</text> <text x=\"1164.4\" y=\"1343.3\">EAS</text> <text className=\"labeltext18\" x=\"496\" y=\"500.3\">EDI</text> <text x=\"466.2\" y=\"762.6\">ENG</text> <text x=\"1030.3\" y=\"347\">FIN</text> <text className=\"labeltext18\" x=\"940.9\" y=\"840.9\">GAL</text> <text className=\"labeltext18\" x=\"447\" y=\"972.8\">GAS</text> <text className=\"labeltext18\" x=\"981.4\" y=\"1160.2\">GRE</text> <text x=\"929.6\" y=\"538.9\">BOT</text> <text x=\"525.8\" y=\"1107\">LYO</text> <text x=\"654.2\" y=\"665.4\">HEL</text> <text className=\"labeltext18\" x=\"608.8\" y=\"749.3\">HOL</text> <text x=\"894.1\" y=\"1251.7\">ION</text> <text x=\"318\" y=\"711.4\">IRI</text> <text className=\"labeltext18\" x=\"691.9\" y=\"753.6\">KIE</text> <text className=\"labeltext18\" x=\"500.3\" y=\"734.4\">LON</text> <text x=\"1030.3\" y=\"640.8\">LVN</text> <text className=\"labeltext18\" x=\"449.2\" y=\"564.1\">LVP</text> <text className=\"labeltext18\" x=\"572.6\" y=\"962.2\">MAR</text> <text x=\"153.3\" y=\"815.3\">MAO</text> <text x=\"1568.9\" y=\"572.6\">MOS</text> <text className=\"labeltext18\" x=\"681.2\" y=\"872.8\">MUN</text> <text x=\"240.6\" y=\"1317.7\">NAF</text> <text className=\"labeltext18\" x=\"832.3\" y=\"1211.3\">NAP</text> <text x=\"191.6\" y=\"268.2\">NAO</text> <text x=\"595.5\" y=\"512\">NTH</text> <text x=\"760\" y=\"391.7\">NWY</text> <text x=\"664.2\" y=\"161.8\">NWG</text> <text className=\"labeltext18\" x=\"481.1\" y=\"892\">PAR</text> <text className=\"labeltext18\" x=\"489.6\" y=\"802.5\">PIC</text> <text className=\"labeltext18\" x=\"628\" y=\"1004.8\">PIE</text> <text transform=\"translate(175.1 1102.1) rotate(-60)\" x=\"0\" y=\"0\">POR</text> <text className=\"labeltext18\" x=\"938.8\" y=\"687.6\">PRU</text> <text className=\"labeltext18\" transform=\"translate(729 1092) rotate(45)\" x=\"0\" y=\"0\">ROM</text> <text className=\"labeltext18\" x=\"632.2\" y=\"826\">RUH</text> <text className=\"labeltext18\" x=\"1036.7\" y=\"1015.4\">RUM</text> <text className=\"labeltext18\" x=\"964.3\" y=\"1100.6\">SER</text> <text x=\"1479.3\" y=\"937.7\">SEV</text> <text className=\"labeltext18\" x=\"791.9\" y=\"779.1\">SIL</text> <text transform=\"translate(754.5 571.2) rotate(75)\" x=\"0\" y=\"0\">SKA</text> <text x=\"1194.2\" y=\"1247.5\">SMY</text> <text x=\"302.3\" y=\"1119.7\">SPA</text> <text x=\"1473.1\" y=\"217.1\">STP</text> <text x=\"845.1\" y=\"391.7\">SWE</text> <text x=\"1639.2\" y=\"1292.2\">SYR</text> <text className=\"labeltext18\" x=\"826\" y=\"966.5\">TRI</text> <text x=\"634.4\" y=\"1351.8\">TUN</text> <text className=\"labeltext18\" x=\"706.5\" y=\"1069\">TUS</text> <text className=\"labeltext18\" x=\"717.4\" y=\"936.7\">TYR</text> <text x=\"710\" y=\"1209.1\">TYS</text> <text x=\"1119.7\" y=\"860\">UKR</text> <text className=\"labeltext18\" x=\"749.3\" y=\"962.2\">VEN</text> <text className=\"labeltext18\" x=\"834.5\" y=\"919.6\">VIE</text> <text className=\"labeltext18\" x=\"436.4\" y=\"719.5\">WAL</text> <text className=\"labeltext18\" x=\"938.8\" y=\"783.4\">WAR</text> <text x=\"400.2\" y=\"1209.1\">WES</text> <text className=\"labeltext18\" x=\"496\" y=\"653.5\">YOR</text> </g> <rect className=\"currentnoterect\" height=\"70\" width=\"750\" x=\"25\" y=\"25\"/> <text className={classes['CurrentNote']} id=\"CurrentNote\" x=\"35\" y=\"50\">{nb_centers_per_power ? nb_centers_per_power : ''}</text> <text className={classes['CurrentNote2']} id=\"CurrentNote2\" x=\"35\" y=\"85\">{note ? note : ''}</text> <text className={classes['CurrentPhase']} id=\"CurrentPhase\" x=\"1650\" y=\"1325\">{current_phase}</text> <g className={classes['MouseLayer']} id=\"MouseLayer\" transform=\"translate(-195 -170)\"> <g id=\"con\" onClick={this.onClick} onMouseOver={this.onHover}> <path d=\"M 1331 1267 C 1320 1272 1310 1264 1298 1274 C 1289 1282 1298 1291 1291 1305 C 1289 1310 1284 1314 1287 1316 C 1289 1319 1295 1316 1303 1317 C 1303 1317 1303 1319 1303 1319 C 1299 1321 1292 1327 1290 1332 C 1294 1330 1296 1329 1297 1324 C 1297 1324 1323 1304 1323 1304 C 1323 1304 1337 1298 1337 1298 C 1337 1298 1356 1294 1356 1294 C 1356 1294 1340 1282 1340 1282 C 1340 1282 1331 1267 1331 1267 z M 1414 1284 C 1414 1284 1389 1288 1389 1288 C 1389 1288 1375 1292 1375 1292 C 1372 1292 1361 1293 1364 1299 C 1366 1301 1376 1303 1380 1304 C 1380 1304 1380 1306 1380 1306 C 1380 1306 1367 1310 1367 1310 C 1367 1310 1357 1315 1357 1315 C 1357 1315 1348 1318 1348 1318 C 1341 1321 1342 1326 1329 1326 C 1322 1326 1314 1323 1308 1328 C 1304 1331 1290 1344 1288 1349 C 1287 1351 1287 1353 1288 1356 C 1296 1354 1305 1345 1307 1359 C 1307 1359 1307 1364 1307 1364 C 1311 1361 1315 1355 1319 1355 C 1323 1354 1328 1358 1331 1360 C 1335 1363 1340 1364 1345 1365 C 1355 1366 1363 1362 1368 1361 C 1374 1361 1378 1364 1383 1365 C 1389 1365 1393 1361 1400 1361 C 1405 1361 1407 1361 1412 1362 C 1414 1363 1418 1364 1419 1363 C 1422 1362 1424 1355 1424 1352 C 1429 1337 1427 1328 1422 1314 C 1422 1314 1416 1297 1416 1297 C 1415 1292 1416 1288 1414 1284 z M 1346 1295 C 1346 1295 1346 1296 1346 1296 C 1346 1296 1345 1295 1345 1295 C 1345 1295 1346 1295 1346 1295 z\"/> <path d=\"M 1348 1283 C 1350 1286 1356 1290 1357 1292 C 1359 1297 1352 1298 1349 1299 C 1334 1302 1327 1302 1314 1313 C 1314 1313 1297 1329 1297 1329 C 1294 1332 1292 1335 1287 1333 C 1282 1339 1281 1340 1285 1347 C 1291 1341 1304 1327 1311 1323 C 1318 1320 1324 1326 1335 1323 C 1341 1321 1342 1318 1347 1316 C 1347 1316 1357 1312 1357 1312 C 1357 1312 1366 1308 1366 1308 C 1366 1308 1375 1305 1375 1305 C 1371 1303 1366 1304 1363 1301 C 1359 1297 1363 1291 1371 1290 C 1366 1279 1358 1276 1348 1283 z\"/> </g> <g id=\"den\" onClick={this.onClick} onMouseOver={this.onHover}> <path d=\"M 939 716 C 933 720 923 725 917 728 C 912 729 904 731 900 734 C 896 737 895 742 894 746 C 892 754 888 769 889 777 C 891 785 894 784 894 796 C 899 796 912 796 916 798 C 919 794 919 789 920 784 C 922 779 927 774 930 770 C 932 768 934 767 936 766 C 938 766 942 768 943 763 C 943 757 933 755 934 747 C 934 743 938 738 940 734 C 943 728 943 721 939 716 z M 946 786 C 951 798 951 796 959 805 C 962 809 962 810 967 813 C 967 813 969 804 969 804 C 971 802 974 800 974 797 C 975 795 973 791 972 788 C 970 782 972 777 964 775 C 963 775 959 775 958 775 C 954 776 955 780 946 786 z M 944 812 C 943 813 943 815 943 816 C 942 826 959 823 952 815 C 951 815 950 814 949 814 C 947 813 946 812 944 812 z\"/> <path d=\"M 919 800 C 926 804 928 807 932 813 C 935 817 938 823 943 825 C 950 828 962 823 967 818 C 970 816 973 811 975 808 C 978 805 980 801 981 797 C 982 787 978 782 976 773 C 976 773 965 771 965 771 C 965 771 943 769 943 769 C 943 769 935 769 935 769 C 935 769 926 778 926 778 C 926 778 922 786 922 786 C 922 786 919 800 919 800 z M 966 815 C 961 812 959 809 955 805 C 952 802 945 792 944 788 C 944 785 947 783 949 781 C 953 777 955 772 961 772 C 973 772 972 779 975 788 C 976 792 978 795 976 799 C 975 805 969 810 966 815 z M 957 821 C 954 822 952 823 949 823 C 935 824 939 804 951 812 C 952 813 953 814 954 815 C 956 817 956 819 957 821 z\"/> </g> <path d=\"M 1424 1364 C 1437 1361 1448 1353 1459 1346 C 1464 1343 1470 1337 1475 1336 C 1482 1334 1492 1338 1499 1340 C 1510 1342 1518 1341 1528 1336 C 1544 1328 1555 1307 1575 1297 C 1587 1291 1598 1293 1611 1293 C 1614 1293 1621 1292 1624 1292 C 1646 1286 1638 1257 1637 1241 C 1618 1244 1604 1253 1583 1253 C 1566 1253 1565 1248 1554 1246 C 1553 1247 1553 1248 1551 1248 C 1548 1249 1541 1242 1538 1240 C 1535 1242 1529 1247 1526 1246 C 1521 1245 1517 1235 1511 1235 C 1507 1236 1507 1239 1497 1241 C 1483 1243 1471 1243 1457 1249 C 1450 1253 1440 1261 1435 1266 C 1433 1268 1421 1282 1420 1284 C 1419 1286 1419 1290 1419 1292 C 1419 1300 1423 1305 1425 1312 C 1428 1318 1430 1326 1431 1333 C 1432 1342 1427 1355 1424 1364 z\" id=\"ank\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1671 1218 C 1663 1226 1648 1237 1638 1240 C 1638 1240 1641 1241 1641 1241 C 1641 1241 1643 1272 1643 1272 C 1642 1279 1638 1298 1639 1303 C 1641 1311 1648 1312 1652 1318 C 1658 1325 1657 1329 1657 1337 C 1657 1337 1708 1337 1708 1337 C 1708 1337 1720 1338 1720 1338 C 1720 1338 1730 1338 1730 1338 C 1730 1338 1825 1348 1825 1348 C 1825 1348 1837 1349 1837 1349 C 1837 1349 1845 1349 1845 1349 C 1853 1349 1867 1347 1874 1345 C 1892 1339 1913 1320 1927 1307 C 1927 1307 1956 1280 1956 1280 C 1956 1280 1938 1277 1938 1277 C 1922 1273 1905 1266 1896 1251 C 1894 1251 1890 1252 1888 1252 C 1883 1251 1872 1247 1869 1242 C 1868 1240 1867 1220 1858 1221 C 1853 1221 1846 1232 1843 1236 C 1833 1248 1822 1262 1805 1261 C 1784 1260 1786 1252 1767 1252 C 1767 1252 1753 1252 1753 1252 C 1753 1252 1736 1251 1736 1251 C 1727 1251 1722 1253 1713 1250 C 1697 1243 1680 1223 1671 1218 z\" id=\"arm\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 2022 319 C 2022 319 1994 345 1994 345 C 1994 345 1970 368 1970 368 C 1929 405 1867 454 1820 484 C 1791 502 1771 510 1741 525 C 1741 525 1716 539 1716 539 C 1708 544 1703 547 1694 551 C 1679 557 1664 558 1648 562 C 1618 570 1610 579 1590 585 C 1590 585 1546 593 1546 593 C 1535 596 1530 601 1521 607 C 1512 612 1496 620 1487 623 C 1468 629 1453 625 1434 632 C 1418 639 1408 654 1405 671 C 1404 678 1406 690 1401 696 C 1391 707 1376 685 1365 691 C 1360 693 1356 701 1353 706 C 1348 713 1340 724 1334 730 C 1321 742 1301 741 1284 741 C 1284 754 1279 767 1278 772 C 1278 777 1279 780 1280 784 C 1280 792 1276 793 1276 804 C 1276 804 1278 828 1278 828 C 1278 838 1278 846 1268 851 C 1264 853 1259 854 1255 856 C 1255 856 1242 870 1242 870 C 1242 870 1228 882 1228 882 C 1226 883 1222 886 1221 888 C 1220 891 1222 897 1223 900 C 1225 911 1226 909 1229 918 C 1229 918 1234 935 1234 935 C 1237 932 1238 930 1242 927 C 1247 925 1271 918 1278 916 C 1278 916 1353 897 1353 897 C 1364 894 1385 889 1396 889 C 1401 889 1407 889 1412 890 C 1415 890 1424 892 1427 892 C 1432 891 1438 885 1448 884 C 1448 884 1481 888 1481 888 C 1490 888 1497 888 1502 880 C 1506 873 1508 855 1519 855 C 1525 855 1535 862 1541 865 C 1551 869 1556 870 1567 870 C 1579 870 1580 865 1588 866 C 1593 867 1602 869 1606 872 C 1617 879 1623 900 1636 913 C 1647 924 1652 919 1660 927 C 1667 936 1662 948 1673 958 C 1678 962 1688 966 1694 968 C 1707 974 1719 977 1732 984 C 1748 993 1759 1009 1770 1017 C 1771 1015 1771 1011 1773 1010 C 1776 1008 1778 1010 1780 1010 C 1784 1009 1786 1005 1788 1002 C 1791 996 1789 991 1793 985 C 1797 977 1808 967 1815 960 C 1815 960 1828 941 1828 941 C 1834 935 1842 931 1849 928 C 1863 923 1881 917 1889 934 C 1892 941 1895 955 1895 963 C 1895 969 1896 975 1892 980 C 1887 988 1878 987 1874 997 C 1869 1008 1879 1013 1874 1020 C 1869 1028 1858 1029 1854 1040 C 1866 1041 1876 1045 1885 1053 C 1892 1060 1891 1065 1895 1067 C 1897 1067 1900 1067 1902 1067 C 1907 1067 1909 1070 1916 1068 C 1920 1068 1926 1064 1930 1065 C 1936 1066 1936 1072 1936 1077 C 1936 1088 1935 1099 1947 1105 C 1947 1096 1946 1088 1954 1081 C 1957 1079 1960 1079 1964 1080 C 1969 1081 1975 1087 1980 1090 C 1985 1093 1994 1094 1997 1100 C 1999 1105 1996 1111 1994 1115 C 1987 1126 1985 1124 1975 1127 C 1973 1128 1969 1130 1967 1130 C 1965 1130 1961 1128 1959 1127 C 1959 1138 1964 1147 1970 1156 C 1976 1153 1983 1143 1989 1143 C 1991 1142 1993 1143 1993 1145 C 1993 1148 1990 1151 1990 1154 C 1989 1160 1993 1158 1988 1166 C 1988 1166 2007 1175 2007 1175 C 2007 1175 2013 1183 2013 1183 C 2013 1183 2022 1217 2022 1217 C 2022 1217 2023 1195 2023 1195 C 2023 1195 2023 1149 2023 1149 C 2023 1149 2023 990 2023 990 C 2023 990 2023 516 2023 516 C 2023 516 2023 378 2023 378 C 2023 378 2023 338 2023 338 C 2023 338 2022 319 2022 319 z\" id=\"mos\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1364 1100 C 1367 1100 1372 1102 1374 1101 C 1376 1101 1381 1094 1383 1092 C 1389 1087 1394 1085 1401 1084 C 1404 1083 1410 1082 1413 1084 C 1419 1086 1415 1090 1411 1091 C 1411 1091 1406 1092 1406 1092 C 1408 1094 1410 1099 1412 1100 C 1422 1108 1442 1099 1446 1098 C 1450 1098 1453 1101 1452 1105 C 1452 1110 1446 1112 1442 1115 C 1437 1118 1435 1122 1434 1128 C 1439 1129 1450 1131 1453 1135 C 1457 1140 1451 1155 1464 1157 C 1466 1157 1467 1157 1469 1156 C 1474 1154 1480 1144 1485 1140 C 1491 1136 1499 1137 1499 1127 C 1503 1126 1504 1126 1508 1126 C 1508 1126 1512 1126 1512 1126 C 1514 1126 1518 1126 1519 1124 C 1521 1122 1520 1115 1516 1113 C 1509 1111 1504 1119 1499 1120 C 1490 1122 1478 1109 1471 1104 C 1469 1103 1461 1101 1461 1098 C 1460 1095 1464 1094 1466 1093 C 1474 1090 1479 1088 1486 1083 C 1486 1083 1512 1061 1512 1061 C 1512 1061 1549 1043 1549 1043 C 1549 1043 1564 1033 1564 1033 C 1566 1032 1569 1030 1571 1031 C 1575 1033 1571 1039 1569 1041 C 1569 1041 1543 1061 1543 1061 C 1545 1064 1546 1066 1549 1067 C 1552 1067 1556 1066 1557 1070 C 1558 1073 1557 1077 1556 1080 C 1556 1080 1549 1097 1549 1097 C 1548 1102 1549 1109 1544 1112 C 1540 1115 1536 1112 1530 1111 C 1531 1119 1535 1119 1542 1122 C 1542 1122 1554 1126 1554 1126 C 1554 1126 1571 1130 1571 1130 C 1584 1134 1594 1138 1605 1145 C 1613 1150 1620 1157 1628 1160 C 1640 1166 1653 1164 1664 1171 C 1672 1176 1682 1188 1681 1198 C 1680 1204 1676 1209 1677 1212 C 1678 1216 1690 1226 1693 1228 C 1699 1234 1710 1242 1718 1245 C 1724 1246 1727 1244 1734 1244 C 1734 1244 1749 1246 1749 1246 C 1756 1246 1759 1245 1765 1245 C 1782 1244 1789 1254 1804 1255 C 1820 1256 1831 1242 1840 1230 C 1844 1224 1849 1215 1857 1214 C 1866 1213 1872 1224 1873 1231 C 1874 1233 1874 1237 1875 1239 C 1878 1244 1887 1246 1892 1245 C 1890 1239 1886 1229 1886 1223 C 1886 1218 1889 1218 1889 1212 C 1889 1203 1883 1184 1891 1178 C 1895 1175 1899 1174 1903 1173 C 1900 1167 1894 1170 1888 1169 C 1883 1168 1880 1166 1876 1163 C 1876 1163 1855 1144 1855 1144 C 1847 1139 1843 1139 1839 1136 C 1839 1136 1831 1128 1831 1128 C 1824 1122 1818 1118 1811 1110 C 1799 1097 1803 1092 1796 1084 C 1793 1079 1788 1075 1782 1073 C 1778 1071 1774 1071 1772 1068 C 1769 1064 1768 1055 1768 1051 C 1768 1051 1769 1035 1769 1035 C 1769 1027 1769 1028 1770 1020 C 1765 1019 1762 1014 1759 1011 C 1759 1011 1738 992 1738 992 C 1724 982 1708 978 1692 971 C 1685 968 1674 964 1668 958 C 1660 948 1662 936 1658 930 C 1655 926 1651 926 1646 924 C 1642 922 1639 920 1636 917 C 1628 909 1623 901 1617 892 C 1614 886 1609 877 1603 874 C 1599 871 1587 869 1582 870 C 1578 871 1576 873 1569 874 C 1559 875 1550 873 1541 868 C 1535 866 1522 857 1516 860 C 1513 861 1512 865 1510 868 C 1507 875 1506 882 1500 888 C 1488 897 1465 889 1451 888 C 1446 888 1433 891 1431 896 C 1430 898 1431 902 1432 904 C 1432 908 1434 917 1434 921 C 1434 921 1429 938 1429 938 C 1426 958 1424 989 1411 1006 C 1404 1015 1391 1024 1381 1029 C 1381 1029 1367 1035 1367 1035 C 1363 1038 1362 1041 1359 1045 C 1359 1045 1350 1058 1350 1058 C 1348 1063 1348 1065 1344 1070 C 1340 1074 1335 1079 1330 1083 C 1328 1085 1323 1088 1322 1090 C 1321 1092 1324 1103 1325 1107 C 1325 1115 1320 1130 1329 1140 C 1334 1144 1339 1142 1344 1141 C 1347 1140 1356 1139 1357 1137 C 1359 1136 1360 1132 1361 1130 C 1362 1126 1368 1116 1369 1113 C 1369 1108 1365 1107 1364 1100 z\" id=\"sev\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1586 175 C 1590 180 1597 184 1598 190 C 1599 194 1597 196 1597 201 C 1598 204 1601 211 1595 211 C 1590 211 1588 204 1581 201 C 1578 207 1576 215 1572 220 C 1566 226 1562 224 1556 230 C 1551 236 1552 242 1550 245 C 1549 248 1547 248 1546 251 C 1544 254 1543 262 1543 266 C 1541 271 1539 277 1539 282 C 1540 291 1546 299 1547 308 C 1542 306 1541 303 1538 299 C 1530 288 1528 274 1530 261 C 1532 255 1537 239 1528 236 C 1525 235 1522 237 1522 240 C 1520 245 1523 248 1521 258 C 1520 257 1518 255 1516 255 C 1513 255 1511 258 1510 260 C 1506 265 1503 270 1500 276 C 1495 286 1493 293 1491 304 C 1490 311 1493 316 1489 322 C 1483 334 1471 334 1460 329 C 1456 328 1452 326 1449 323 C 1441 312 1463 307 1455 295 C 1450 288 1442 289 1434 288 C 1429 287 1424 286 1419 289 C 1428 296 1432 302 1434 313 C 1435 318 1436 327 1438 331 C 1440 335 1443 334 1446 337 C 1449 339 1451 342 1452 346 C 1453 351 1454 365 1449 368 C 1447 369 1445 369 1443 369 C 1438 369 1431 368 1426 372 C 1423 374 1418 386 1413 392 C 1410 396 1402 404 1403 409 C 1404 413 1409 416 1412 419 C 1416 422 1418 424 1421 428 C 1431 438 1435 433 1443 436 C 1445 437 1450 439 1448 442 C 1446 446 1437 443 1434 442 C 1426 441 1420 441 1412 441 C 1403 441 1398 443 1388 440 C 1381 438 1374 430 1369 433 C 1366 435 1366 440 1367 443 C 1368 448 1372 454 1377 455 C 1382 457 1385 454 1391 460 C 1396 466 1398 468 1392 474 C 1391 475 1390 477 1388 477 C 1384 479 1372 473 1368 471 C 1361 468 1352 467 1346 461 C 1343 457 1341 452 1338 448 C 1336 444 1331 439 1330 434 C 1328 428 1331 419 1326 414 C 1324 411 1319 411 1314 408 C 1314 408 1303 400 1303 400 C 1297 395 1296 396 1289 389 C 1288 387 1283 382 1286 380 C 1289 376 1295 385 1302 386 C 1302 386 1313 386 1313 386 C 1313 386 1322 390 1322 390 C 1329 391 1351 394 1358 394 C 1365 394 1378 395 1384 392 C 1395 387 1409 365 1406 352 C 1405 349 1394 336 1392 334 C 1383 327 1369 324 1358 321 C 1358 321 1313 304 1313 304 C 1303 303 1291 306 1284 306 C 1281 306 1272 304 1272 300 C 1272 297 1275 298 1276 291 C 1272 290 1267 289 1263 292 C 1257 296 1255 305 1252 312 C 1250 316 1246 322 1243 326 C 1241 329 1238 333 1237 336 C 1236 339 1237 344 1237 347 C 1240 361 1249 363 1251 372 C 1251 372 1253 396 1253 396 C 1254 406 1256 416 1258 426 C 1262 439 1275 471 1280 483 C 1287 498 1297 513 1297 530 C 1297 540 1292 539 1292 553 C 1292 553 1293 561 1293 561 C 1293 574 1286 587 1279 598 C 1276 603 1269 613 1272 619 C 1276 624 1284 623 1289 625 C 1293 626 1297 629 1300 631 C 1292 639 1293 635 1285 636 C 1285 636 1273 641 1273 641 C 1268 643 1266 651 1262 655 C 1258 658 1254 658 1249 658 C 1249 658 1226 656 1226 656 C 1214 656 1205 659 1194 665 C 1200 677 1215 678 1227 678 C 1232 678 1239 677 1243 678 C 1255 680 1256 690 1262 698 C 1267 705 1272 707 1276 712 C 1282 718 1284 729 1284 737 C 1301 737 1320 739 1334 726 C 1343 717 1349 705 1356 695 C 1360 690 1364 685 1371 686 C 1377 687 1383 692 1390 694 C 1393 695 1396 695 1398 693 C 1401 691 1401 683 1401 680 C 1401 673 1402 667 1404 661 C 1414 632 1438 623 1466 623 C 1484 623 1504 613 1519 604 C 1531 597 1535 592 1550 588 C 1550 588 1590 581 1590 581 C 1590 581 1643 560 1643 560 C 1643 560 1693 548 1693 548 C 1702 544 1709 539 1717 534 C 1717 534 1736 524 1736 524 C 1736 524 1795 495 1795 495 C 1825 477 1854 457 1882 436 C 1909 416 1934 395 1959 373 C 1959 373 1978 356 1978 356 C 1978 356 2008 328 2008 328 C 2012 324 2017 317 2023 316 C 2023 316 2023 175 2023 175 C 2023 175 1586 175 1586 175 z\" id=\"stp\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1279 598 C 1276 603 1269 613 1272 619 C 1276 624 1284 623 1289 625 C 1293 626 1297 629 1300 631 C 1292 639 1293 635 1285 636 C 1285 636 1273 641 1273 641 C 1268 643 1266 651 1262 655 C 1258 658 1254 658 1249 658 C 1249 658 1226 656 1226 656 C 1214 656 1205 659 1194 665 C 1200 677 1215 678 1227 678 C 1232 678 1239 677 1243 678 C 1255 680 1256 690 1262 698 C 1267 705 1272 707 1276 712 C 1282 718 1284 729 1284 737 C 1301 737 1320 739 1334 726 C 1343 717 1349 705 1356 695 C 1360 690 1364 685 1371 686 C 1377 687 1383 692 1390 694 C 1393 695 1396 695 1398 693 C 1401 691 1401 683 1401 680 C 1401 673 1402 667 1404 661 C 1414 632 1340.57 568.188 1340.57 568.188 C 1340.57 568.188 1286 587 1279 598 z\" id=\"stp-sc\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1768.68 297.625 C 1760.48 338.063 1829.46 251.188 1842.41 241.75 C 1842.41 241.75 2023 175 2023 175 C 2023 175 1586 175 1586 175 C 1590 180 1597 184 1598 190 C 1599 194 1597 196 1597 201 C 1598 204 1601 211 1595 211 C 1590 211 1588 204 1581 201 C 1578 207 1576 215 1572 220 C 1566 226 1562 224 1556 230 C 1551 236 1552 242 1550 245 C 1549 248 1547 248 1546 251 C 1544 254 1543 262 1543 266 C 1541 271 1539 277 1539 282 C 1540 291 1546 299 1547 308 C 1542 306 1541 303 1538 299 C 1530 288 1528 274 1530 261 C 1532 255 1537 239 1528 236 C 1525 235 1522 237 1522 240 C 1520 245 1523 248 1521 258 C 1520 257 1518 255 1516 255 C 1513 255 1511 258 1510 260 C 1506 265 1503 270 1500 276 C 1495 286 1493 293 1491 304 C 1490 311 1493 316 1489 322 C 1483 334 1471 334 1460 329 C 1456 328 1452 326 1449 323 C 1441 312 1463 307 1455 295 C 1450 288 1442 289 1434 288 C 1429 287 1424 286 1419 289 C 1428 296 1432 302 1434 313 C 1435 318 1436 327 1438 331 C 1440 335 1443 334 1446 337 C 1449 339 1451 342 1452 346 C 1453 351 1454 365 1449 368 C 1447 369 1445 369 1443 369 C 1438 369 1431 368 1426 372 C 1423 374 1418 386 1413 392 C 1410 396 1402 404 1403 409 C 1404 413 1409 416 1412 419 C 1416 422 1418 424 1421 428 C 1431 438 1435 433 1443 436 C 1445 437 1450 439 1448 442 C 1446 446 1437 443 1434 442 C 1426 441 1420 441 1412 441 C 1403 441 1398 443 1388 440 C 1381 438 1374 430 1369 433 C 1366 435 1366 440 1367 443 C 1368 448 1372 454 1377 455 C 1382 457 1385 454 1391 460 C 1396 466 1398 468 1392 474 C 1391 475 1390 477 1388 477 C 1384 479 1372 473 1368 471 C 1361 468 1352 467 1346 461 C 1343 457 1341 452 1338 448 C 1336 444 1331 439 1330 434 C 1328 428 1331 419 1326 414 C 1324 411 1319 411 1314 408 C 1314 408 1303 400 1303 400 C 1297 395 1296 396 1289 389 C 1288 387 1283 382 1286 380 C 1289 376 1295 385 1302 386 C 1302 386 1313 386 1313 386 C 1313 386 1322 390 1322 390 C 1329 391 1351 394 1358 394 C 1365 394 1378 395 1384 392 C 1395 387 1409 365 1406 352 C 1405 349 1394 336 1392 334 C 1383 327 1369 324 1358 321 C 1358 321 1313 304 1313 304 C 1303 303 1291 306 1284 306 C 1281 306 1272 304 1272 300 C 1272 297 1275 298 1276 291 C 1272 290 1267 289 1263 292 C 1257 296 1255 305 1252 312 C 1250 316 1246 322 1243 326 C 1241 329 1238 333 1237 336 C 1236 339 1237 344 1237 347 C 1240 361 1249 363 1251 372 C 1251 372 1253 396 1253 396 C 1254 406 1256 416 1258 426 C 1262 439 1275 471 1280 483 C 1287 498 1297 513 1297 530 C 1297 540 1462.17 478.25 1462.17 492.25 C 1467.38 490.563 1602.09 407.438 1595.15 407.438 C 1593.41 422.125 1728.8 338.938 1721.8 349.938\" id=\"stp-nc\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 2022 1247 C 2020 1256 2012 1263 2005 1268 C 1988 1280 1980 1283 1959 1280 C 1958 1285 1953 1287 1950 1290 C 1950 1290 1934 1305 1934 1305 C 1918 1320 1892 1344 1871 1350 C 1862 1352 1859 1351 1850 1352 C 1850 1352 1842 1353 1842 1353 C 1842 1353 1831 1352 1831 1352 C 1798 1352 1766 1345 1733 1342 C 1709 1340 1683 1341 1659 1341 C 1645 1341 1636 1348 1624 1353 C 1614 1358 1609 1356 1600 1365 C 1591 1374 1592 1381 1588 1392 C 1582 1405 1577 1410 1576 1412 C 1576 1412 1574 1420 1574 1420 C 1574 1420 1568 1433 1568 1433 C 1568 1433 1572 1437 1572 1437 C 1572 1437 1573 1459 1573 1459 C 1580 1460 1579 1463 1579 1468 C 1579 1468 1581 1475 1581 1475 C 1583 1484 1582 1484 1582 1492 C 1582 1492 1584 1509 1584 1509 C 1584 1509 1584 1527 1584 1527 C 1584 1527 2023 1527 2023 1527 C 2023 1527 2023 1330 2023 1330 C 2023 1330 2023 1273 2023 1273 C 2023 1273 2022 1247 2022 1247 z\" id=\"syr\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 778 1102 C 786 1104 791 1096 798 1099 C 809 1103 801 1114 814 1113 C 822 1111 825 1108 834 1112 C 842 1114 846 1121 851 1120 C 856 1120 857 1113 865 1112 C 870 1111 883 1114 886 1111 C 890 1109 890 1101 888 1098 C 887 1097 885 1094 884 1093 C 880 1089 877 1086 874 1081 C 868 1070 869 1061 853 1061 C 853 1061 827 1063 827 1063 C 823 1063 818 1063 814 1065 C 811 1066 797 1081 793 1085 C 793 1085 786 1092 786 1092 C 782 1096 780 1095 778 1102 z\" id=\"swi\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1275 1047 C 1293 1047 1303 1065 1311 1078 C 1311 1078 1318 1088 1318 1088 C 1324 1084 1337 1074 1341 1068 C 1344 1064 1344 1062 1347 1058 C 1347 1058 1362 1035 1362 1035 C 1367 1030 1371 1029 1377 1027 C 1383 1024 1390 1020 1395 1017 C 1415 1003 1417 987 1421 965 C 1421 965 1426 935 1426 935 C 1428 924 1431 925 1429 912 C 1429 909 1427 899 1425 897 C 1424 895 1419 895 1417 894 C 1409 893 1402 893 1394 893 C 1383 893 1365 898 1354 901 C 1354 901 1275 921 1275 921 C 1275 921 1257 926 1257 926 C 1249 928 1241 929 1237 938 C 1234 947 1237 953 1233 965 C 1232 968 1229 973 1230 976 C 1233 983 1249 989 1256 995 C 1266 1005 1275 1025 1275 1039 C 1275 1039 1275 1047 1275 1047 z\" id=\"ukr\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1190 668 C 1187 675 1186 680 1189 688 C 1192 699 1199 697 1203 702 C 1206 705 1206 708 1206 711 C 1207 719 1207 731 1204 738 C 1202 742 1197 749 1192 747 C 1185 745 1175 723 1164 725 C 1159 726 1157 731 1155 735 C 1151 744 1145 758 1145 767 C 1145 770 1145 777 1146 780 C 1148 782 1152 782 1157 789 C 1159 794 1160 800 1165 803 C 1171 808 1178 805 1185 815 C 1191 823 1191 835 1188 844 C 1187 848 1184 853 1185 857 C 1188 866 1202 873 1209 879 C 1212 881 1214 883 1217 886 C 1225 881 1236 871 1243 864 C 1243 864 1251 855 1251 855 C 1257 849 1263 850 1268 848 C 1275 843 1274 833 1274 826 C 1274 817 1271 810 1272 801 C 1273 796 1276 793 1276 786 C 1276 780 1273 778 1274 771 C 1274 771 1278 757 1278 757 C 1280 747 1281 732 1278 722 C 1274 710 1266 710 1260 701 C 1255 695 1253 686 1246 682 C 1240 679 1231 682 1224 682 C 1218 682 1207 680 1202 677 C 1198 675 1194 671 1190 668 z\" id=\"lvn\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1180 860 C 1162 885 1123 876 1100 892 C 1073 911 1079 940 1096 963 C 1098 966 1107 976 1109 978 C 1113 981 1125 983 1130 983 C 1138 983 1146 978 1152 973 C 1155 970 1157 966 1160 965 C 1167 962 1176 971 1186 973 C 1200 977 1205 969 1213 967 C 1218 967 1222 970 1226 972 C 1230 962 1231 958 1232 947 C 1232 942 1228 923 1226 918 C 1226 918 1221 908 1221 908 C 1219 901 1219 894 1214 888 C 1209 881 1201 878 1194 873 C 1189 869 1186 863 1180 860 z\" id=\"war\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1146 788 C 1147 796 1148 812 1141 817 C 1137 821 1131 817 1127 821 C 1125 824 1125 827 1123 830 C 1122 833 1119 836 1116 838 C 1109 843 1100 847 1093 840 C 1090 837 1090 835 1090 831 C 1087 831 1083 830 1080 830 C 1069 831 1058 838 1048 842 C 1031 848 1028 850 1010 853 C 1010 853 1014 883 1014 883 C 1016 891 1018 893 1019 898 C 1021 904 1019 909 1022 912 C 1025 915 1030 916 1033 916 C 1033 916 1061 918 1061 918 C 1064 918 1072 919 1074 917 C 1074 917 1081 904 1081 904 C 1085 896 1092 890 1099 885 C 1111 878 1130 875 1144 872 C 1154 870 1164 868 1172 861 C 1176 857 1179 851 1181 846 C 1182 841 1183 839 1183 834 C 1183 834 1183 830 1183 830 C 1183 824 1182 818 1177 815 C 1172 812 1168 814 1161 808 C 1151 799 1155 792 1146 788 z\" id=\"pru\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 960 935 C 960 935 970 964 970 964 C 970 964 997 957 997 957 C 1004 956 1012 954 1019 956 C 1029 960 1036 969 1044 975 C 1053 982 1055 981 1065 984 C 1080 989 1090 995 1104 983 C 1104 983 1088 962 1088 962 C 1079 949 1075 937 1075 921 C 1075 921 1039 921 1039 921 C 1039 921 1027 919 1027 919 C 1027 919 1019 916 1019 916 C 1019 916 1012 921 1012 921 C 1012 921 1002 926 1002 926 C 1002 926 960 935 960 935 z\" id=\"sil\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 939 938 C 939 938 969 929 969 929 C 969 929 1001 923 1001 923 C 1001 923 1017 913 1017 913 C 1017 913 1016 899 1016 899 C 1016 899 1010 884 1010 884 C 1008 875 1007 862 1007 853 C 1001 852 995 851 990 847 C 988 846 985 843 986 840 C 987 838 988 837 989 836 C 988 835 987 834 985 833 C 980 832 966 839 959 841 C 955 842 949 842 947 845 C 947 845 943 868 943 868 C 941 880 936 900 936 912 C 936 920 936 931 939 938 z\" id=\"ber\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 823 916 C 842 925 854 923 872 938 C 878 944 883 947 888 954 C 890 956 892 960 895 960 C 899 961 903 956 906 954 C 913 949 918 950 927 945 C 929 943 933 941 933 939 C 935 937 934 934 933 932 C 933 932 932 918 932 918 C 932 913 932 912 933 908 C 933 908 936 886 936 886 C 938 874 942 860 942 848 C 942 848 926 848 926 848 C 928 845 933 839 933 836 C 932 832 926 829 923 825 C 918 818 915 812 915 803 C 915 803 900 803 900 803 C 898 803 894 803 893 804 C 889 807 893 819 893 823 C 893 826 891 839 890 842 C 889 844 888 846 886 848 C 876 857 871 837 859 845 C 855 848 856 853 856 858 C 856 869 852 871 849 880 C 848 884 848 889 845 893 C 838 904 826 902 823 916 z\" id=\"kie\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 822 920 C 820 928 819 933 815 940 C 813 943 810 948 810 951 C 809 957 817 969 815 978 C 813 984 810 984 808 988 C 805 998 813 1013 817 1015 C 821 1017 831 1013 834 1010 C 838 1007 841 1000 844 996 C 849 989 856 980 864 976 C 873 971 877 974 884 971 C 886 970 890 968 891 966 C 892 962 882 952 879 949 C 863 933 857 932 837 925 C 837 925 822 920 822 920 z\" id=\"ruh\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 820 1020 C 820 1020 824 1031 824 1031 C 824 1031 821 1045 821 1045 C 821 1045 819 1058 819 1058 C 829 1058 833 1058 843 1057 C 847 1056 855 1054 859 1054 C 865 1055 868 1059 872 1060 C 875 1062 879 1060 883 1062 C 887 1064 889 1067 894 1068 C 894 1068 919 1066 919 1066 C 932 1066 937 1066 950 1069 C 950 1065 948 1059 950 1055 C 952 1049 956 1049 960 1047 C 967 1043 966 1040 975 1039 C 974 1033 971 1029 967 1024 C 967 1024 948 1001 948 1001 C 942 993 938 985 947 976 C 949 975 952 973 954 971 C 958 969 962 968 966 966 C 966 966 957 936 957 936 C 953 937 939 942 935 944 C 935 944 924 950 924 950 C 919 953 913 953 908 957 C 900 962 895 969 887 973 C 876 979 871 974 859 984 C 848 992 845 1004 837 1012 C 832 1017 826 1017 820 1020 z\" id=\"mun\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1277 1053 C 1276 1059 1276 1068 1272 1073 C 1268 1079 1259 1080 1258 1086 C 1257 1092 1263 1097 1266 1101 C 1276 1111 1287 1119 1280 1134 C 1275 1143 1265 1147 1256 1150 C 1256 1150 1203 1163 1203 1163 C 1193 1167 1180 1178 1187 1190 C 1189 1192 1192 1193 1194 1195 C 1198 1197 1198 1200 1201 1201 C 1205 1203 1226 1205 1231 1205 C 1242 1205 1255 1206 1266 1204 C 1266 1204 1287 1197 1287 1197 C 1303 1194 1323 1194 1339 1199 C 1339 1193 1341 1177 1343 1172 C 1346 1167 1352 1163 1355 1158 C 1357 1154 1357 1150 1357 1145 C 1349 1146 1336 1151 1329 1148 C 1321 1143 1317 1130 1317 1122 C 1317 1122 1318 1110 1318 1110 C 1318 1096 1314 1093 1307 1082 C 1299 1069 1293 1057 1277 1053 z\" id=\"rum\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1188 1199 C 1187 1205 1185 1210 1187 1216 C 1189 1223 1196 1231 1196 1237 C 1197 1245 1189 1244 1190 1255 C 1193 1268 1204 1282 1189 1291 C 1195 1299 1199 1297 1208 1294 C 1208 1294 1224 1288 1224 1288 C 1236 1284 1244 1282 1249 1297 C 1250 1301 1250 1303 1250 1307 C 1250 1307 1250 1311 1250 1311 C 1250 1311 1269 1311 1269 1311 C 1272 1311 1276 1313 1279 1311 C 1281 1310 1282 1308 1283 1306 C 1292 1293 1281 1282 1293 1270 C 1306 1258 1316 1264 1328 1262 C 1328 1262 1320 1248 1320 1248 C 1319 1245 1321 1241 1322 1238 C 1325 1229 1323 1223 1326 1218 C 1331 1210 1335 1216 1338 1206 C 1324 1199 1299 1201 1284 1204 C 1276 1206 1273 1209 1263 1211 C 1263 1211 1242 1212 1242 1212 C 1242 1212 1229 1211 1229 1211 C 1222 1211 1207 1210 1201 1208 C 1193 1206 1195 1202 1188 1199 z\" id=\"bul\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1244.54 1260.06 C 1215.87 1268 1224 1288 1224 1288 C 1236 1284 1244 1282 1249 1297 C 1250 1301 1250 1303 1250 1307 C 1250 1307 1250 1311 1250 1311 C 1250 1311 1269 1311 1269 1311 C 1272 1311 1276 1313 1279 1311 C 1281 1310 1282 1308 1283 1306 C 1292 1293 1281 1282 1293 1270 C 1306 1258 1264.65 1252.44 1244.54 1260.06 z\" id=\"bul-sc\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1293 1270 C 1306 1258 1316 1264 1328 1262 C 1328 1262 1320 1248 1320 1248 C 1319 1245 1321 1241 1322 1238 C 1325 1229 1323 1223 1326 1218 C 1331 1210 1335 1216 1338 1206 C 1324 1199 1299 1201 1284 1204 C 1276 1206 1273 1209 1263 1211 C 1263 1211 1281 1282 1293 1270 z\" id=\"bul-ec\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1155 1385 C 1155 1385 1155 1387 1155 1387 C 1153 1388 1149 1389 1148 1391 C 1146 1395 1152 1403 1155 1404 C 1162 1406 1184 1400 1188 1400 C 1191 1401 1193 1402 1196 1403 C 1200 1405 1207 1407 1206 1413 C 1205 1416 1203 1418 1200 1418 C 1200 1418 1191 1413 1191 1413 C 1186 1411 1178 1409 1173 1411 C 1173 1411 1166 1413 1166 1413 C 1162 1414 1160 1414 1158 1416 C 1155 1418 1156 1422 1158 1425 C 1161 1430 1165 1433 1167 1439 C 1167 1439 1172 1459 1172 1459 C 1173 1458 1175 1455 1176 1454 C 1185 1448 1189 1467 1191 1471 C 1193 1468 1195 1461 1199 1461 C 1202 1461 1203 1464 1209 1465 C 1208 1457 1204 1448 1201 1441 C 1199 1438 1197 1435 1201 1432 C 1206 1428 1214 1437 1217 1432 C 1220 1429 1212 1426 1211 1422 C 1210 1418 1213 1415 1217 1415 C 1223 1415 1227 1419 1232 1421 C 1232 1421 1231 1414 1231 1414 C 1230 1409 1232 1407 1228 1403 C 1223 1398 1203 1395 1199 1388 C 1196 1384 1199 1382 1199 1379 C 1200 1376 1198 1374 1198 1372 C 1199 1365 1208 1368 1212 1369 C 1208 1358 1195 1350 1192 1338 C 1190 1329 1198 1325 1201 1326 C 1204 1328 1202 1331 1205 1335 C 1207 1339 1212 1341 1216 1343 C 1216 1343 1214 1336 1214 1336 C 1214 1336 1230 1344 1230 1344 C 1230 1344 1222 1331 1222 1331 C 1222 1331 1233 1332 1233 1332 C 1231 1330 1226 1324 1226 1322 C 1225 1319 1229 1318 1231 1317 C 1237 1315 1235 1313 1243 1313 C 1243 1307 1245 1296 1238 1292 C 1234 1291 1222 1296 1218 1297 C 1218 1297 1187 1308 1187 1308 C 1187 1308 1166 1313 1166 1313 C 1164 1314 1159 1315 1158 1316 C 1155 1318 1156 1323 1156 1326 C 1156 1331 1154 1335 1151 1339 C 1146 1344 1141 1345 1138 1349 C 1136 1351 1135 1353 1134 1355 C 1132 1358 1130 1360 1129 1363 C 1127 1371 1134 1379 1140 1382 C 1145 1385 1145 1381 1155 1385 z M 1208 1382 C 1211 1386 1222 1396 1226 1399 C 1229 1400 1232 1401 1235 1401 C 1235 1390 1229 1393 1222 1389 C 1216 1385 1216 1382 1208 1382 z\" id=\"gre\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1636 1288 C 1625 1299 1615 1296 1600 1296 C 1584 1296 1573 1300 1561 1311 C 1546 1324 1537 1340 1516 1344 C 1513 1344 1510 1345 1507 1345 C 1498 1344 1483 1338 1475 1340 C 1470 1341 1465 1346 1461 1348 C 1451 1355 1437 1365 1425 1367 C 1418 1369 1409 1364 1401 1365 C 1395 1365 1391 1368 1386 1368 C 1379 1368 1376 1365 1371 1365 C 1366 1364 1362 1367 1358 1368 C 1358 1368 1349 1368 1349 1368 C 1342 1369 1337 1368 1331 1364 C 1328 1362 1323 1358 1319 1358 C 1316 1359 1311 1365 1311 1368 C 1311 1371 1313 1373 1313 1376 C 1314 1379 1312 1381 1311 1384 C 1311 1388 1312 1390 1311 1393 C 1311 1396 1307 1399 1305 1401 C 1312 1403 1321 1406 1322 1414 C 1322 1419 1320 1417 1323 1428 C 1323 1428 1331 1427 1331 1427 C 1333 1434 1333 1433 1330 1440 C 1330 1440 1349 1436 1349 1436 C 1351 1436 1354 1437 1355 1439 C 1355 1442 1350 1448 1349 1451 C 1355 1449 1355 1447 1359 1446 C 1363 1445 1366 1447 1370 1447 C 1372 1448 1375 1447 1377 1448 C 1381 1450 1383 1454 1385 1457 C 1389 1460 1395 1462 1400 1462 C 1404 1462 1416 1458 1418 1455 C 1421 1450 1418 1435 1432 1432 C 1443 1431 1460 1441 1469 1446 C 1474 1449 1478 1452 1484 1452 C 1493 1452 1512 1447 1518 1441 C 1524 1435 1528 1424 1535 1420 C 1544 1415 1552 1425 1558 1422 C 1565 1418 1564 1405 1575 1408 C 1579 1402 1583 1394 1586 1388 C 1590 1375 1588 1369 1603 1358 C 1611 1353 1614 1353 1622 1350 C 1622 1350 1640 1342 1640 1342 C 1644 1340 1652 1339 1654 1335 C 1657 1322 1641 1315 1637 1308 C 1634 1303 1637 1293 1636 1288 z\" id=\"smy\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1149 1316 C 1136 1313 1137 1308 1136 1297 C 1134 1284 1137 1271 1125 1262 C 1123 1261 1120 1259 1118 1258 C 1112 1257 1101 1264 1101 1273 C 1100 1280 1110 1281 1112 1290 C 1113 1298 1107 1314 1107 1326 C 1107 1329 1107 1334 1108 1337 C 1109 1341 1121 1352 1125 1353 C 1130 1354 1128 1349 1133 1344 C 1137 1340 1142 1339 1145 1336 C 1151 1331 1150 1323 1149 1316 z\" id=\"alb\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1189 1301 C 1187 1298 1181 1293 1183 1288 C 1185 1285 1189 1285 1190 1280 C 1191 1274 1184 1263 1184 1254 C 1184 1251 1184 1248 1185 1245 C 1187 1242 1190 1240 1190 1236 C 1189 1231 1184 1226 1181 1218 C 1178 1209 1181 1208 1181 1200 C 1181 1196 1181 1185 1177 1183 C 1176 1182 1173 1182 1171 1182 C 1171 1182 1144 1180 1144 1180 C 1137 1179 1135 1175 1131 1176 C 1128 1176 1125 1179 1121 1181 C 1115 1183 1111 1176 1107 1181 C 1106 1181 1104 1184 1104 1185 C 1100 1194 1107 1196 1107 1204 C 1106 1208 1104 1212 1103 1216 C 1101 1222 1101 1232 1104 1238 C 1110 1249 1126 1253 1134 1262 C 1140 1269 1140 1274 1141 1283 C 1141 1283 1142 1292 1142 1292 C 1142 1296 1141 1303 1144 1307 C 1146 1309 1151 1309 1154 1309 C 1165 1309 1174 1302 1189 1301 z\" id=\"ser\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1121 1029 C 1121 1031 1121 1033 1120 1035 C 1118 1041 1113 1038 1109 1039 C 1106 1040 1104 1041 1102 1043 C 1092 1052 1092 1061 1085 1069 C 1079 1075 1074 1076 1069 1080 C 1065 1083 1060 1089 1056 1093 C 1052 1097 1047 1100 1047 1106 C 1047 1106 1048 1113 1048 1113 C 1050 1124 1054 1132 1063 1139 C 1069 1143 1075 1144 1079 1148 C 1088 1155 1088 1174 1103 1173 C 1103 1173 1111 1171 1111 1171 C 1113 1172 1115 1174 1117 1174 C 1123 1176 1125 1169 1132 1169 C 1136 1170 1139 1173 1144 1174 C 1151 1175 1155 1175 1162 1175 C 1162 1175 1169 1176 1169 1176 C 1181 1177 1183 1170 1191 1163 C 1196 1160 1200 1157 1206 1156 C 1206 1156 1258 1143 1258 1143 C 1268 1139 1276 1135 1275 1123 C 1274 1113 1259 1104 1253 1095 C 1253 1095 1249 1087 1249 1087 C 1249 1087 1234 1065 1234 1065 C 1230 1061 1227 1062 1221 1056 C 1213 1047 1208 1039 1197 1033 C 1187 1028 1182 1031 1173 1028 C 1166 1026 1162 1021 1154 1021 C 1144 1021 1131 1027 1121 1029 z\" id=\"bud\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1083 997 C 1083 997 1085 1015 1085 1015 C 1094 1015 1098 1015 1106 1018 C 1112 1021 1115 1025 1120 1025 C 1123 1025 1128 1023 1131 1022 C 1139 1020 1146 1018 1155 1018 C 1164 1018 1166 1023 1174 1025 C 1182 1027 1189 1024 1201 1031 C 1212 1038 1216 1046 1224 1054 C 1229 1059 1232 1058 1238 1065 C 1243 1071 1246 1078 1252 1083 C 1258 1073 1266 1074 1269 1066 C 1270 1062 1269 1047 1269 1042 C 1269 1030 1262 1010 1254 1001 C 1249 996 1240 993 1234 988 C 1229 985 1220 975 1216 974 C 1209 973 1205 980 1193 981 C 1186 981 1180 978 1174 975 C 1172 974 1166 971 1163 971 C 1160 971 1157 976 1155 978 C 1151 982 1145 985 1140 988 C 1134 990 1130 990 1124 989 C 1121 989 1113 987 1111 987 C 1108 988 1105 991 1100 994 C 1096 996 1088 997 1083 997 z\" id=\"gal\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1117 1036 C 1117 1034 1118 1031 1117 1029 C 1116 1028 1113 1026 1111 1025 C 1104 1021 1099 1019 1091 1019 C 1091 1019 1074 1020 1074 1020 C 1067 1019 1069 1016 1057 1016 C 1057 1016 1045 1018 1045 1018 C 1040 1018 1033 1013 1025 1019 C 1020 1024 1016 1031 1012 1037 C 1010 1042 1005 1049 1003 1054 C 1001 1061 1002 1078 1005 1085 C 1006 1088 1007 1090 1009 1092 C 1012 1097 1017 1107 1023 1108 C 1027 1108 1031 1104 1035 1102 C 1035 1102 1044 1100 1044 1100 C 1052 1096 1059 1084 1065 1078 C 1072 1072 1078 1073 1084 1064 C 1087 1060 1088 1057 1090 1053 C 1093 1048 1101 1037 1107 1036 C 1110 1035 1114 1036 1117 1036 z\" id=\"vie\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1081 1016 C 1081 1016 1079 997 1079 997 C 1079 997 1083 997 1083 997 C 1083 997 1075 995 1075 995 C 1075 995 1063 990 1063 990 C 1056 988 1053 988 1046 984 C 1034 977 1023 959 1008 961 C 999 963 971 970 963 974 C 959 976 952 979 950 983 C 947 988 950 993 953 997 C 953 997 977 1027 977 1027 C 979 1031 981 1039 986 1040 C 990 1041 995 1041 999 1041 C 1001 1041 1004 1042 1005 1041 C 1008 1040 1011 1033 1012 1031 C 1017 1023 1025 1011 1036 1012 C 1040 1013 1042 1014 1046 1014 C 1050 1014 1053 1012 1060 1012 C 1067 1012 1069 1015 1073 1016 C 1075 1017 1079 1016 1081 1016 z\" id=\"boh\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 875 1067 C 878 1085 889 1086 894 1098 C 898 1108 892 1109 892 1122 C 892 1129 895 1137 903 1135 C 908 1135 915 1130 917 1125 C 918 1122 917 1119 920 1115 C 926 1109 936 1108 944 1108 C 947 1108 957 1108 959 1107 C 961 1106 962 1104 964 1102 C 967 1100 970 1099 973 1099 C 977 1098 981 1098 985 1099 C 988 1099 991 1100 994 1099 C 998 1097 1001 1088 1000 1084 C 999 1065 995 1064 1003 1045 C 994 1045 981 1042 973 1046 C 970 1047 967 1050 964 1052 C 962 1053 958 1054 957 1056 C 952 1060 962 1072 952 1075 C 950 1076 946 1075 944 1074 C 939 1073 936 1073 931 1073 C 931 1073 910 1073 910 1073 C 904 1073 897 1075 891 1074 C 884 1073 885 1068 875 1067 z\" id=\"tyr\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1003 1091 C 1001 1096 998 1102 993 1103 C 987 1104 968 1097 964 1109 C 966 1110 968 1112 970 1114 C 973 1120 969 1134 967 1140 C 966 1145 968 1144 965 1152 C 964 1157 962 1168 969 1169 C 972 1170 975 1165 976 1163 C 980 1156 980 1153 989 1154 C 989 1157 989 1159 988 1162 C 986 1168 982 1170 986 1181 C 990 1193 1002 1199 1011 1207 C 1016 1212 1018 1214 1024 1219 C 1024 1219 1047 1234 1047 1234 C 1047 1234 1064 1248 1064 1248 C 1064 1248 1081 1260 1081 1260 C 1086 1263 1090 1268 1095 1270 C 1097 1260 1102 1257 1110 1253 C 1101 1243 1094 1239 1095 1224 C 1095 1214 1099 1210 1100 1205 C 1100 1200 1097 1197 1096 1192 C 1096 1187 1099 1182 1100 1177 C 1095 1175 1091 1174 1088 1169 C 1084 1164 1083 1156 1078 1151 C 1073 1147 1068 1148 1059 1140 C 1047 1131 1046 1119 1043 1105 C 1039 1105 1037 1105 1034 1107 C 1031 1108 1027 1112 1023 1112 C 1014 1111 1010 1098 1003 1091 z\" id=\"tri\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1181 440 C 1190 443 1204 455 1199 465 C 1199 465 1189 478 1189 478 C 1189 478 1175 500 1175 500 C 1175 500 1153 527 1153 527 C 1148 534 1139 544 1140 553 C 1140 553 1142 562 1142 562 C 1142 562 1143 572 1143 572 C 1143 572 1147 586 1147 586 C 1147 593 1142 600 1142 608 C 1142 612 1142 618 1146 622 C 1148 624 1151 624 1154 626 C 1154 626 1163 631 1163 631 C 1163 631 1170 633 1170 633 C 1175 635 1176 639 1181 640 C 1186 640 1200 636 1205 635 C 1205 635 1238 622 1238 622 C 1244 620 1258 617 1262 614 C 1268 611 1271 605 1275 599 C 1282 588 1290 572 1289 559 C 1289 555 1288 553 1288 549 C 1289 539 1294 537 1294 528 C 1292 512 1283 498 1276 483 C 1269 468 1260 443 1255 427 C 1252 417 1250 405 1249 394 C 1249 389 1248 376 1247 372 C 1246 367 1241 364 1237 357 C 1234 350 1232 341 1232 333 C 1228 336 1224 334 1224 329 C 1223 325 1227 318 1227 312 C 1226 301 1208 291 1199 299 C 1196 302 1196 308 1195 312 C 1193 323 1191 330 1179 332 C 1171 334 1157 331 1149 328 C 1149 328 1139 323 1139 323 C 1135 322 1132 323 1131 327 C 1130 332 1134 334 1137 337 C 1145 343 1153 350 1159 358 C 1171 374 1173 391 1177 410 C 1177 410 1181 440 1181 440 z\" id=\"fin\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1128 338 C 1128 338 1126 348 1126 348 C 1120 349 1118 350 1112 351 C 1109 351 1104 351 1101 352 C 1098 355 1101 358 1098 362 C 1095 366 1091 362 1087 367 C 1082 373 1075 395 1071 403 C 1068 409 1064 416 1059 422 C 1055 428 1052 430 1048 437 C 1048 437 1043 456 1043 456 C 1043 456 1032 478 1032 478 C 1032 478 1028 494 1028 494 C 1023 504 1015 499 1008 505 C 1006 508 1004 513 1003 517 C 999 529 999 540 999 552 C 999 552 1000 567 1000 567 C 1000 567 1000 581 1000 581 C 1000 586 1000 589 998 593 C 994 601 991 599 991 610 C 991 623 987 636 984 649 C 981 657 978 676 970 679 C 967 680 964 679 961 679 C 961 689 964 693 966 703 C 966 703 973 731 973 731 C 975 736 981 751 982 755 C 982 760 978 769 979 774 C 979 774 982 786 982 786 C 984 794 980 803 993 801 C 1005 800 1003 794 1009 786 C 1014 780 1019 778 1026 778 C 1030 778 1037 779 1041 777 C 1045 774 1048 768 1049 764 C 1055 750 1054 741 1055 727 C 1055 727 1060 704 1060 704 C 1060 702 1060 699 1059 697 C 1058 696 1056 694 1057 692 C 1057 690 1060 689 1062 689 C 1067 688 1072 687 1077 684 C 1086 680 1090 674 1094 665 C 1097 659 1099 657 1099 650 C 1098 635 1083 627 1078 620 C 1075 616 1074 610 1074 605 C 1074 592 1078 571 1083 559 C 1086 553 1095 542 1099 537 C 1112 523 1128 517 1139 498 C 1144 489 1138 486 1139 477 C 1140 464 1149 444 1162 439 C 1166 438 1170 438 1174 438 C 1174 438 1171 417 1171 417 C 1169 402 1165 380 1158 367 C 1151 355 1139 345 1128 338 z\" id=\"swe\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1198 263 C 1194 266 1193 270 1192 274 C 1189 282 1188 287 1182 292 C 1180 283 1183 280 1183 272 C 1183 270 1183 267 1181 266 C 1178 265 1175 267 1173 268 C 1166 275 1167 275 1158 280 C 1158 280 1133 298 1133 298 C 1128 300 1123 302 1118 303 C 1115 304 1111 304 1108 305 C 1104 307 1104 312 1100 315 C 1097 317 1095 316 1093 317 C 1089 319 1087 324 1086 328 C 1088 330 1090 332 1089 335 C 1088 337 1083 342 1081 344 C 1081 344 1063 367 1063 367 C 1063 367 1045 394 1045 394 C 1045 394 1024 415 1024 415 C 1019 422 1015 431 1010 439 C 1005 447 995 464 992 472 C 992 472 991 483 991 483 C 983 480 980 483 974 488 C 971 491 967 496 965 499 C 964 502 964 506 961 508 C 958 510 952 509 947 512 C 941 515 937 521 933 522 C 929 523 928 521 925 521 C 921 520 918 522 916 526 C 916 526 920 528 920 528 C 915 534 912 532 905 535 C 906 537 908 541 907 542 C 905 545 900 541 894 542 C 888 544 882 551 879 556 C 871 567 869 577 867 590 C 866 593 865 601 865 604 C 867 609 872 610 874 614 C 876 619 871 620 867 621 C 867 621 871 624 871 624 C 879 633 863 634 861 637 C 860 638 860 642 860 644 C 864 643 878 639 879 646 C 879 650 874 653 872 655 C 865 660 859 665 864 674 C 866 677 869 681 872 683 C 874 685 877 686 880 688 C 899 697 913 679 929 672 C 934 669 939 668 944 664 C 946 663 950 658 953 658 C 957 658 960 668 961 672 C 964 672 968 674 970 671 C 972 668 974 659 975 656 C 978 646 984 626 984 616 C 984 612 984 606 985 602 C 987 597 991 595 993 589 C 994 584 994 578 994 573 C 994 573 992 546 992 546 C 992 536 995 516 1000 507 C 1002 502 1006 498 1011 496 C 1016 494 1020 495 1022 491 C 1022 491 1026 476 1026 476 C 1026 476 1037 453 1037 453 C 1037 453 1043 434 1043 434 C 1046 427 1053 421 1058 414 C 1067 400 1070 386 1077 372 C 1081 364 1084 358 1093 357 C 1092 343 1110 344 1120 344 C 1121 340 1122 336 1123 332 C 1124 326 1127 318 1134 316 C 1139 315 1144 319 1149 321 C 1156 324 1165 326 1172 326 C 1176 326 1181 326 1184 323 C 1191 317 1185 298 1199 291 C 1201 290 1203 290 1205 290 C 1217 289 1232 299 1234 312 C 1234 317 1231 324 1230 330 C 1241 325 1247 308 1251 297 C 1249 298 1243 300 1241 299 C 1237 299 1229 292 1227 288 C 1232 287 1244 285 1246 281 C 1251 273 1234 268 1229 268 C 1222 269 1223 277 1219 279 C 1216 280 1215 277 1214 275 C 1214 271 1218 257 1210 259 C 1203 260 1207 278 1201 280 C 1197 281 1197 275 1197 273 C 1197 273 1198 263 1198 263 z\" id=\"nwy\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 768 906 C 778 917 791 914 799 922 C 804 928 800 932 804 943 C 804 943 806 943 806 943 C 809 937 813 931 815 924 C 816 918 817 911 820 906 C 824 900 834 897 839 892 C 841 889 841 883 843 879 C 847 866 850 867 850 850 C 850 850 823 849 823 849 C 815 850 801 861 796 866 C 786 876 790 890 780 900 C 776 903 772 904 768 906 z\" id=\"hol\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 715 931 C 715 931 747 950 747 950 C 760 958 761 961 777 969 C 782 972 798 980 804 980 C 809 979 808 972 807 968 C 805 954 798 945 796 940 C 794 934 796 929 793 926 C 791 923 785 922 782 921 C 782 921 775 918 775 918 C 769 915 766 914 761 908 C 754 910 745 912 738 913 C 733 914 726 914 722 917 C 718 921 717 926 715 931 z\" id=\"bel\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 957 1271 C 959 1266 960 1265 964 1260 C 966 1258 969 1255 969 1252 C 969 1250 965 1243 964 1240 C 959 1228 962 1222 951 1210 C 941 1199 927 1193 928 1176 C 928 1168 932 1168 933 1164 C 934 1160 928 1155 935 1150 C 938 1148 949 1143 952 1142 C 955 1141 959 1141 961 1139 C 962 1137 964 1125 965 1122 C 965 1120 965 1118 963 1117 C 961 1115 950 1114 947 1114 C 942 1114 929 1115 926 1119 C 924 1121 924 1123 923 1126 C 918 1134 910 1143 900 1142 C 894 1141 892 1136 888 1136 C 886 1136 883 1139 881 1141 C 877 1146 873 1153 872 1160 C 872 1167 879 1174 884 1178 C 891 1184 897 1186 903 1190 C 912 1196 920 1205 926 1213 C 934 1224 937 1231 942 1244 C 942 1244 945 1260 945 1260 C 946 1264 953 1269 957 1271 z\" id=\"ven\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 804 1114 C 803 1117 801 1120 802 1124 C 803 1128 807 1130 806 1135 C 805 1138 801 1142 801 1146 C 800 1151 804 1156 805 1161 C 806 1168 800 1176 806 1184 C 807 1186 809 1188 811 1189 C 815 1191 823 1187 826 1184 C 832 1179 839 1173 848 1174 C 856 1175 860 1182 869 1186 C 871 1183 875 1178 874 1175 C 874 1171 869 1169 869 1161 C 869 1149 878 1138 887 1131 C 887 1131 886 1119 886 1119 C 886 1119 866 1116 866 1116 C 859 1117 860 1129 851 1127 C 844 1126 838 1116 830 1115 C 821 1114 814 1125 804 1114 z\" id=\"pie\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 878 1178 C 877 1180 873 1185 873 1188 C 873 1191 875 1194 876 1201 C 877 1208 877 1215 878 1221 C 882 1232 891 1245 899 1253 C 899 1253 914 1239 914 1239 C 914 1239 932 1229 932 1229 C 927 1220 918 1207 911 1200 C 901 1191 899 1192 889 1186 C 889 1186 878 1178 878 1178 z\" id=\"tus\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 973 1291 C 973 1291 951 1271 951 1271 C 951 1271 942 1262 942 1262 C 942 1262 939 1249 939 1249 C 939 1249 934 1233 934 1233 C 925 1235 916 1241 909 1246 C 907 1249 903 1252 903 1256 C 903 1261 911 1268 914 1272 C 921 1280 926 1290 936 1295 C 941 1297 945 1296 950 1297 C 956 1298 958 1301 961 1300 C 961 1300 973 1291 973 1291 z\" id=\"rom\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 972 1256 C 968 1260 960 1267 960 1272 C 960 1277 967 1281 969 1283 C 969 1283 991 1300 991 1300 C 996 1304 1005 1314 1008 1320 C 1011 1326 1010 1330 1013 1334 C 1015 1337 1028 1344 1032 1345 C 1034 1342 1038 1334 1041 1332 C 1042 1330 1043 1329 1046 1330 C 1046 1330 1052 1335 1052 1335 C 1057 1339 1063 1343 1069 1346 C 1072 1347 1077 1351 1079 1348 C 1081 1345 1079 1339 1077 1336 C 1074 1331 1061 1323 1055 1319 C 1044 1312 1029 1303 1021 1294 C 1019 1292 1018 1290 1017 1287 C 1017 1285 1018 1282 1016 1280 C 1015 1279 1010 1279 1008 1279 C 1003 1278 999 1277 995 1275 C 984 1270 980 1262 972 1256 z\" id=\"apu\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1029 1348 C 1024 1345 1013 1339 1009 1335 C 1006 1331 1007 1326 1005 1321 C 1002 1314 992 1305 986 1300 C 982 1297 978 1294 973 1296 C 969 1297 962 1303 962 1307 C 962 1310 964 1314 966 1316 C 966 1318 968 1321 969 1322 C 972 1326 979 1322 984 1326 C 988 1329 986 1333 991 1340 C 996 1346 1004 1350 1008 1357 C 1010 1360 1017 1377 1017 1381 C 1018 1383 1018 1385 1017 1387 C 1017 1389 1009 1402 1008 1404 C 1005 1407 1001 1412 1004 1417 C 1007 1421 1012 1419 1016 1416 C 1019 1413 1024 1405 1025 1400 C 1026 1397 1027 1392 1029 1389 C 1032 1385 1037 1387 1039 1385 C 1042 1383 1042 1378 1042 1375 C 1041 1362 1030 1364 1028 1356 C 1027 1354 1028 1350 1029 1348 z\" id=\"nap\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 773 975 C 769 985 759 1008 751 1015 C 747 1018 745 1018 742 1021 C 742 1021 733 1028 733 1028 C 733 1028 725 1033 725 1033 C 721 1036 720 1039 717 1041 C 713 1044 710 1043 707 1046 C 702 1052 703 1058 701 1064 C 699 1073 692 1083 683 1086 C 683 1090 684 1093 688 1096 C 692 1099 699 1098 702 1103 C 704 1107 701 1113 700 1118 C 700 1128 713 1145 724 1138 C 731 1134 735 1120 737 1112 C 737 1108 736 1100 740 1098 C 743 1096 746 1097 749 1098 C 754 1100 759 1101 764 1101 C 766 1101 770 1101 772 1100 C 772 1100 785 1086 785 1086 C 791 1080 807 1065 811 1058 C 813 1054 813 1049 815 1044 C 815 1044 818 1034 818 1034 C 818 1028 812 1019 808 1014 C 802 1003 800 998 802 986 C 802 986 773 975 773 975 z\" id=\"bur\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 741 1100 C 741 1112 739 1122 733 1133 C 730 1138 727 1142 721 1143 C 715 1144 712 1141 707 1139 C 704 1143 700 1147 695 1148 C 691 1150 682 1148 677 1153 C 674 1155 670 1164 667 1168 C 667 1168 650 1192 650 1192 C 654 1197 668 1205 674 1208 C 677 1209 682 1211 685 1211 C 690 1210 686 1204 690 1196 C 693 1189 703 1182 711 1181 C 721 1180 725 1187 733 1189 C 738 1190 743 1188 748 1191 C 754 1196 756 1207 768 1208 C 781 1210 791 1196 803 1193 C 801 1186 797 1185 797 1176 C 797 1176 798 1161 798 1161 C 797 1157 794 1153 794 1147 C 794 1140 800 1137 799 1133 C 799 1130 795 1127 794 1123 C 794 1117 800 1112 798 1108 C 797 1105 792 1106 789 1107 C 781 1109 778 1112 773 1104 C 760 1107 753 1102 741 1100 z\" id=\"mar\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 611 1058 C 611 1058 611 1079 611 1079 C 611 1079 614 1086 614 1086 C 614 1086 609 1084 609 1084 C 606 1088 601 1097 601 1102 C 600 1105 601 1107 601 1110 C 600 1113 591 1131 589 1134 C 587 1138 584 1141 580 1145 C 578 1146 576 1148 576 1151 C 577 1155 588 1165 592 1168 C 600 1173 611 1180 620 1183 C 620 1183 633 1185 633 1185 C 637 1186 643 1189 647 1191 C 647 1191 664 1167 664 1167 C 667 1162 671 1153 676 1149 C 682 1145 688 1147 695 1145 C 699 1143 702 1140 705 1137 C 702 1132 698 1128 697 1122 C 696 1116 699 1110 700 1104 C 695 1102 688 1101 684 1098 C 680 1094 681 1090 677 1087 C 675 1086 670 1085 663 1080 C 658 1076 655 1070 650 1067 C 643 1063 620 1059 611 1058 z\" id=\"gas\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 711 936 C 707 940 703 944 698 946 C 694 947 692 947 688 947 C 684 948 680 950 677 952 C 677 952 677 954 677 954 C 677 954 681 956 681 956 C 681 956 681 958 681 958 C 673 960 670 959 667 960 C 664 961 662 975 661 979 C 673 979 687 980 698 977 C 705 976 709 972 715 972 C 721 971 728 975 733 977 C 749 983 743 978 763 989 C 763 989 770 972 770 972 C 759 967 755 962 745 956 C 745 956 711 936 711 936 z\" id=\"pic\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 661 980 C 657 990 660 1003 660 1014 C 660 1035 658 1046 654 1066 C 658 1069 658 1071 661 1074 C 666 1079 675 1084 682 1082 C 690 1081 695 1072 697 1065 C 699 1058 698 1052 703 1045 C 708 1039 711 1041 716 1038 C 716 1038 722 1031 722 1031 C 722 1031 732 1025 732 1025 C 732 1025 740 1018 740 1018 C 744 1015 746 1015 750 1012 C 753 1008 759 997 761 992 C 745 983 747 986 733 981 C 728 979 720 975 715 975 C 709 976 706 979 701 980 C 693 983 684 982 676 982 C 671 982 665 983 661 980 z\" id=\"par\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 631 936 C 631 936 633 952 633 952 C 633 952 631 966 631 966 C 631 966 633 976 633 976 C 626 975 627 974 621 971 C 621 971 601 963 601 963 C 597 961 595 957 592 956 C 589 955 586 956 582 956 C 576 955 564 953 559 958 C 557 959 556 962 555 965 C 553 967 550 969 550 973 C 552 980 562 979 567 982 C 573 985 586 997 591 1002 C 595 1007 593 1008 595 1011 C 596 1013 598 1015 599 1019 C 601 1024 599 1027 599 1031 C 600 1037 605 1048 610 1052 C 613 1055 619 1056 623 1056 C 623 1056 651 1063 651 1063 C 653 1053 656 1036 656 1026 C 656 1026 656 1009 656 1009 C 656 1009 655 999 655 999 C 655 982 659 974 662 958 C 656 956 651 954 647 950 C 642 945 644 941 641 939 C 640 937 634 936 631 936 z M 553 968 C 553 968 553 969 553 969 C 553 969 552 968 552 968 C 552 968 553 968 553 968 z\" id=\"bre\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 386 1138 C 391 1137 398 1136 403 1138 C 407 1141 408 1144 414 1146 C 424 1149 439 1146 447 1159 C 449 1162 450 1166 450 1169 C 448 1177 442 1174 434 1184 C 434 1184 415 1216 415 1216 C 413 1219 410 1224 407 1226 C 405 1228 401 1230 400 1232 C 399 1235 399 1243 399 1246 C 399 1257 395 1257 393 1265 C 392 1272 396 1276 391 1284 C 388 1289 383 1291 379 1295 C 375 1300 372 1308 370 1314 C 379 1319 387 1329 389 1339 C 391 1347 388 1357 397 1362 C 404 1366 407 1361 413 1359 C 418 1358 420 1361 427 1361 C 427 1361 445 1357 445 1357 C 454 1357 462 1363 470 1365 C 478 1368 478 1367 485 1367 C 491 1366 497 1370 501 1369 C 507 1368 509 1360 520 1355 C 527 1352 541 1353 545 1350 C 545 1350 565 1326 565 1326 C 569 1323 575 1322 579 1321 C 577 1315 572 1310 572 1303 C 573 1298 577 1294 580 1290 C 584 1285 588 1276 592 1271 C 592 1271 599 1266 599 1266 C 604 1260 605 1257 613 1257 C 613 1255 613 1253 615 1251 C 618 1247 631 1245 636 1245 C 650 1243 675 1237 683 1225 C 685 1222 686 1220 686 1217 C 671 1217 656 1204 643 1196 C 640 1195 635 1192 632 1191 C 628 1191 626 1192 621 1190 C 613 1188 604 1183 597 1179 C 591 1175 583 1169 578 1164 C 578 1164 567 1151 567 1151 C 567 1151 558 1148 558 1148 C 553 1145 552 1143 548 1141 C 544 1139 540 1141 533 1138 C 533 1138 522 1132 522 1132 C 516 1130 514 1131 506 1127 C 506 1127 472 1110 472 1110 C 472 1110 448 1101 448 1101 C 439 1095 439 1088 427 1089 C 417 1089 419 1094 414 1096 C 409 1098 403 1095 400 1095 C 398 1095 396 1096 394 1098 C 385 1105 390 1114 390 1123 C 390 1129 388 1133 386 1138 z\" id=\"spa\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 391 1284 C 388 1289 383 1291 379 1295 C 375 1300 372 1308 370 1314 C 379 1319 387 1329 389 1339 C 391 1347 388 1357 397 1362 C 404 1366 407 1361 413 1359 C 418 1358 420 1361 427 1361 C 427 1361 445 1357 445 1357 C 454 1357 462 1363 470 1365 C 478 1368 478 1367 485 1367 C 491 1366 497 1370 501 1369 C 507 1368 509 1360 520 1355 C 527 1352 541 1353 545 1350 C 545 1350 565 1326 565 1326 C 569 1323 575 1322 579 1321 C 577 1315 572 1310 572 1303 C 573 1298 577 1294 580 1290 C 584 1285 588 1276 592 1271 C 592 1271 599 1266 599 1266 C 604 1260 605 1257 613 1257 C 613 1255 613 1253 615 1251 C 618 1247 631 1245 636 1245 C 650 1243 675 1237 683 1225 C 685 1222 686 1220 686 1217 C 671 1217 656 1204 643 1196 C 640 1195 635 1192 632 1191 C 628 1191 626 1192 621 1190 C 613 1188 396 1276 391 1284 z\" id=\"spa-sc\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 386 1138 C 391 1137 398 1136 403 1138 C 407 1141 408 1144 414 1146 C 424 1149 439 1146 447 1159 C 449 1162 450 1166 450 1169 C 448 1177 442 1174 434 1184 C 434 1184 567 1151 567 1151 C 567 1151 558 1148 558 1148 C 553 1145 552 1143 548 1141 C 544 1139 540 1141 533 1138 C 533 1138 522 1132 522 1132 C 516 1130 514 1131 506 1127 C 506 1127 472 1110 472 1110 C 472 1110 448 1101 448 1101 C 439 1095 439 1088 427 1089 C 417 1089 419 1094 414 1096 C 409 1098 403 1095 400 1095 C 398 1095 396 1096 394 1098 C 385 1105 390 1114 390 1123 C 390 1129 388 1133 386 1138 z\" id=\"spa-nc\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 394 1143 C 391 1144 387 1144 385 1146 C 383 1148 381 1158 380 1161 C 378 1169 372 1180 369 1187 C 365 1194 356 1210 351 1215 C 346 1220 340 1218 336 1224 C 335 1227 332 1240 332 1243 C 332 1245 332 1248 333 1249 C 335 1253 343 1251 343 1259 C 343 1264 340 1269 338 1273 C 336 1280 339 1280 334 1288 C 332 1291 326 1298 327 1302 C 327 1304 337 1309 340 1310 C 344 1312 347 1314 352 1314 C 354 1314 362 1312 363 1311 C 365 1310 369 1298 371 1295 C 379 1282 387 1287 387 1273 C 387 1269 387 1265 388 1261 C 389 1256 392 1254 393 1248 C 394 1242 391 1236 394 1230 C 397 1223 401 1226 409 1215 C 409 1215 429 1180 429 1180 C 439 1168 446 1171 442 1163 C 437 1153 421 1156 412 1152 C 404 1149 404 1143 394 1143 z\" id=\"por\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 216 1527 C 216 1527 780 1527 780 1527 C 780 1505 779 1473 783 1452 C 786 1442 790 1439 793 1431 C 784 1430 782 1426 770 1425 C 763 1424 763 1428 757 1427 C 752 1427 746 1422 739 1422 C 736 1422 721 1426 718 1427 C 715 1428 711 1430 708 1429 C 705 1429 701 1425 699 1423 C 695 1420 691 1417 686 1416 C 673 1412 646 1412 632 1412 C 632 1412 612 1410 612 1410 C 602 1410 593 1409 583 1411 C 575 1412 568 1415 561 1418 C 558 1420 552 1423 548 1423 C 544 1423 542 1420 539 1420 C 537 1419 526 1419 524 1420 C 520 1423 516 1427 510 1430 C 501 1434 486 1430 477 1427 C 474 1426 469 1424 466 1422 C 464 1419 463 1417 462 1414 C 457 1415 456 1416 451 1416 C 440 1416 423 1415 416 1406 C 411 1400 409 1391 406 1384 C 405 1381 403 1377 399 1378 C 392 1378 385 1387 381 1392 C 369 1405 360 1419 345 1428 C 332 1437 308 1433 292 1438 C 283 1441 272 1448 265 1454 C 265 1454 256 1465 256 1465 C 256 1465 242 1475 242 1475 C 232 1485 218 1513 216 1527 z\" id=\"naf\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 787 1527 C 787 1527 857 1527 857 1527 C 859 1527 863 1527 865 1526 C 867 1524 868 1521 869 1518 C 871 1510 872 1502 868 1494 C 864 1487 861 1486 856 1481 C 853 1478 852 1474 853 1470 C 854 1459 864 1455 869 1450 C 871 1448 873 1442 871 1440 C 869 1438 867 1439 865 1440 C 862 1442 855 1447 851 1446 C 846 1444 849 1438 846 1434 C 842 1429 832 1427 826 1427 C 826 1427 810 1430 810 1430 C 807 1431 804 1431 801 1433 C 795 1438 790 1451 789 1459 C 786 1477 787 1508 787 1527 z\" id=\"tun\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 716 901 C 713 899 704 896 702 893 C 699 888 709 883 712 880 C 721 875 735 868 736 856 C 736 854 736 851 735 849 C 731 842 713 838 705 840 C 705 840 694 845 694 845 C 689 847 684 849 679 851 C 679 851 669 853 669 853 C 661 856 655 866 655 875 C 656 883 659 891 664 898 C 665 900 667 903 669 905 C 672 907 677 907 680 908 C 693 910 705 910 716 901 z\" id=\"lon\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 612 810 C 624 811 622 824 617 828 C 612 833 594 831 590 837 C 586 844 597 847 601 849 C 608 852 613 860 619 864 C 625 866 626 863 634 865 C 633 867 632 868 630 870 C 619 878 611 870 603 870 C 596 870 596 877 590 872 C 583 878 586 880 571 888 C 565 892 560 890 555 896 C 558 897 561 900 564 900 C 567 900 572 897 575 896 C 582 894 591 897 596 902 C 603 899 605 894 610 892 C 615 891 624 896 630 897 C 630 897 660 900 660 900 C 657 891 650 882 651 872 C 652 864 657 856 664 852 C 668 849 671 849 672 847 C 674 845 672 836 672 832 C 667 831 649 824 645 821 C 642 818 640 815 640 810 C 640 807 640 803 639 800 C 633 792 615 804 612 810 z\" id=\"wal\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 622 715 C 622 715 633 711 633 711 C 636 700 641 699 643 706 C 644 715 635 723 630 730 C 624 738 625 742 634 745 C 637 747 636 746 639 746 C 643 747 642 749 645 750 C 647 751 652 751 654 751 C 654 751 647 757 647 757 C 647 757 651 765 651 765 C 651 765 651 778 651 778 C 652 783 654 788 652 793 C 650 803 640 801 644 813 C 644 815 645 817 647 818 C 650 820 668 827 672 828 C 672 813 670 810 672 793 C 672 793 677 777 677 777 C 679 771 678 760 677 754 C 676 748 665 735 661 728 C 654 714 657 711 657 697 C 650 695 633 692 626 692 C 622 693 617 695 616 699 C 615 703 619 703 621 705 C 622 707 622 712 622 715 z\" id=\"lvp\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 680 750 C 680 750 681 758 681 758 C 681 758 681 767 681 767 C 681 767 675 804 675 804 C 675 804 677 848 677 848 C 683 846 698 840 703 837 C 703 837 707 832 707 832 C 710 830 714 828 714 824 C 714 818 707 811 704 806 C 711 803 712 802 711 794 C 709 779 702 779 698 768 C 694 761 695 754 692 752 C 690 750 683 750 680 750 z\" id=\"yor\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 690 621 C 683 631 677 631 673 638 C 669 644 667 656 666 663 C 666 663 661 699 661 699 C 660 708 659 714 662 723 C 664 727 674 742 677 746 C 683 746 689 748 692 747 C 697 745 697 737 696 733 C 693 724 681 713 687 701 C 691 693 701 684 707 677 C 710 674 714 669 714 665 C 712 657 697 653 690 652 C 687 652 679 654 677 651 C 674 648 681 643 683 642 C 683 642 700 631 700 631 C 706 626 702 623 696 622 C 696 622 690 621 690 621 z\" id=\"edi\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 624 681 C 629 681 639 680 631 688 C 631 688 658 694 658 694 C 658 694 661 670 661 670 C 662 661 665 645 669 637 C 674 629 682 627 686 620 C 682 619 676 617 672 618 C 667 619 664 624 661 628 C 659 630 647 638 645 639 C 640 641 636 632 631 639 C 627 646 636 652 636 658 C 635 664 626 673 624 681 z\" id=\"cly\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 202 175 C 202 175 202 859 202 859 C 202 859 240 849 240 849 C 272 844 323 842 355 846 C 372 849 395 856 410 862 C 416 865 419 866 424 869 C 426 871 429 873 432 872 C 436 871 445 861 448 858 C 448 858 477 829 477 829 C 483 823 489 819 491 811 C 487 809 487 808 488 804 C 483 799 483 797 489 794 C 488 792 485 788 488 786 C 491 782 496 789 500 786 C 500 786 508 774 508 774 C 515 766 523 765 533 765 C 527 762 510 754 512 746 C 513 741 519 738 521 733 C 523 727 517 721 525 718 C 530 716 537 719 542 722 C 549 725 553 726 560 724 C 559 722 557 719 558 717 C 558 714 561 713 563 712 C 568 708 571 703 576 702 C 580 702 591 705 594 707 C 594 707 599 711 599 711 C 603 714 606 712 610 716 C 613 720 612 725 613 729 C 614 736 616 737 617 741 C 617 745 613 750 611 753 C 615 756 618 759 623 761 C 631 764 640 763 648 763 C 645 759 645 759 647 754 C 643 752 642 752 641 748 C 640 748 638 749 637 749 C 632 749 623 744 624 737 C 626 731 633 724 637 719 C 640 713 640 709 640 703 C 634 707 637 713 628 713 C 627 714 627 715 626 716 C 625 716 624 717 622 717 C 618 715 620 708 620 705 C 613 705 611 700 615 695 C 620 689 627 691 633 683 C 633 683 629 683 629 683 C 612 683 633 668 633 658 C 634 652 625 646 629 639 C 633 632 638 633 642 638 C 646 636 656 630 659 627 C 664 621 665 618 673 615 C 673 615 670 614 670 614 C 670 614 672 594 672 594 C 672 594 676 553 676 553 C 676 553 684 485 684 485 C 684 476 684 469 682 460 C 679 450 664 424 658 413 C 658 413 629 359 629 359 C 629 359 620 362 620 362 C 620 362 593 362 593 362 C 593 362 572 360 572 360 C 563 361 553 365 544 359 C 534 353 531 337 526 330 C 522 325 515 322 510 319 C 508 318 504 316 503 313 C 503 312 504 311 504 310 C 507 299 511 311 517 309 C 523 307 523 303 525 298 C 525 298 526 293 526 293 C 527 286 519 284 514 279 C 512 277 509 274 511 272 C 514 270 518 272 520 272 C 527 275 531 280 539 282 C 537 275 539 275 545 273 C 542 260 529 267 522 258 C 518 253 519 244 528 251 C 531 247 532 243 536 248 C 538 246 540 241 543 240 C 550 237 553 249 553 254 C 559 242 556 229 556 216 C 556 216 556 175 556 175 C 556 175 202 175 202 175 z\" id=\"nat\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 560 175 C 560 175 560 228 560 228 C 560 243 569 238 568 255 C 567 263 563 265 560 269 C 558 273 556 278 556 282 C 556 282 568 277 568 277 C 568 277 568 281 568 281 C 577 279 575 273 580 268 C 586 263 587 268 587 273 C 587 273 587 278 587 278 C 589 277 593 276 595 276 C 601 276 602 283 604 287 C 606 286 609 285 611 285 C 613 285 614 287 618 288 C 618 288 630 288 630 288 C 633 288 635 288 638 289 C 653 293 651 308 652 320 C 653 327 654 334 651 341 C 647 348 639 353 632 357 C 632 357 667 423 667 423 C 679 443 688 458 688 482 C 688 482 684 516 684 516 C 684 516 677 587 677 587 C 677 587 674 615 674 615 C 674 615 698 620 698 620 C 701 621 705 623 708 623 C 710 622 718 615 720 612 C 730 604 737 597 748 590 C 775 574 808 568 838 562 C 848 559 868 554 877 555 C 886 543 890 538 905 541 C 901 531 909 531 917 530 C 913 525 913 522 920 519 C 926 517 928 521 932 520 C 935 519 941 513 947 510 C 953 506 957 508 959 506 C 961 504 961 502 964 497 C 967 492 978 481 983 480 C 985 479 987 480 989 480 C 989 466 999 454 1006 442 C 1012 433 1017 421 1023 413 C 1023 413 1042 394 1042 394 C 1042 394 1053 378 1053 378 C 1053 378 1069 356 1069 356 C 1069 356 1080 342 1080 342 C 1082 340 1086 336 1087 335 C 1088 332 1085 330 1085 327 C 1084 324 1088 319 1090 316 C 1094 313 1097 315 1099 312 C 1102 310 1103 305 1109 303 C 1113 301 1120 302 1131 297 C 1140 293 1145 286 1153 281 C 1159 277 1169 272 1172 266 C 1174 263 1172 256 1171 252 C 1171 252 1171 234 1171 234 C 1171 234 1172 219 1172 219 C 1172 219 1174 175 1174 175 C 1174 175 560 175 560 175 z\" id=\"nrg\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1178 175 C 1178 175 1176 214 1176 214 C 1176 214 1175 230 1175 230 C 1175 230 1175 246 1175 246 C 1175 249 1175 259 1177 261 C 1179 264 1183 263 1184 267 C 1186 271 1183 283 1183 288 C 1189 282 1189 273 1193 266 C 1194 264 1197 260 1199 262 C 1201 265 1199 274 1200 279 C 1204 273 1202 263 1207 258 C 1210 254 1217 257 1218 262 C 1218 267 1215 270 1217 278 C 1222 274 1222 268 1228 266 C 1234 265 1252 272 1249 280 C 1247 286 1236 289 1230 289 C 1232 292 1237 296 1241 297 C 1246 297 1248 293 1260 293 C 1265 285 1277 288 1278 293 C 1278 295 1275 299 1274 301 C 1284 305 1293 302 1303 302 C 1306 302 1312 302 1315 302 C 1322 304 1337 311 1344 314 C 1344 314 1359 319 1359 319 C 1371 322 1386 326 1395 334 C 1398 337 1407 349 1408 353 C 1410 365 1401 379 1393 387 C 1390 390 1387 393 1383 395 C 1379 396 1370 397 1366 397 C 1357 397 1330 394 1322 392 C 1322 392 1313 388 1313 388 C 1309 388 1306 390 1301 388 C 1295 386 1294 383 1287 380 C 1289 391 1296 392 1304 398 C 1308 401 1310 404 1315 406 C 1319 408 1323 409 1327 412 C 1334 419 1331 430 1333 436 C 1335 440 1340 447 1343 451 C 1345 455 1346 459 1350 462 C 1350 462 1369 469 1369 469 C 1372 470 1384 476 1387 475 C 1389 475 1392 472 1394 470 C 1392 465 1389 460 1384 458 C 1381 458 1378 458 1375 457 C 1371 455 1367 450 1365 446 C 1363 441 1364 431 1371 430 C 1375 430 1380 434 1383 436 C 1388 438 1391 439 1397 439 C 1397 439 1423 439 1423 439 C 1430 439 1441 442 1447 441 C 1447 441 1447 439 1447 439 C 1440 437 1430 437 1426 435 C 1420 432 1418 426 1413 422 C 1409 418 1402 415 1401 410 C 1399 404 1408 395 1411 391 C 1420 380 1419 376 1422 372 C 1428 366 1440 366 1448 367 C 1451 360 1452 347 1447 340 C 1443 336 1439 337 1436 331 C 1433 326 1434 317 1430 306 C 1426 297 1421 294 1416 287 C 1428 283 1455 284 1459 299 C 1461 306 1452 309 1450 316 C 1450 318 1450 321 1452 322 C 1456 327 1471 331 1477 329 C 1493 325 1488 312 1489 300 C 1491 290 1496 278 1502 269 C 1504 265 1511 254 1515 253 C 1517 253 1518 253 1520 254 C 1520 249 1518 242 1520 237 C 1526 227 1534 237 1535 244 C 1537 251 1532 257 1532 270 C 1532 285 1533 289 1542 302 C 1543 298 1537 288 1537 282 C 1537 276 1539 270 1541 264 C 1541 260 1542 254 1544 251 C 1544 251 1548 244 1548 244 C 1550 240 1549 236 1554 229 C 1560 222 1565 224 1570 219 C 1574 214 1575 208 1577 204 C 1578 202 1580 199 1583 199 C 1585 199 1587 203 1588 204 C 1591 207 1593 209 1597 210 C 1596 207 1595 203 1595 200 C 1595 194 1598 192 1594 186 C 1593 184 1591 182 1589 181 C 1587 179 1584 177 1582 176 C 1578 174 1566 175 1561 175 C 1561 175 1493 175 1493 175 C 1493 175 1178 175 1178 175 z\" id=\"bar\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1058 692 C 1058 692 1062 700 1062 700 C 1062 700 1064 709 1064 709 C 1064 709 1085 715 1085 715 C 1085 715 1129 730 1129 730 C 1129 730 1154 733 1154 733 C 1155 731 1156 729 1158 727 C 1167 716 1178 731 1185 738 C 1187 741 1189 744 1192 745 C 1202 747 1204 731 1204 724 C 1204 719 1205 707 1202 703 C 1200 700 1197 701 1192 697 C 1186 692 1184 681 1186 673 C 1188 666 1194 663 1200 660 C 1211 654 1223 653 1236 654 C 1236 654 1250 656 1250 656 C 1264 657 1263 645 1270 640 C 1273 638 1275 638 1278 637 C 1278 637 1286 633 1286 633 C 1289 633 1294 634 1298 634 C 1287 619 1270 633 1268 612 C 1268 612 1261 617 1261 617 C 1261 617 1237 625 1237 625 C 1237 625 1208 636 1208 636 C 1203 638 1185 643 1181 642 C 1176 642 1175 637 1170 635 C 1170 635 1163 633 1163 633 C 1163 633 1154 628 1154 628 C 1154 628 1147 625 1147 625 C 1142 622 1139 614 1140 608 C 1140 599 1144 597 1144 587 C 1144 587 1138 553 1138 553 C 1137 542 1147 531 1154 523 C 1154 523 1166 508 1166 508 C 1166 508 1186 478 1186 478 C 1186 478 1197 464 1197 464 C 1198 462 1198 459 1197 457 C 1194 447 1182 441 1172 440 C 1168 440 1163 441 1159 443 C 1150 449 1142 466 1142 477 C 1142 487 1145 488 1143 494 C 1140 504 1125 518 1117 525 C 1117 525 1103 535 1103 535 C 1100 538 1097 542 1095 545 C 1085 558 1083 563 1079 579 C 1077 590 1074 609 1079 619 C 1082 624 1086 625 1090 629 C 1097 637 1103 646 1100 657 C 1100 661 1097 666 1095 669 C 1085 686 1076 689 1058 692 z\" id=\"bot\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1060 713 C 1059 721 1057 725 1057 734 C 1057 744 1056 753 1052 763 C 1050 769 1047 776 1041 779 C 1037 781 1031 780 1026 780 C 1021 780 1016 781 1012 785 C 1006 792 1007 803 993 804 C 990 804 985 803 983 804 C 981 805 975 814 973 817 C 966 825 955 830 945 829 C 931 828 931 808 917 804 C 918 812 919 816 924 823 C 927 826 935 831 935 836 C 935 839 932 844 930 846 C 934 846 939 846 942 845 C 946 844 947 842 952 840 C 952 840 967 836 967 836 C 971 834 979 830 984 831 C 985 831 986 831 987 831 C 994 835 986 840 989 844 C 991 848 1002 850 1007 850 C 1024 850 1040 843 1056 836 C 1070 830 1079 824 1094 831 C 1090 839 1098 844 1107 840 C 1113 838 1118 835 1121 830 C 1123 827 1123 824 1125 821 C 1127 818 1130 817 1133 816 C 1135 816 1137 817 1139 816 C 1143 814 1144 805 1144 801 C 1146 790 1140 777 1143 762 C 1143 762 1152 735 1152 735 C 1144 735 1138 735 1130 734 C 1122 732 1115 729 1108 727 C 1097 723 1071 715 1060 713 z\" id=\"bal\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 888 693 C 886 712 885 718 894 735 C 894 735 896 735 896 735 C 902 728 907 729 915 726 C 921 724 926 722 931 718 C 934 717 939 713 942 717 C 944 719 944 721 944 723 C 945 727 944 731 942 735 C 940 739 936 743 936 748 C 937 752 940 754 943 757 C 946 761 945 763 948 765 C 949 766 954 767 956 767 C 956 767 976 771 976 771 C 977 768 980 758 980 756 C 980 751 972 733 970 727 C 970 727 962 698 962 698 C 961 692 958 685 958 679 C 959 674 960 664 954 661 C 950 660 947 665 938 670 C 930 674 928 674 919 679 C 908 686 902 692 888 693 z\" id=\"ska\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 817 848 C 830 846 840 850 849 848 C 856 846 859 840 865 840 C 873 840 877 851 884 847 C 889 844 890 837 890 832 C 890 832 890 819 890 819 C 890 814 889 813 889 807 C 889 801 891 798 891 790 C 891 785 889 784 888 780 C 887 777 887 772 887 769 C 887 769 867 769 867 769 C 853 769 842 778 834 788 C 823 802 821 815 819 832 C 819 832 817 848 817 848 z\" id=\"hel\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 678 650 C 678 650 687 650 687 650 C 693 650 695 650 700 652 C 703 653 705 654 708 655 C 718 662 717 668 711 676 C 704 684 689 696 688 706 C 687 715 695 726 698 734 C 700 741 697 744 697 751 C 697 758 697 764 701 770 C 705 778 709 779 712 789 C 715 797 716 804 707 807 C 710 812 719 820 716 827 C 713 831 710 831 707 837 C 707 837 723 839 723 839 C 726 840 729 841 732 843 C 734 844 735 845 736 847 C 747 862 724 875 714 882 C 712 883 705 887 704 889 C 702 895 714 895 717 900 C 718 902 718 909 724 912 C 726 913 735 911 738 910 C 748 909 771 905 778 899 C 783 894 787 881 790 875 C 796 863 802 857 814 851 C 812 844 814 838 815 831 C 818 807 827 780 851 769 C 862 763 876 765 888 765 C 888 765 892 740 892 740 C 892 737 888 731 886 728 C 883 722 883 718 883 711 C 883 711 883 693 883 693 C 882 691 877 689 875 687 C 870 684 860 676 860 669 C 859 658 875 655 877 645 C 874 644 872 644 869 644 C 867 645 863 646 861 645 C 856 644 857 637 860 634 C 865 630 868 634 872 627 C 872 627 861 623 861 623 C 864 617 867 619 873 617 C 868 608 864 611 863 602 C 863 594 867 577 870 569 C 870 569 874 558 874 558 C 874 558 829 567 829 567 C 803 573 776 579 752 592 C 735 602 727 611 713 623 C 706 629 703 632 695 637 C 689 641 681 643 678 650 z\" id=\"nth\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 498 922 C 498 922 514 932 514 932 C 514 932 541 946 541 946 C 541 946 558 954 558 954 C 558 954 571 952 571 952 C 571 952 583 954 583 954 C 583 954 592 954 592 954 C 592 954 602 962 602 962 C 602 962 610 964 610 964 C 610 964 630 973 630 973 C 627 962 629 965 631 956 C 631 951 627 939 629 936 C 631 933 640 935 643 936 C 646 940 645 945 648 949 C 654 956 668 957 677 957 C 674 951 676 950 682 947 C 691 943 693 947 700 943 C 712 936 714 925 721 915 C 719 913 716 908 714 907 C 712 907 708 908 706 909 C 702 910 698 911 693 911 C 688 911 675 910 671 908 C 666 906 666 904 659 903 C 659 903 630 900 630 900 C 625 899 618 895 613 894 C 606 894 603 902 598 903 C 596 904 593 901 591 900 C 588 899 583 897 579 897 C 574 898 570 901 566 902 C 560 903 559 899 554 900 C 554 900 534 907 534 907 C 534 907 498 922 498 922 z\" id=\"eng\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 490 820 C 490 820 452 859 452 859 C 447 864 439 871 436 877 C 436 877 475 907 475 907 C 479 910 489 918 493 919 C 497 919 511 913 515 911 C 515 911 549 897 549 897 C 554 895 555 892 558 890 C 561 888 563 890 570 886 C 574 884 580 881 583 878 C 585 875 586 872 588 871 C 591 869 592 871 593 873 C 596 871 599 868 602 868 C 604 867 611 870 614 870 C 622 872 625 871 631 867 C 627 866 623 868 619 866 C 613 863 608 854 600 850 C 595 849 584 845 587 838 C 593 825 620 836 618 818 C 617 811 612 813 610 810 C 608 807 617 802 619 801 C 631 793 634 792 645 802 C 647 801 648 800 649 798 C 652 791 648 774 648 766 C 632 770 618 765 607 753 C 603 754 599 755 596 759 C 585 769 591 789 583 799 C 579 803 571 812 567 814 C 561 817 554 814 547 814 C 538 814 535 816 526 817 C 518 819 498 821 490 820 z\" id=\"iri\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 202 1527 C 204 1527 210 1527 212 1526 C 214 1525 216 1518 217 1516 C 219 1509 222 1502 226 1496 C 230 1489 236 1479 242 1473 C 242 1473 254 1464 254 1464 C 260 1458 263 1453 270 1448 C 278 1442 288 1436 298 1434 C 298 1434 336 1430 336 1430 C 353 1425 369 1402 381 1389 C 381 1389 391 1379 391 1379 C 393 1378 396 1376 397 1374 C 401 1366 392 1362 389 1356 C 389 1356 387 1340 387 1340 C 385 1330 379 1321 370 1316 C 361 1311 358 1317 349 1316 C 343 1315 338 1311 333 1308 C 330 1307 325 1305 324 1302 C 323 1298 330 1291 332 1288 C 336 1281 334 1279 336 1273 C 337 1268 340 1265 340 1260 C 340 1252 335 1256 332 1252 C 328 1248 329 1242 331 1238 C 332 1232 335 1224 340 1220 C 344 1216 347 1217 352 1210 C 361 1200 375 1172 378 1159 C 378 1159 383 1139 383 1139 C 385 1134 387 1130 388 1123 C 388 1114 383 1107 390 1099 C 393 1096 397 1093 401 1093 C 404 1093 410 1096 414 1094 C 416 1094 416 1091 418 1090 C 421 1087 427 1086 430 1086 C 441 1087 439 1095 453 1101 C 453 1101 477 1109 477 1109 C 477 1109 503 1123 503 1123 C 503 1123 523 1130 523 1130 C 523 1130 534 1136 534 1136 C 539 1138 544 1138 547 1139 C 555 1141 558 1149 570 1148 C 575 1148 583 1139 587 1135 C 589 1132 598 1113 598 1110 C 599 1107 598 1106 598 1103 C 599 1096 605 1086 610 1082 C 606 1069 610 1069 609 1059 C 607 1048 598 1044 597 1032 C 597 1028 598 1025 597 1021 C 597 1016 594 1014 593 1012 C 592 1009 592 1007 591 1005 C 590 1003 586 1001 584 999 C 579 994 574 988 568 984 C 563 982 554 983 549 976 C 548 974 547 971 547 969 C 554 967 554 964 555 957 C 555 957 535 947 535 947 C 512 936 496 928 475 912 C 453 895 439 879 412 867 C 390 857 356 848 332 848 C 332 848 290 848 290 848 C 290 848 278 849 278 849 C 259 850 241 852 222 858 C 219 859 205 862 203 864 C 202 865 202 869 202 871 C 202 871 202 1527 202 1527 z\" id=\"mid\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 674 1309 C 673 1311 672 1313 671 1315 C 670 1316 668 1318 667 1319 C 658 1325 653 1312 645 1313 C 645 1313 624 1321 624 1321 C 610 1325 596 1324 582 1324 C 577 1324 568 1325 564 1329 C 564 1329 546 1351 546 1351 C 540 1356 526 1353 517 1359 C 510 1363 506 1371 500 1372 C 497 1372 493 1370 490 1369 C 484 1368 482 1371 475 1369 C 475 1369 452 1360 452 1360 C 440 1358 436 1362 427 1363 C 418 1364 418 1358 408 1364 C 407 1365 404 1366 403 1368 C 400 1372 404 1376 406 1379 C 410 1386 412 1399 418 1406 C 424 1412 442 1414 451 1414 C 454 1414 460 1412 462 1413 C 466 1414 464 1418 470 1422 C 477 1426 494 1429 502 1429 C 516 1429 517 1420 526 1417 C 528 1417 537 1417 539 1417 C 543 1419 544 1421 549 1420 C 549 1420 571 1412 571 1412 C 580 1409 591 1407 600 1407 C 621 1407 621 1410 634 1410 C 650 1410 670 1409 685 1413 C 691 1415 694 1417 699 1421 C 701 1423 705 1427 708 1427 C 711 1428 714 1425 717 1425 C 717 1425 739 1419 739 1419 C 744 1420 753 1424 757 1425 C 762 1426 763 1422 770 1422 C 780 1423 784 1427 791 1429 C 799 1430 807 1428 815 1427 C 815 1427 819 1396 819 1396 C 819 1389 816 1376 813 1370 C 811 1366 808 1363 807 1358 C 805 1353 809 1345 809 1338 C 809 1335 808 1325 807 1324 C 806 1322 801 1320 799 1320 C 799 1320 779 1313 779 1313 C 758 1306 746 1305 724 1305 C 724 1305 692 1308 692 1308 C 686 1309 680 1310 674 1309 z\" id=\"wes\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 674 1307 C 674 1307 698 1304 698 1304 C 720 1301 738 1299 760 1304 C 760 1304 809 1319 809 1319 C 813 1307 808 1308 806 1300 C 806 1296 807 1293 808 1290 C 821 1296 822 1286 836 1285 C 836 1269 826 1273 825 1257 C 825 1251 826 1242 831 1239 C 835 1236 838 1236 843 1232 C 848 1227 848 1222 854 1221 C 860 1219 870 1222 876 1223 C 876 1223 874 1210 874 1210 C 874 1206 874 1202 873 1198 C 872 1190 868 1189 862 1184 C 855 1179 852 1175 842 1177 C 832 1179 829 1185 822 1189 C 822 1189 799 1197 799 1197 C 790 1201 784 1208 774 1210 C 765 1212 758 1207 752 1200 C 750 1197 750 1195 748 1193 C 743 1190 739 1192 734 1191 C 728 1190 721 1184 715 1183 C 711 1183 706 1185 702 1186 C 682 1196 698 1217 680 1232 C 672 1238 656 1244 646 1246 C 640 1247 622 1249 618 1251 C 614 1254 616 1257 613 1259 C 611 1260 608 1260 605 1262 C 605 1262 600 1267 600 1267 C 600 1267 594 1273 594 1273 C 590 1276 586 1284 583 1289 C 583 1289 576 1298 576 1298 C 573 1304 576 1316 582 1319 C 584 1320 588 1320 590 1320 C 590 1320 606 1320 606 1320 C 619 1320 631 1316 642 1310 C 647 1307 648 1304 653 1301 C 661 1298 669 1301 674 1307 z\" id=\"gol\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 816 1367 C 820 1377 822 1381 822 1392 C 822 1392 822 1404 822 1404 C 822 1404 819 1426 819 1426 C 829 1424 844 1425 849 1435 C 850 1438 850 1442 850 1445 C 856 1444 870 1435 876 1432 C 876 1432 906 1419 906 1419 C 911 1415 913 1407 919 1405 C 924 1403 938 1408 944 1409 C 944 1409 951 1409 951 1409 C 964 1409 970 1407 983 1409 C 992 1398 994 1403 1004 1406 C 1006 1403 1014 1390 1015 1387 C 1016 1382 1014 1376 1012 1371 C 1010 1367 1009 1360 1006 1357 C 1003 1352 996 1347 991 1342 C 989 1340 987 1338 986 1335 C 985 1333 985 1330 982 1328 C 980 1325 970 1326 966 1326 C 967 1319 963 1315 960 1309 C 958 1306 957 1302 954 1300 C 950 1298 942 1298 938 1297 C 932 1296 927 1292 923 1287 C 923 1287 913 1273 913 1273 C 913 1273 898 1255 898 1255 C 898 1255 885 1238 885 1238 C 883 1236 880 1229 878 1228 C 875 1226 869 1225 866 1225 C 862 1224 857 1222 853 1225 C 847 1229 850 1237 850 1243 C 850 1252 849 1258 845 1266 C 843 1270 840 1275 839 1279 C 838 1288 844 1287 847 1293 C 848 1297 848 1303 848 1307 C 848 1318 842 1335 839 1346 C 838 1350 836 1358 833 1360 C 830 1363 828 1361 825 1362 C 823 1363 818 1366 816 1367 z\" id=\"tyn\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1104 1335 C 1104 1321 1105 1317 1108 1304 C 1109 1300 1111 1292 1109 1288 C 1107 1284 1101 1280 1098 1277 C 1085 1265 1083 1264 1069 1254 C 1069 1254 1040 1231 1040 1231 C 1040 1231 1022 1219 1022 1219 C 1022 1219 1006 1205 1006 1205 C 1001 1201 995 1197 990 1192 C 986 1187 981 1178 982 1172 C 983 1164 989 1163 985 1155 C 978 1159 976 1173 969 1172 C 966 1171 962 1165 962 1162 C 960 1155 966 1148 964 1145 C 962 1142 958 1143 956 1144 C 952 1144 943 1148 939 1150 C 937 1151 935 1153 934 1155 C 933 1158 936 1161 935 1164 C 935 1166 932 1169 931 1171 C 929 1175 930 1182 931 1186 C 937 1198 952 1206 960 1219 C 964 1227 964 1234 967 1242 C 970 1251 979 1261 986 1267 C 991 1271 997 1274 1004 1276 C 1007 1276 1016 1277 1018 1279 C 1022 1283 1016 1286 1022 1293 C 1029 1301 1059 1319 1070 1327 C 1073 1329 1076 1332 1079 1335 C 1080 1337 1082 1340 1084 1340 C 1087 1341 1100 1336 1104 1335 z\" id=\"adr\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1044 1331 C 1040 1336 1036 1342 1032 1348 C 1031 1350 1029 1353 1030 1356 C 1031 1359 1036 1361 1038 1363 C 1044 1369 1047 1377 1043 1385 C 1039 1391 1035 1386 1031 1390 C 1029 1392 1029 1397 1028 1400 C 1025 1406 1020 1416 1015 1419 C 1007 1425 999 1419 1001 1409 C 995 1406 990 1403 987 1411 C 990 1413 992 1414 993 1418 C 993 1422 990 1429 989 1434 C 989 1434 986 1455 986 1455 C 985 1458 982 1460 979 1461 C 969 1462 961 1453 954 1448 C 950 1444 937 1436 932 1433 C 932 1433 919 1429 919 1429 C 914 1427 912 1423 909 1423 C 906 1422 901 1425 898 1426 C 898 1426 874 1437 874 1437 C 877 1455 856 1455 855 1470 C 854 1481 866 1486 871 1495 C 876 1506 872 1516 868 1527 C 868 1527 1223 1527 1223 1527 C 1223 1527 1224 1509 1224 1509 C 1224 1509 1211 1479 1211 1479 C 1209 1474 1206 1464 1199 1464 C 1195 1464 1196 1471 1189 1475 C 1187 1467 1186 1458 1178 1454 C 1177 1456 1174 1462 1171 1461 C 1170 1460 1169 1457 1168 1455 C 1167 1450 1167 1444 1165 1439 C 1162 1431 1155 1427 1154 1421 C 1153 1412 1162 1412 1165 1411 C 1173 1409 1173 1407 1182 1408 C 1193 1410 1195 1414 1203 1416 C 1204 1408 1203 1409 1195 1405 C 1193 1404 1191 1403 1188 1402 C 1188 1402 1164 1406 1164 1406 C 1161 1406 1157 1407 1155 1406 C 1153 1405 1136 1392 1151 1387 C 1146 1384 1145 1387 1141 1385 C 1138 1384 1133 1379 1131 1376 C 1125 1369 1128 1367 1126 1361 C 1124 1355 1111 1342 1106 1340 C 1102 1338 1088 1343 1084 1346 C 1081 1348 1080 1351 1077 1351 C 1074 1352 1070 1349 1068 1348 C 1059 1344 1052 1337 1044 1331 z\" id=\"ion\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1227 1321 C 1227 1321 1242 1339 1242 1339 C 1237 1336 1231 1334 1225 1333 C 1225 1333 1233 1347 1233 1347 C 1233 1347 1217 1339 1217 1339 C 1217 1339 1221 1347 1221 1347 C 1214 1346 1202 1339 1201 1332 C 1200 1330 1201 1329 1201 1327 C 1184 1333 1203 1353 1209 1360 C 1211 1362 1214 1366 1214 1369 C 1213 1373 1207 1369 1204 1370 C 1202 1370 1201 1371 1199 1372 C 1200 1374 1202 1377 1202 1379 C 1202 1381 1200 1383 1200 1386 C 1202 1390 1213 1394 1217 1395 C 1214 1391 1213 1391 1210 1388 C 1204 1382 1209 1379 1213 1380 C 1215 1381 1219 1384 1221 1385 C 1227 1389 1231 1389 1234 1392 C 1238 1395 1238 1401 1233 1404 C 1233 1404 1233 1413 1233 1413 C 1233 1413 1234 1425 1234 1425 C 1229 1423 1225 1418 1219 1418 C 1217 1418 1213 1418 1213 1421 C 1213 1425 1224 1429 1218 1434 C 1213 1439 1210 1431 1200 1434 C 1200 1434 1209 1455 1209 1455 C 1209 1455 1212 1470 1212 1470 C 1212 1470 1223 1497 1223 1497 C 1225 1496 1228 1493 1231 1493 C 1234 1492 1239 1494 1242 1496 C 1247 1497 1252 1498 1257 1498 C 1267 1498 1268 1496 1279 1498 C 1279 1498 1296 1504 1296 1504 C 1298 1504 1300 1503 1302 1502 C 1305 1502 1306 1502 1309 1501 C 1318 1498 1333 1485 1339 1478 C 1345 1470 1350 1464 1350 1454 C 1340 1451 1353 1448 1352 1438 C 1352 1438 1335 1442 1335 1442 C 1333 1442 1330 1442 1329 1440 C 1328 1436 1332 1436 1329 1429 C 1328 1429 1326 1430 1325 1430 C 1316 1429 1322 1415 1318 1410 C 1314 1404 1302 1405 1305 1399 C 1306 1397 1309 1395 1309 1393 C 1310 1390 1308 1387 1309 1384 C 1309 1381 1311 1379 1311 1376 C 1311 1374 1308 1369 1306 1366 C 1305 1362 1304 1357 1303 1353 C 1297 1354 1293 1358 1289 1357 C 1286 1357 1285 1354 1284 1352 C 1281 1347 1276 1342 1280 1336 C 1284 1328 1294 1326 1300 1319 C 1300 1319 1288 1320 1288 1320 C 1288 1320 1280 1315 1280 1315 C 1280 1315 1259 1313 1259 1313 C 1259 1313 1238 1316 1238 1316 C 1238 1316 1227 1321 1227 1321 z\" id=\"aeg\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1304 1506 C 1296 1516 1288 1514 1277 1515 C 1272 1516 1268 1518 1263 1516 C 1258 1515 1255 1513 1245 1511 C 1245 1511 1227 1509 1227 1509 C 1227 1509 1227 1527 1227 1527 C 1227 1527 1582 1527 1582 1527 C 1582 1527 1582 1515 1582 1515 C 1582 1515 1579 1485 1579 1485 C 1579 1485 1576 1461 1576 1461 C 1576 1461 1571 1462 1571 1462 C 1571 1462 1571 1440 1571 1440 C 1571 1440 1567 1432 1567 1432 C 1567 1432 1572 1420 1572 1420 C 1572 1420 1572 1409 1572 1409 C 1564 1413 1565 1422 1558 1424 C 1551 1427 1543 1417 1534 1423 C 1530 1426 1524 1436 1519 1442 C 1512 1449 1495 1455 1485 1454 C 1478 1454 1473 1450 1467 1447 C 1457 1441 1448 1435 1436 1435 C 1434 1435 1431 1435 1430 1435 C 1419 1438 1424 1450 1419 1457 C 1417 1460 1407 1463 1403 1464 C 1397 1465 1390 1463 1385 1459 C 1385 1459 1378 1451 1378 1451 C 1376 1450 1371 1450 1368 1449 C 1365 1449 1362 1447 1359 1448 C 1353 1450 1355 1458 1350 1469 C 1342 1482 1332 1492 1319 1500 C 1314 1502 1310 1506 1304 1506 z M 1536 1460 C 1534 1467 1530 1468 1527 1474 C 1525 1479 1528 1482 1526 1485 C 1525 1487 1523 1487 1520 1490 C 1515 1493 1513 1498 1504 1502 C 1495 1507 1483 1508 1477 1498 C 1476 1496 1475 1493 1475 1491 C 1474 1485 1481 1487 1487 1482 C 1491 1479 1490 1477 1494 1475 C 1494 1475 1517 1470 1517 1470 C 1524 1467 1528 1462 1536 1460 z\" id=\"eas\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M 1570 1032 C 1570 1032 1546 1047 1546 1047 C 1546 1047 1511 1064 1511 1064 C 1511 1064 1483 1087 1483 1087 C 1483 1087 1462 1097 1462 1097 C 1462 1097 1474 1104 1474 1104 C 1481 1109 1488 1117 1496 1118 C 1505 1119 1513 1102 1521 1115 C 1523 1119 1523 1123 1520 1126 C 1515 1130 1507 1128 1503 1130 C 1500 1132 1499 1135 1496 1137 C 1492 1140 1489 1140 1486 1142 C 1483 1144 1478 1151 1475 1154 C 1471 1158 1467 1161 1461 1159 C 1457 1156 1454 1153 1453 1148 C 1453 1145 1454 1140 1452 1137 C 1449 1133 1442 1133 1438 1131 C 1435 1130 1432 1128 1432 1125 C 1433 1120 1438 1115 1442 1112 C 1444 1110 1448 1109 1449 1106 C 1450 1103 1448 1101 1445 1101 C 1439 1101 1428 1108 1417 1105 C 1408 1102 1409 1097 1402 1094 C 1405 1089 1409 1089 1415 1088 C 1413 1087 1413 1086 1411 1085 C 1404 1084 1389 1089 1384 1093 C 1380 1097 1378 1102 1375 1104 C 1372 1105 1369 1103 1366 1102 C 1368 1105 1371 1109 1371 1112 C 1371 1116 1368 1120 1366 1123 C 1364 1127 1362 1133 1361 1138 C 1359 1145 1360 1152 1357 1158 C 1353 1166 1347 1166 1344 1176 C 1344 1176 1339 1210 1339 1210 C 1336 1216 1332 1214 1329 1218 C 1325 1223 1327 1230 1325 1235 C 1325 1235 1322 1246 1322 1246 C 1322 1250 1325 1253 1327 1256 C 1327 1256 1337 1273 1337 1273 C 1338 1275 1340 1279 1343 1280 C 1347 1281 1350 1277 1355 1275 C 1366 1273 1370 1281 1375 1289 C 1375 1289 1400 1284 1400 1284 C 1406 1283 1414 1283 1419 1280 C 1419 1280 1442 1257 1442 1257 C 1453 1248 1463 1244 1477 1241 C 1477 1241 1501 1237 1501 1237 C 1506 1236 1507 1233 1511 1233 C 1519 1232 1522 1247 1529 1244 C 1530 1243 1532 1242 1533 1241 C 1534 1240 1536 1238 1537 1237 C 1537 1237 1552 1247 1552 1247 C 1552 1247 1553 1242 1553 1242 C 1561 1246 1570 1250 1579 1251 C 1582 1251 1584 1250 1587 1250 C 1603 1249 1607 1247 1622 1242 C 1640 1236 1637 1241 1655 1229 C 1670 1218 1687 1202 1673 1183 C 1670 1179 1665 1173 1660 1171 C 1652 1167 1640 1168 1630 1164 C 1620 1159 1611 1151 1601 1145 C 1592 1140 1583 1136 1573 1133 C 1573 1133 1556 1129 1556 1129 C 1556 1129 1543 1124 1543 1124 C 1538 1123 1533 1122 1530 1117 C 1528 1115 1527 1111 1530 1109 C 1534 1108 1539 1112 1543 1110 C 1547 1108 1546 1102 1547 1098 C 1549 1088 1555 1079 1556 1069 C 1554 1069 1551 1069 1549 1069 C 1544 1068 1540 1063 1544 1058 C 1544 1058 1565 1042 1565 1042 C 1568 1040 1571 1037 1570 1032 z\" id=\"bla\" onClick={this.onClick} onMouseOver={this.onHover}/> </g> </svg> ); } } SvgStandard.propTypes = { game: PropTypes.instanceOf(Game).isRequired, mapData: PropTypes.instanceOf(MapData).isRequired, orders: PropTypes.object, onHover: PropTypes.func, onError: PropTypes.func.isRequired, onSelectLocation: PropTypes.func, onSelectVia: PropTypes.func, onOrderBuilding: PropTypes.func, onOrderBuilt: PropTypes.func, orderBuilding: PropTypes.object, showAbbreviations: PropTypes.bool }; // eslint-disable-line semi","/**\r\n==============================================================================\r\nCopyright (C) 2019 - Philip Paquette, Steven Bocco\r\n\r\n This program is free software: you can redistribute it and/or modify it under\r\n the terms of the GNU Affero General Public License as published by the Free\r\n Software Foundation, either version 3 of the License, or (at your option) any\r\n later version.\r\n\r\n This program is distributed in the hope that it will be useful, but WITHOUT\r\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n details.\r\n\r\n You should have received a copy of the GNU Affero General Public License along\r\n with this program.  If not, see <https:www.gnu.org/licenses/>.\r\n==============================================================================\r\n**/\r\nexport const Coordinates = {\"ADR\":{\"unit\":[\"472.5\",\"201.0\"],\"disl\":[\"479.5\",\"194.0\"]},\"AEG\":{\"unit\":[\"657.5\",\"335.0\"],\"disl\":[\"664.5\",\"328.0\"]},\"ALE\":{\"unit\":[\"705.5\",\"504.0\"],\"disl\":[\"712.5\",\"497.0\"]},\"ANT\":{\"unit\":[\"911.5\",\"304.0\"],\"disl\":[\"918.5\",\"297.0\"]},\"APU\":{\"unit\":[\"443.5\",\"222.0\"],\"disl\":[\"450.5\",\"215.0\"]},\"ARA\":{\"unit\":[\"971.5\",\"416.0\"],\"disl\":[\"978.5\",\"409.0\"]},\"ARM\":{\"unit\":[\"977.5\",\"214.0\"],\"disl\":[\"984.5\",\"207.0\"]},\"ATH\":{\"unit\":[\"581.5\",\"300.0\"],\"disl\":[\"588.5\",\"293.0\"]},\"AUS\":{\"unit\":[\"485.5\",\"382.0\"],\"disl\":[\"492.5\",\"375.0\"]},\"BAL\":{\"unit\":[\"153.5\",\"240.0\"],\"disl\":[\"160.5\",\"233.0\"]},\"BAY\":{\"unit\":[\"682.5\",\"617.0\"],\"disl\":[\"689.5\",\"610.0\"]},\"BER\":{\"unit\":[\"205.5\",\"315.0\"],\"disl\":[\"212.5\",\"308.0\"]},\"BIT\":{\"unit\":[\"759.5\",\"209.0\"],\"disl\":[\"766.5\",\"202.0\"]},\"BLA\":{\"unit\":[\"770.5\",\"143.0\"],\"disl\":[\"777.5\",\"136.0\"]},\"BYZ\":{\"unit\":[\"682.5\",\"242.0\"],\"disl\":[\"689.5\",\"235.0\"]},\"CAP\":{\"unit\":[\"865.5\",\"269.0\"],\"disl\":[\"872.5\",\"262.0\"]},\"CAR\":{\"unit\":[\"303.5\",\"372.0\"],\"disl\":[\"310.5\",\"365.0\"]},\"CHE\":{\"unit\":[\"881.5\",\"59.0\"],\"disl\":[\"888.5\",\"52.0\"]},\"CIL\":{\"unit\":[\"785.5\",\"353.0\"],\"disl\":[\"792.5\",\"346.0\"]},\"CIR\":{\"unit\":[\"236.5\",\"442.0\"],\"disl\":[\"243.5\",\"435.0\"]},\"COR\":{\"unit\":[\"307.5\",\"215.0\"],\"disl\":[\"314.5\",\"208.0\"]},\"CRE\":{\"unit\":[\"650.5\",\"382.0\"],\"disl\":[\"657.5\",\"375.0\"]},\"CYP\":{\"unit\":[\"816.5\",\"374.0\"],\"disl\":[\"823.5\",\"367.0\"]},\"CYR\":{\"unit\":[\"625.5\",\"508.0\"],\"disl\":[\"632.5\",\"501.0\"]},\"DAC\":{\"unit\":[\"621.5\",\"138.0\"],\"disl\":[\"628.5\",\"131.0\"]},\"DAL\":{\"unit\":[\"502.5\",\"178.0\"],\"disl\":[\"509.5\",\"171.0\"]},\"DAM\":{\"unit\":[\"973.5\",\"308.0\"],\"disl\":[\"980.5\",\"301.0\"]},\"EGY\":{\"unit\":[\"728.5\",\"441.0\"],\"disl\":[\"735.5\",\"434.0\"]},\"EPI\":{\"unit\":[\"544.5\",\"267.0\"],\"disl\":[\"551.5\",\"260.0\"]},\"ETR\":{\"unit\":[\"313.5\",\"129.0\"],\"disl\":[\"320.5\",\"122.0\"]},\"GAL\":{\"unit\":[\"774.5\",\"264.0\"],\"disl\":[\"781.5\",\"257.0\"]},\"GAU\":{\"unit\":[\"197.5\",\"83.0\"],\"disl\":[\"204.5\",\"76.0\"]},\"GOP\":{\"unit\":[\"843.5\",\"446.0\"],\"disl\":[\"850.5\",\"439.0\"]},\"GOS\":{\"unit\":[\"509.5\",\"498.0\"],\"disl\":[\"516.5\",\"491.0\"]},\"GOT\":{\"unit\":[\"475.5\",\"428.0\"],\"disl\":[\"482.5\",\"421.0\"]},\"IBE\":{\"unit\":[\"82.5\",\"356.0\"],\"disl\":[\"89.5\",\"349.0\"]},\"ILL\":{\"unit\":[\"536.5\",\"157.0\"],\"disl\":[\"543.5\",\"150.0\"]},\"ION\":{\"unit\":[\"508.5\",\"306.0\"],\"disl\":[\"515.5\",\"299.0\"]},\"ISA\":{\"unit\":[\"806.5\",\"313.0\"],\"disl\":[\"813.5\",\"306.0\"]},\"JER\":{\"unit\":[\"899.5\",\"451.0\"],\"disl\":[\"906.5\",\"444.0\"]},\"LEP\":{\"unit\":[\"468.5\",\"533.0\"],\"disl\":[\"475.5\",\"526.0\"]},\"LIB\":{\"unit\":[\"544.5\",\"428.0\"],\"disl\":[\"551.5\",\"421.0\"]},\"LIG\":{\"unit\":[\"256.5\",\"215.0\"],\"disl\":[\"263.5\",\"208.0\"]},\"LUS\":{\"unit\":[\"18.5\",\"227.0\"],\"disl\":[\"25.5\",\"220.0\"]},\"MAC\":{\"unit\":[\"611.5\",\"231.0\"],\"disl\":[\"618.5\",\"224.0\"]},\"MAR\":{\"unit\":[\"601.5\",\"561.0\"],\"disl\":[\"608.5\",\"554.0\"]},\"MAS\":{\"unit\":[\"253.5\",\"127.0\"],\"disl\":[\"260.5\",\"120.0\"]},\"MAU\":{\"unit\":[\"112.5\",\"410.0\"],\"disl\":[\"119.5\",\"403.0\"]},\"MEM\":{\"unit\":[\"783.5\",\"554.0\"],\"disl\":[\"790.5\",\"547.0\"]},\"MES\":{\"unit\":[\"535.5\",\"378.0\"],\"disl\":[\"542.5\",\"371.0\"]},\"MIL\":{\"unit\":[\"730.5\",\"313.0\"],\"disl\":[\"737.5\",\"306.0\"]},\"MIN\":{\"unit\":[\"709.5\",\"370.0\"],\"disl\":[\"716.5\",\"363.0\"]},\"NAB\":{\"unit\":[\"976.5\",\"528.0\"],\"disl\":[\"983.5\",\"521.0\"]},\"NEA\":{\"unit\":[\"457.5\",\"274.0\"],\"disl\":[\"464.5\",\"267.0\"]},\"NUM\":{\"unit\":[\"343.5\",\"471.0\"],\"disl\":[\"350.5\",\"464.0\"]},\"PET\":{\"unit\":[\"917.5\",\"508.0\"],\"disl\":[\"924.5\",\"501.0\"]},\"PHA\":{\"unit\":[\"400.5\",\"553.0\"],\"disl\":[\"407.5\",\"546.0\"]},\"PUN\":{\"unit\":[\"358.5\",\"338.0\"],\"disl\":[\"365.5\",\"331.0\"]},\"RAV\":{\"unit\":[\"391.5\",\"169.0\"],\"disl\":[\"398.5\",\"162.0\"]},\"REE\":{\"unit\":[\"950.5\",\"594.0\"],\"disl\":[\"957.5\",\"587.0\"]},\"RHA\":{\"unit\":[\"339.5\",\"59.0\"],\"disl\":[\"346.5\",\"52.0\"]},\"ROM\":{\"unit\":[\"368.5\",\"188.0\"],\"disl\":[\"375.5\",\"181.0\"]},\"SAD\":{\"unit\":[\"304.5\",\"264.0\"],\"disl\":[\"311.5\",\"257.0\"]},\"SAG\":{\"unit\":[\"58.5\",\"302.0\"],\"disl\":[\"65.5\",\"295.0\"]},\"SAH\":{\"unit\":[\"269.5\",\"588.0\"],\"disl\":[\"276.5\",\"581.0\"]},\"SAM\":{\"unit\":[\"517.5\",\"56.0\"],\"disl\":[\"524.5\",\"49.0\"]},\"SIC\":{\"unit\":[\"421.5\",\"333.0\"],\"disl\":[\"428.5\",\"326.0\"]},\"SID\":{\"unit\":[\"919.5\",\"355.0\"],\"disl\":[\"926.5\",\"348.0\"]},\"SIN\":{\"unit\":[\"871.5\",\"490.0\"],\"disl\":[\"878.5\",\"483.0\"]},\"SIP\":{\"unit\":[\"865.5\",\"196.0\"],\"disl\":[\"872.5\",\"189.0\"]},\"SPA\":{\"unit\":[\"583.5\",\"322.0\"],\"disl\":[\"590.5\",\"315.0\"]},\"SYR\":{\"unit\":[\"864.5\",\"402.0\"],\"disl\":[\"871.5\",\"395.0\"]},\"TAR\":{\"unit\":[\"128.5\",\"221.0\"],\"disl\":[\"135.5\",\"214.0\"]},\"THA\":{\"unit\":[\"307.5\",\"419.0\"],\"disl\":[\"314.5\",\"412.0\"]},\"THB\":{\"unit\":[\"879.5\",\"591.0\"],\"disl\":[\"886.5\",\"584.0\"]},\"TYE\":{\"unit\":[\"914.5\",\"383.0\"],\"disl\":[\"921.5\",\"376.0\"]},\"TYN\":{\"unit\":[\"395.5\",\"268.0\"],\"disl\":[\"402.5\",\"261.0\"]},\"VEN\":{\"unit\":[\"346.5\",\"100.0\"],\"disl\":[\"353.5\",\"93.0\"]},\"VIN\":{\"unit\":[\"410.5\",\"71.0\"],\"disl\":[\"417.5\",\"64.0\"]}};\r\nexport const SymbolSizes = {\"Fleet\":{\"width\":20.0,\"height\":20.0},\"Army\":{\"width\":20.0,\"height\":20.0},\"Wing\":{\"width\":20.0,\"height\":20.0},\"DislodgedFleet\":{\"width\":20.0,\"height\":20.0},\"DislodgedArmy\":{\"width\":20.0,\"height\":20.0},\"DislodgedWing\":{\"width\":20.0,\"height\":20.0},\"FailedOrder\":{\"width\":20.0,\"height\":20.0},\"SupplyCenter\":{\"width\":10.0,\"height\":10.0},\"BuildUnit\":{\"width\":30.0,\"height\":30.0},\"RemoveUnit\":{\"width\":30.0,\"height\":30.0},\"WaivedBuild\":{\"width\":25.0,\"height\":25.0},\"HoldUnit\":{\"width\":40.0,\"height\":40.0},\"SupportHoldUnit\":{\"width\":46.0,\"height\":46.0},\"ConvoyTriangle\":{\"width\":50.0,\"height\":43.2},\"Stroke\":{\"width\":3.0,\"height\":5.0}};\r\nexport const Colors = {\"ROME\":\"#c48f85\",\"CARTHAGE\":\"royalblue\",\"PERSIA\":\"gray\",\"GREECE\":\"forestgreen\",\"EGYPT\":\"#b9a61c\"};\r\n","/**\r\n==============================================================================\r\nCopyright (C) 2019 - Philip Paquette, Steven Bocco\r\n\r\n This program is free software: you can redistribute it and/or modify it under\r\n the terms of the GNU Affero General Public License as published by the Free\r\n Software Foundation, either version 3 of the License, or (at your option) any\r\n later version.\r\n\r\n This program is distributed in the hope that it will be useful, but WITHOUT\r\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n details.\r\n\r\n You should have received a copy of the GNU Affero General Public License along\r\n with this program.  If not, see <https:www.gnu.org/licenses/>.\r\n==============================================================================\r\n**/\r\n/** Generated with parameters: Namespace(input='src/diplomacy/maps/svg/ancmed.svg', name='SvgAncMed', output='src/gui/maps/ancmed/') **/\r\n import React from 'react'; import PropTypes from 'prop-types'; import './SvgAncMed.css'; import {Coordinates, SymbolSizes, Colors} from \"./SvgAncMedMetadata\"; import {getClickedID, parseLocation, setInfluence} from \"../common/common\"; import {Game} from \"../../../diplomacy/engine/game\"; import {MapData} from \"../../utils/map_data\"; import {UTILS} from \"../../../diplomacy/utils/utils\"; import {Diplog} from \"../../../diplomacy/utils/diplog\"; import {extendOrderBuilding} from \"../../utils/order_building\"; import {Unit} from \"../common/unit\"; import {Hold} from \"../common/hold\"; import {Move} from \"../common/move\"; import {SupportMove} from \"../common/supportMove\"; import {SupportHold} from \"../common/supportHold\"; import {Convoy} from \"../common/convoy\"; import {Build} from \"../common/build\"; import {Disband} from \"../common/disband\"; export class SvgAncMed extends React.Component { constructor(props) { super(props); this.onClick = this.onClick.bind(this); this.onHover = this.onHover.bind(this); } onClick(event) { if (this.props.orderBuilding) return this.handleClickedID(getClickedID(event)); } onHover(event) { return this.handleHoverID(getClickedID(event)); } handleClickedID(id) { const orderBuilding = this.props.orderBuilding; if (!orderBuilding.builder) return this.props.onError('No orderable locations.'); const province = this.props.mapData.getProvince(id); if (!province) throw new Error(`Cannot find a province named ${id}`); const stepLength = orderBuilding.builder.steps.length; if (orderBuilding.path.length >= stepLength) throw new Error(`Order building: current steps count (${orderBuilding.path.length}) should be less than  expected steps count (${stepLength}) (${orderBuilding.path.join(', ')}).`); const lengthAfterClick = orderBuilding.path.length + 1; let validLocations = []; const testedPath = [orderBuilding.type].concat(orderBuilding.path); const value = UTILS.javascript.getTreeValue(this.props.game.ordersTree, testedPath); if (value !== null) { const checker = orderBuilding.builder.steps[lengthAfterClick - 1]; try { const possibleLocations = checker(province, orderBuilding.power); for (let possibleLocation of possibleLocations) { possibleLocation = possibleLocation.toUpperCase(); if (value.includes(possibleLocation)) validLocations.push(possibleLocation); } } catch (error) { return this.props.onError(error); } } if (!validLocations.length) return this.props.onError('Disallowed.'); if (validLocations.length > 1 && orderBuilding.type === 'S' && orderBuilding.path.length >= 2) { /* We are building a support order and we have a multiple choice for a location. */ /* Let's check if next location to choose is a coast. To have a coast: */ /* - all possible locations must start with same 3 characters. */ /* - we expect at least province name in possible locations (e.g. 'SPA' for 'SPA/NC'). */ /* If we have a coast, we will remove province name from possible locations. */ let isACoast = true; let validLocationsNoProvinceName = []; for (let i = 0; i < validLocations.length; ++i) { let location = validLocations[i]; if (i > 0) { /* Compare 3 first letters with previous location. */ if (validLocations[i - 1].substring(0, 3).toUpperCase() !== validLocations[i].substring(0, 3).toUpperCase()) { /* No same prefix with previous location. We does not have a coast. */ isACoast = false; break; } } if (location.length !== 3) validLocationsNoProvinceName.push(location); } if (validLocations.length === validLocationsNoProvinceName.length) { /* We have not found province name. */ isACoast = false; } if (isACoast) { /* We want to choose location in a coastal province. Let's remove province name. */ validLocations = validLocationsNoProvinceName; } } if (validLocations.length > 1) { if (this.props.onSelectLocation) { return this.props.onSelectLocation(validLocations, orderBuilding.power, orderBuilding.type, orderBuilding.path); } else { Diplog.warn(`Forced to select first valid location.`); validLocations = [validLocations[0]]; } } let orderBuildingType = orderBuilding.type; if (lengthAfterClick === stepLength && orderBuildingType === 'M') { const moveOrderPath = ['M'].concat(orderBuilding.path, validLocations[0]); const moveTypes = UTILS.javascript.getTreeValue(this.props.game.ordersTree, moveOrderPath); if (moveTypes !== null) { if (moveTypes.length === 2 && this.props.onSelectVia) { /* This move can be done either regularly or VIA a fleet. Let user choose. */ return this.props.onSelectVia(validLocations[0], orderBuilding.power, orderBuilding.path); } else { orderBuildingType = moveTypes[0]; } } } extendOrderBuilding( orderBuilding.power, orderBuildingType, orderBuilding.path, validLocations[0], this.props.onOrderBuilding, this.props.onOrderBuilt, this.props.onError ); } handleHoverID(id) { if (this.props.onHover) { const province = this.props.mapData.getProvince(id); if (province) { this.props.onHover(province.name, this.getRelatedOrders(province.name)); } } } getRelatedOrders(name) { const orders = []; if (this.props.orders) { for (let powerOrders of Object.values(this.props.orders)) { if (powerOrders) { for (let order of powerOrders) { const pieces = order.split(/ +/); if (pieces[1].slice(0, 3) === name.toUpperCase().slice(0, 3)) orders.push(order); } } } } return orders; } getNeighbors(extraLocation) { const selectedPath = [this.props.orderBuilding.type].concat(this.props.orderBuilding.path); if (extraLocation) selectedPath.push(extraLocation); const possibleNeighbors = UTILS.javascript.getTreeValue(this.props.game.ordersTree, selectedPath); const neighbors = possibleNeighbors ? possibleNeighbors.map(neighbor => parseLocation(neighbor)) : []; return neighbors.length ? neighbors: null; } render() { const classes = {\"_adr\":\"water\",\"_aeg\":\"water\",\"_ale\":\"nopower\",\"_ant\":\"nopower\",\"_apu\":\"nopower\",\"_ara\":\"nopower\",\"_arm\":\"nopower\",\"_ath\":\"nopower\",\"_aus\":\"water\",\"_bal\":\"nopower\",\"_bay\":\"nopower\",\"_ber\":\"water\",\"_bit\":\"nopower\",\"_bla\":\"water\",\"_byz\":\"nopower\",\"_cap\":\"nopower\",\"_car\":\"nopower\",\"_che\":\"nopower\",\"_cil\":\"water\",\"_cir\":\"nopower\",\"_cor\":\"nopower\",\"_cre\":\"nopower\",\"_cyp\":\"nopower\",\"_cyr\":\"nopower\",\"_dac\":\"nopower\",\"_dal\":\"nopower\",\"_dam\":\"nopower\",\"_egy\":\"water\",\"_epi\":\"nopower\",\"_etr\":\"nopower\",\"_gal\":\"nopower\",\"_gau\":\"nopower\",\"_gop\":\"water\",\"_gos\":\"water\",\"_got\":\"water\",\"_ibe\":\"water\",\"_ill\":\"nopower\",\"_ion\":\"water\",\"_isa\":\"nopower\",\"_jer\":\"nopower\",\"_lep\":\"nopower\",\"_lib\":\"water\",\"_lig\":\"water\",\"_lus\":\"nopower\",\"_mac\":\"nopower\",\"_mar\":\"nopower\",\"_mas\":\"nopower\",\"_mau\":\"nopower\",\"_mem\":\"nopower\",\"_mes\":\"water\",\"_mil\":\"nopower\",\"_min\":\"water\",\"_nab\":\"nopower\",\"_nea\":\"nopower\",\"_num\":\"nopower\",\"_pet\":\"nopower\",\"_pha\":\"nopower\",\"_pun\":\"water\",\"_rav\":\"nopower\",\"_ree\":\"water\",\"_rha\":\"nopower\",\"_rom\":\"nopower\",\"_sag\":\"nopower\",\"_sah\":\"nopower\",\"_sad\":\"nopower\",\"_sam\":\"nopower\",\"_sic\":\"nopower\",\"_sid\":\"nopower\",\"_sin\":\"nopower\",\"_sip\":\"nopower\",\"_spa\":\"nopower\",\"_syr\":\"water\",\"_tar\":\"nopower\",\"_tha\":\"nopower\",\"_thb\":\"nopower\",\"_tye\":\"nopower\",\"_tyn\":\"water\",\"_ven\":\"nopower\",\"_vin\":\"nopower\",\"water\":\"water\",\"BriefLabelLayer\":\"smalllabeltext\",\"CurrentNote\":\"currentnotetext\",\"CurrentNote2\":\"currentnotetext\",\"CurrentPhase\":\"currentphasetext\",\"MouseLayer\":\"invisibleContent\"}; const game = this.props.game; const mapData = this.props.mapData; const orders = this.props.orders; /* Current phase. */ const current_phase = (game.phase[0] === '?' || game.phase === 'COMPLETED') ? 'FINAL' : game.phase; /* Notes. */ const nb_centers = []; for (let power of Object.values(game.powers)) { if (!power.isEliminated()) nb_centers.push([power.name.substr(0, 3), power.centers.length]); } /* Sort nb_centers by descending number of centers. */ nb_centers.sort((a, b) => { return -(a[1] - b[1]) || a[0].localeCompare(b[0]); }); const nb_centers_per_power = nb_centers.map((couple) => (couple[0] + ': ' + couple[1])).join(' '); const note = game.note; /* Adding units, influence and orders. */ const renderedUnits = []; const renderedDislodgedUnits = []; const renderedOrders = []; const renderedOrders2 = []; const renderedHighestOrders = []; for (let power of Object.values(game.powers)) if (!power.isEliminated()) { for (let unit of power.units) { renderedUnits.push( <Unit key={unit} unit={unit} powerName={power.name} isDislodged={false} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } for (let unit of Object.keys(power.retreats)) { renderedDislodgedUnits.push( <Unit key={unit} unit={unit} powerName={power.name} isDislodged={true} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } for (let center of power.centers) { setInfluence(classes, mapData, center, power.name); } for (let loc of power.influence) { if (!mapData.supplyCenters.has(loc)) setInfluence(classes, mapData, loc, power.name); } if (orders) { const powerOrders = (orders && orders.hasOwnProperty(power.name) && orders[power.name]) || []; for (let order of powerOrders) { const tokens = order.split(/ +/); if (!tokens || tokens.length < 3) continue; const unit_loc = tokens[1]; if (tokens[2] === 'H') { renderedOrders.push( <Hold key={order} loc={unit_loc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else if (tokens[2] === '-') { const destLoc = tokens[tokens.length - (tokens[tokens.length - 1] === 'VIA' ? 2 : 1)]; renderedOrders.push( <Move key={order} srcLoc={unit_loc} dstLoc={destLoc} powerName={power.name} phaseType={game.getPhaseType()} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else if (tokens[2] === 'S') { const destLoc = tokens[tokens.length - 1]; if (tokens.includes('-')) { const srcLoc = tokens[4]; renderedOrders2.push( <SupportMove key={order} loc={unit_loc} srcLoc={srcLoc} dstLoc={destLoc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else { renderedOrders2.push( <SupportHold key={order} loc={unit_loc} dstLoc={destLoc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } } else if (tokens[2] === 'C') { const srcLoc = tokens[4]; const destLoc = tokens[tokens.length - 1]; if ((srcLoc !== destLoc) && (tokens.includes('-'))) { renderedOrders2.push( <Convoy key={order} loc={unit_loc} srcLoc={srcLoc} dstLoc={destLoc} powerName={power.name} coordinates={Coordinates} colors={Colors} symbolSizes={SymbolSizes}/> ); } } else if (tokens[2] === 'B') { renderedHighestOrders.push( <Build key={order} unitType={tokens[0]} loc={unit_loc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } else if (tokens[2] === 'D') { renderedHighestOrders.push( <Disband key={order} loc={unit_loc} phaseType={game.getPhaseType()} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } else if (tokens[2] === 'R') { const destLoc = tokens[3]; renderedOrders.push( <Move key={order} srcLoc={unit_loc} dstLoc={destLoc} powerName={power.name} phaseType={game.getPhaseType()} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else { throw new Error(`Unknown error to render (${order}).`); } } } } if (this.props.orderBuilding && this.props.orderBuilding.path.length) { const clicked = parseLocation(this.props.orderBuilding.path[0]); const province = this.props.mapData.getProvince(clicked); if (!province) throw new Error(('Unknown clicked province ' + clicked)); const clickedID = province.getID(classes); if (!clicked) throw new Error(`Unknown path (${clickedID}) for province (${clicked}).`); classes[clickedID] = 'provinceRed'; const neighbors = this.getNeighbors(); if (neighbors) { for (let neighbor of neighbors) { const neighborProvince = this.props.mapData.getProvince(neighbor); if (!neighborProvince) throw new Error('Unknown neighbor province ' + neighbor); const neighborID = neighborProvince.getID(classes); if (!neighborID) throw new Error(`Unknown neoghbor path (${neighborID}) for province (${neighbor}).`); classes[neighborID] = neighborProvince.isWater() ? 'provinceBlue' : 'provinceGreen'; } } } if (this.props.showAbbreviations === false) { classes['BriefLabelLayer'] = 'visibilityHidden'; } return ( <svg className=\"SvgAncMed\" colorRendering=\"optimizeQuality\" height=\"700px\" imageRendering=\"optimizeQuality\" preserveAspectRatio=\"xMinYMin\" shapeRendering=\"geometricPrecision\" textRendering=\"optimizeLegibility\" viewBox=\"0 0 1030 700\" width=\"1030px\" xmlns=\"http://www.w3.org/2000/svg\"> <title>Ancient Med Map</title> <defs> <symbol id=\"WaivedBuild\" overflow=\"visible\" viewBox=\"0 0 100 100\"> <linearGradient gradientUnits=\"userSpaceOnUse\" id=\"symWBGradient\" x1=\"15\" x2=\"100\" y1=\"100\" y2=\"10\"> <stop offset=\"20%\" stopColor=\"yellow\" stopOpacity=\"1\"/> <stop offset=\"95%\" stopColor=\"yellow\" stopOpacity=\"0\"/> </linearGradient> <linearGradient gradientUnits=\"userSpaceOnUse\" id=\"symShadowWBGradient\" x1=\"15\" x2=\"100\" y1=\"100\" y2=\"10\"> <stop offset=\"20%\" stopColor=\"black\" stopOpacity=\"0.5\"/> <stop offset=\"90%\" stopColor=\"black\" stopOpacity=\"0\"/> </linearGradient> <g> <polygon fill=\"url(#symShadowWBGradient)\" points=\"40,100 100,35 95,30 40,85 13,65 10,70\" transform=\"translate(1 7)\"/> <polygon fill=\"url(#symWBGradient)\" points=\"40,100 100,35 90,20 40,85 13,65 10,70\" stroke=\"black\" strokeWidth=\"0.5\"/> </g> </symbol> <symbol id=\"BuildUnit\" overflow=\"visible\" viewBox=\"-23.5 -23.5 153 153\"> <g> <g fill=\"none\" opacity=\"0.5\" stroke=\"black\" strokeWidth=\"7\" transform=\"translate(6 6)\"> <circle cx=\"50\" cy=\"50\" r=\"10\"/> <circle cx=\"50\" cy=\"50\" r=\"30\"/> <circle cx=\"50\" cy=\"50\" r=\"50\"/> <circle cx=\"50\" cy=\"50\" r=\"70\"/> </g> <g fill=\"none\" stroke=\"yellow\" strokeWidth=\"7\"> <circle cx=\"50\" cy=\"50\" r=\"10\"/> <circle cx=\"50\" cy=\"50\" r=\"30\"/> <circle cx=\"50\" cy=\"50\" r=\"50\"/> <circle cx=\"50\" cy=\"50\" r=\"70\"/> </g> </g> </symbol> <symbol id=\"RemoveUnit\" overflow=\"visible\" viewBox=\"-2.5 -2.5 15.5 15.5\"> <g fill=\"none\" stroke=\"red\" strokeWidth=\"1\"> <circle cx=\"5\" cy=\"5\" r=\"7\"/> <line x1=\"-2\" x2=\"12\" y1=\"-2\" y2=\"12\"/> <line x1=\"-2\" x2=\"12\" y1=\"12\" y2=\"-2\"/> </g> </symbol> <symbol id=\"FailedOrder\" overflow=\"visible\" viewBox=\"0 0 35 35\"> <g> <polygon className=\"shadow\" points=\"0,0 12,0 17,6 22,0 35,0 22,17 32,34 19,34 15,27 9,34 -4,34 10,17\" strokeWidth=\"1\" transform=\"translate(3.5,3.5)\"/> <polygon fill=\"red\" fillOpacity=\"1\" points=\"0,0 12,0 17,6 22,0 35,0 22,17 32,34 19,34 15,27 9,34 -4,34 10,17\" stroke=\"black\" strokeWidth=\"3%\"/> </g> </symbol> <symbol id=\"SupplyCenter\" overflow=\"visible\" viewBox=\"-0.375 -0.375 10.75 10.75\"> <g> <circle cx=\"5\" cy=\"5\" r=\"3\" stroke=\"black\" strokeWidth=\"0.4\"/> <circle cx=\"5\" cy=\"5\" fill=\"none\" r=\"5\" stroke=\"black\" strokeWidth=\"0.75\"/> </g> </symbol> <symbol id=\"HoldUnit\" overflow=\"visible\" viewBox=\"-5 -5 76.6 76.6\"> <g> <polygon fill=\"none\" points=\"47.1,0.0 66.6,19.5 66.6, 47.1 47.1,66.6 19.5,66.6 0.0,47.1 0.0,19.5 19.5,0.0\" stroke=\"black\" strokeWidth=\"10\"/> <polygon fill=\"none\" points=\"47.1,0.0 66.6,19.5 66.6, 47.1 47.1,66.6 19.5,66.6 0.0,47.1 0.0,19.5 19.5,0.0\" strokeWidth=\"6\"/> </g> </symbol> <symbol id=\"SupportHoldUnit\" overflow=\"visible\" viewBox=\"-5 -5 86.6 86.6\"> <g> <polygon fill=\"none\" opacity=\"0.45\" points=\"54.2,0.0 76.6,22.4 76.6,54.2 54.2,76.6 22.4,76.6 0.0,54.2 0.0,22.4 22.4,0.0\" stroke=\"black\" strokeWidth=\"10\"/> <polygon fill=\"none\" points=\"54.2,0.0 76.6,22.4 76.6,54.2 54.2,76.6 22.4,76.6 0.0,54.2 0.0,22.4 22.4,0.0\" strokeDasharray=\"5,5\" strokeWidth=\"6\"/> </g> </symbol> <symbol id=\"ConvoyTriangle\" overflow=\"visible\" viewBox=\"-9 -10 84.4 72.4\"> <g> <polygon fill=\"none\" opacity=\"0.45\" points=\"33.2,0.0 66.4,57.4 0.0,57.4\" stroke=\"black\" strokeWidth=\"10\"/> <polygon fill=\"none\" points=\"33.2,0.0 66.4,57.4 0.0,57.4\" strokeDasharray=\"15,5\" strokeWidth=\"6\"/> </g> </symbol> <symbol id=\"Army\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"black\" height=\"13\" opacity=\"0.40\" rx=\"4\" stroke=\"black\" strokeWidth=\"1\" width=\"23\" x=\"2\" y=\"2\"/> <rect height=\"13\" rx=\"4\" stroke=\"black\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"13\" x=\"6\" y=\"6\"/> <rect height=\"1\" width=\"14\" x=\"5\" y=\"7\"/> <rect height=\"1\" width=\"12\" x=\"6\" y=\"8\"/> <rect height=\"1\" width=\"10\" x=\"7\" y=\"9\"/> <rect height=\"3\" width=\"5\" x=\"10\" y=\"3\"/> <rect height=\"1.5\" width=\"1\" x=\"15\" y=\"4.5\"/> <line x1=\"3\" x2=\"10\" y1=\"4\" y2=\"4\"/> </g> </g> </symbol> <symbol id=\"Fleet\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"black\" height=\"13\" opacity=\"0.40\" rx=\"4\" stroke=\"black\" strokeWidth=\"1\" width=\"23\" x=\"2\" y=\"2\"/> <rect height=\"13\" rx=\"4\" stroke=\"black\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"16.5\" x=\"3\" y=\"7\"/> <rect height=\"1\" width=\"15\" x=\"4\" y=\"8\"/> <rect height=\"1\" width=\"13.5\" x=\"5\" y=\"9\"/> <rect height=\"1\" width=\"2.75\" x=\"13.5\" y=\"6\"/> <rect height=\"2\" width=\"4\" x=\"7\" y=\"5\"/> <rect height=\"1\" width=\"1\" x=\"8.5\" y=\"4\"/> <rect height=\"1\" width=\"1\" x=\"6\" y=\"6\"/> </g> </g> </symbol> <symbol id=\"DislodgedArmy\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"red\" height=\"13\" opacity=\"0.50\" rx=\"4\" stroke=\"red\" strokeWidth=\"1\" width=\"23\" x=\"3\" y=\"3\"/> <rect height=\"13\" rx=\"4\" stroke=\"red\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"13\" x=\"6\" y=\"6\"/> <rect height=\"1\" width=\"14\" x=\"5\" y=\"7\"/> <rect height=\"1\" width=\"12\" x=\"6\" y=\"8\"/> <rect height=\"1\" width=\"10\" x=\"7\" y=\"9\"/> <rect height=\"3\" width=\"5\" x=\"10\" y=\"3\"/> <rect height=\"1.5\" width=\"1\" x=\"15\" y=\"4.5\"/> <line x1=\"3\" x2=\"10\" y1=\"4\" y2=\"4\"/> </g> </g> </symbol> <symbol id=\"DislodgedFleet\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"red\" height=\"13\" opacity=\"0.50\" rx=\"4\" stroke=\"red\" strokeWidth=\"1\" width=\"23\" x=\"3\" y=\"3\"/> <rect height=\"13\" rx=\"4\" stroke=\"red\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"16.5\" x=\"3\" y=\"7\"/> <rect height=\"1\" width=\"15\" x=\"4\" y=\"8\"/> <rect height=\"1\" width=\"13.5\" x=\"5\" y=\"9\"/> <rect height=\"1\" width=\"2.75\" x=\"13.5\" y=\"6\"/> <rect height=\"2\" width=\"4\" x=\"7\" y=\"5\"/> <rect height=\"1\" width=\"1\" x=\"8.5\" y=\"4\"/> <rect height=\"1\" width=\"1\" x=\"6\" y=\"6\"/> </g> </g> </symbol> <marker id=\"arrow\" markerHeight=\"4\" markerUnits=\"strokeWidth\" markerWidth=\"4\" orient=\"auto\" refX=\"5\" refY=\"5\" viewBox=\"0 0 10 10\"><path d=\"M 0 0 L 10 5 L 0 10 z\"/></marker> <pattern height=\"10\" id=\"patternRed\" patternTransform=\"scale(0.56 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"red\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"pink\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternBrown\" patternTransform=\"scale(0.56 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"peru\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"antiquewhite\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternGreen\" patternTransform=\"scale(0.56 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"seagreen\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"yellowgreen\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternBlue\" patternTransform=\"scale(0.56 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"CornflowerBlue\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"cyan\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternBlack\" patternTransform=\"scale(0.56 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"black\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"gray\" height=\"10\" width=\"10\" x=\"0\" y=\"5\"/> </pattern> </defs> <g id=\"MapLayer\"> <rect fill=\"antiquewhite\" height=\"660\" width=\"1030\" x=\"0\" y=\"0\"/> <polygon className={classes['_adr']} id=\"_adr\" points=\"530,249 529,255 523,252 509,252 504,253 500,250 490,245 484,244 460,227 460,222 464,219 465,216 461,214 452,214 446,215 438,213 432,208 425,198 419,184 417,179 414,176 410,170 397,162 389,154 383,140 384,137 388,135 388,131 384,127 385,121 393,115 399,111 406,110 415,111 419,115 419,118 415,118 412,120 413,129 420,139 422,138 425,133 427,130 430,129 433,130 436,135 437,140 441,145 443,148 441,149 439,149 437,151 439,154 445,159 450,161 454,163 454,167 456,169 459,168 463,168 467,171 472,176 476,180 481,182 482,184 480,185 476,184 474,185 476,186 479,187 482,189 485,192 488,193 488,190 491,189 493,192 498,196 501,199 502,201 506,203 511,204 513,203 516,204 515,206 513,206 513,208 515,210 518,214 520,217 523,218 527,219 529,220 530,224 531,232 530,241 530,249\"/> <polygon className={classes['_aeg']} id=\"_aeg\" points=\"623,365 628,373 637,381 646,385 652,386 655,388 656,389 659,390 670,387 674,388 683,386 690,379 698,367 703,355 704,342 705,339 709,338 715,335 719,334 720,332 714,332 702,332 699,328 704,327 703,324 694,322 690,316 690,312 692,310 691,305 686,302 684,303 683,305 680,305 679,304 676,304 675,301 678,299 676,296 676,292 678,292 678,294 679,296 682,298 683,294 683,292 682,289 682,283 683,276 680,275 669,277 668,272 668,266 666,265 664,259 665,255 669,253 676,251 677,248 667,249 663,250 658,248 651,249 643,249 635,253 630,256 625,255 625,258 628,259 630,261 637,270 637,272 635,272 628,265 625,265 625,268 630,273 630,274 627,275 622,269 619,269 618,272 625,278 620,279 610,268 613,265 610,262 607,264 604,268 604,275 605,281 611,284 615,287 616,292 612,290 608,291 608,296 614,295 617,299 622,304 628,304 634,309 635,314 639,317 643,318 643,322 641,323 639,321 636,320 634,321 637,331 633,332 629,328 621,326 618,328 616,331 620,337 623,341 623,344 620,345 616,342 614,341 612,343 616,351 619,355 622,360 623,365\"/> <polygon className={classes['_ale']} id=\"_ale\" points=\"659,475 666,476 670,479 673,482 684,482 706,484 725,487 733,488 749,490 763,491 771,491 779,490 786,486 794,480 806,471 808,476 813,477 817,479 821,483 826,489 829,495 832,501 832,506 822,505 816,506 810,508 805,512 799,511 794,518 786,527 780,532 772,532 764,529 762,528 756,528 752,531 744,537 738,538 733,538 727,537 724,536 720,537 715,540 711,545 707,548 703,548 699,544 695,542 689,541 684,540 682,537 681,533 681,528 684,524 686,520 684,515 680,509 676,507 671,507 663,503 661,497 660,492 656,488 656,481 659,475\"/> <polygon className={classes['_ant']} id=\"_ant\" points=\"917,288 930,295 937,301 938,304 935,307 935,311 941,317 949,322 950,332 946,339 944,343 935,341 930,339 925,334 918,335 913,338 907,342 901,342 900,337 897,331 893,327 891,314 893,310 896,307 896,304 893,302 897,298 898,293 904,286 913,281 916,280 917,288\"/> <polygon className={classes['_apu']} id=\"_apu\" points=\"419,184 425,198 433,209 438,213 446,215 453,214 462,214 465,215 465,218 460,222 460,226 465,230 475,237 484,244 491,245 500,249 504,253 508,261 505,268 501,267 494,262 488,258 483,256 480,256 478,257 471,255 468,251 458,246 451,244 441,237 436,235 433,229 429,223 422,218 413,218 407,219 406,209 401,202 400,194 404,188 411,188 419,184\"/> <polygon className={classes['_ara']} id=\"_ara\" points=\"1030,491 1030,364 1024,367 1017,367 1001,359 991,356 985,356 969,365 961,365 952,368 947,373 940,380 940,387 939,392 943,396 943,400 935,412 928,412 924,418 917,419 912,422 917,434 917,444 919,447 920,452 943,454 952,457 964,463 979,464 984,466 988,472 995,477 1001,479 1006,479 1017,490 1030,491\"/> <polygon className={classes['_arm']} id=\"_arm\" points=\"1030,160 1030,263 1024,260 1015,259 1010,254 1006,253 1002,251 996,250 984,251 976,249 968,248 962,250 957,253 951,255 945,257 939,261 934,257 929,254 927,252 926,249 929,246 931,243 931,239 930,237 930,230 934,226 938,221 941,215 942,212 942,207 952,202 955,198 955,189 959,182 969,176 973,171 973,159 982,158 997,158 1004,161 1013,165 1019,164 1030,160\"/> <polygon className={classes['_ath']} id=\"_ath\" points=\"559,295 558,299 552,298 552,301 555,304 561,307 565,313 570,316 576,316 582,315 587,316 600,316 612,320 614,324 618,328 621,326 627,327 632,331 637,332 635,327 634,321 636,319 639,321 641,323 643,322 643,318 640,317 635,314 634,308 629,304 622,303 618,300 616,297 615,295 611,296 608,296 608,290 611,289 613,290 616,291 615,287 611,284 605,280 600,280 594,282 589,287 582,287 577,285 573,286 565,294 559,295\"/> <polygon className={classes['_aus']} id=\"_aus\" points=\"450,326 447,334 445,340 443,346 443,352 445,357 445,362 443,366 439,367 433,368 429,363 427,361 423,360 418,358 411,355 408,353 404,350 404,360 401,371 397,377 391,384 385,391 424,403 448,407 483,412 522,413 523,381 522,363 520,343 513,341 503,338 494,333 483,326 475,318 471,322 469,327 466,329 462,330 458,327 458,326 450,326\"/> <g className={classes['_bal']} id=\"_bal\"> <polygon points=\"195,253 190,255 186,258 181,260 183,265 187,266 192,270 195,271 198,265 201,260 197,259 195,254 \"/> <path className=\"water\" d=\"M 204,208 L 214,213 L 224,220 L 233,230 L 238,239 L 238,252 L 237,260 L 225,273 L 210,283 L 194,290 L 177,293 L 164,294 L 139,294 L 135,288 L 130,278 L 127,270 L 132,263 L 138,255 L 139,248 L 147,243 L 149,237 L 154,227 L 157,227 L 162,223 L 172,221 L 179,220 L 189,216 L 196,210 L 203,210 L 204,208 z M 195,253 L 190,255 L 186,258 L 181,260 L 183,265 L 187,266 L 192,270 L 195,271 L 198,265 L 201,260 L 197,259 L 195,254 z\" fillRule=\"nonzero\"/> </g> <polygon className={classes['_bay']} id=\"_bay\" points=\"483,660 830,661 830,657 833,655 834,652 834,647 832,644 831,642 831,637 832,633 835,629 839,626 842,623 846,619 847,615 840,612 832,607 825,606 817,612 804,619 795,619 788,612 778,604 772,601 762,601 756,603 752,605 742,605 735,599 729,593 709,593 706,590 698,583 689,582 680,585 673,586 666,587 663,589 655,594 648,600 646,606 644,612 638,616 626,621 618,618 609,616 604,618 598,615 590,612 572,612 564,614 555,614 532,606 527,606 521,611 515,612 508,609 497,606 490,601 485,606 476,611 471,614 467,613 463,613 463,618 464,624 461,632 461,637 466,640 473,644 478,648 483,660\"/> <polygon className={classes['_ber']} id=\"_ber\" points=\"299,291 290,297 283,304 278,314 274,326 273,341 277,352 269,352 260,348 252,348 242,349 236,349 226,348 212,349 210,350 202,350 184,350 176,351 170,353 164,353 159,355 155,348 152,342 144,333 136,328 128,323 121,321 121,314 125,307 133,300 140,295 152,294 167,294 183,292 201,287 217,279 228,270 237,259 250,260 267,260 282,260 297,255 301,258 302,263 305,267 303,270 302,273 302,278 301,284 300,289 299,291\"/> <polygon className={classes['_bit']} id=\"_bit\" points=\"833,173 819,173 814,175 807,179 802,180 793,183 784,189 771,200 763,208 757,215 752,217 745,218 748,222 752,223 755,228 755,232 754,239 757,243 763,249 768,242 772,234 777,230 787,229 798,226 806,220 813,213 815,205 818,200 824,196 828,191 829,186 832,180 833,177 833,173\"/> <polygon className={classes['_bla']} id=\"_bla\" points=\"724,219 729,220 737,220 745,219 757,215 763,208 772,200 784,189 793,183 801,180 808,179 815,174 819,173 833,173 842,174 848,176 849,177 855,177 862,178 876,177 884,178 892,177 896,177 906,173 915,172 921,171 925,171 928,168 933,166 940,160 945,155 947,154 949,148 952,144 953,140 951,137 949,134 948,129 942,125 935,122 927,121 920,119 913,116 906,112 899,111 890,108 883,103 878,100 871,97 864,96 858,95 854,92 852,90 848,89 844,91 841,91 839,89 842,86 842,83 846,83 849,83 854,81 857,74 861,72 862,60 860,58 857,58 852,53 852,52 856,51 859,49 862,43 873,35 873,31 866,31 850,39 846,43 836,49 829,52 819,60 813,66 809,69 806,70 802,73 800,75 802,80 805,81 807,84 809,88 817,88 819,85 824,85 829,81 832,81 835,83 834,86 834,89 833,92 829,93 826,94 823,93 817,95 815,99 810,101 804,105 801,109 797,116 791,115 786,114 783,104 773,101 772,98 768,98 766,99 764,97 766,94 770,93 774,90 779,86 781,83 780,80 774,80 769,80 765,82 761,81 755,82 747,83 743,82 746,77 741,75 737,78 734,78 730,81 718,91 712,98 710,101 709,106 706,112 702,121 695,129 693,136 694,144 696,160 688,168 688,175 683,188 686,192 688,197 693,201 696,205 702,208 706,210 709,214 713,215 718,217 724,219\"/> <g className={classes['_byz']} id=\"_byz\"> <polygon points=\"726,229 730,232 735,234 739,234 741,235 740,237 736,237 723,238 721,239 723,242 725,243 725,244 721,245 717,245 714,246 708,248 704,249 701,248 697,247 696,250 692,253 687,254 681,256 673,261 669,265 667,271 668,277 679,275 683,276 689,276 699,280 710,277 720,281 731,264 738,259 749,260 762,252 763,248 753,239 754,234 756,228 751,223 748,222 746,219 739,220 732,220 728,220 724,218 720,217 714,215 708,213 706,210 696,205 690,204 680,214 679,223 669,234 667,249 677,248 676,251 669,253 665,255 664,259 666,265 668,260 672,257 678,254 682,250 685,244 686,238 688,235 694,232 700,229 704,227 709,227 716,228 720,227 723,225 725,220 728,221 726,229\"/> <polygon className=\"water\" points=\"666,265 668,260 672,257 678,254 682,250 685,244 686,238 688,235 694,232 700,229 704,227 709,227 716,228 720,227 723,225 725,220 728,221 726,229 726,229 730,232 735,234 739,234 741,235 740,237 736,237 723,238 721,239 723,242 725,243 725,244 721,245 717,245 714,246 708,248 704,249 701,248 697,247 696,250 692,253 687,254 681,256 673,261\"/> </g> <polygon className={classes['_cap']} id=\"_cap\" points=\"893,302 897,299 898,294 902,288 908,283 912,280 916,280 918,275 923,274 931,272 937,267 939,262 927,252 926,248 931,244 931,239 930,238 930,231 942,214 943,206 932,210 924,210 917,216 906,217 897,223 877,224 872,231 865,233 855,233 847,231 838,237 837,240 840,244 840,259 846,266 846,270 838,274 834,279 832,285 834,289 839,292 839,303 837,307 837,313 848,324 854,323 863,314 879,314 883,308 888,303 893,302\"/> <polygon className={classes['_car']} id=\"_car\" points=\"345,384 345,379 345,376 349,372 355,364 357,358 356,354 353,353 348,356 341,356 334,352 329,349 324,348 320,350 313,351 301,351 289,349 280,352 276,352 270,352 260,348 252,347 242,349 236,349 233,362 242,374 242,381 245,386 254,391 261,394 274,393 286,397 297,399 319,396 327,392 333,386 338,384 345,384\"/> <polygon className={classes['_che']} id=\"_che\" points=\"1030,160 1030,0 646,1 658,8 667,18 673,38 676,51 684,54 691,61 691,66 689,72 691,78 698,89 709,101 711,98 719,90 728,83 734,78 737,77 740,76 746,76 745,79 743,81 744,83 750,83 756,82 760,81 765,82 768,80 774,80 780,79 781,82 779,86 772,91 766,94 764,97 766,99 769,98 771,98 772,101 778,103 783,103 784,109 786,114 791,116 797,115 800,110 804,105 810,101 815,99 817,95 823,93 826,93 829,92 833,92 834,89 834,85 835,83 832,82 829,81 827,83 824,85 819,85 817,88 813,88 809,88 807,83 805,80 802,80 801,75 805,70 810,69 814,65 819,60 823,57 829,52 834,50 839,48 845,44 849,39 856,36 860,34 866,31 873,31 873,35 868,39 862,43 860,49 855,51 852,51 851,53 854,55 857,57 860,58 861,59 862,65 861,72 858,74 854,80 850,82 842,83 843,85 839,89 841,91 844,91 848,90 851,90 855,93 861,96 871,97 879,101 889,107 900,111 906,112 915,117 920,119 928,121 935,122 942,125 947,129 950,134 953,140 953,143 950,147 954,149 966,157 972,159 981,158 998,158 1013,165 1018,165 1030,160\"/> <polygon className={classes['_cil']} id=\"_cil\" points=\"902,353 889,354 877,357 865,360 852,366 844,370 838,376 832,376 819,376 818,380 814,380 811,381 807,384 801,385 781,391 767,394 756,395 762,383 766,372 766,355 764,346 770,345 772,339 775,332 778,329 784,329 794,330 799,333 804,334 810,336 817,339 824,340 829,338 834,337 838,334 843,328 846,324 849,324 855,322 863,315 874,314 880,314 884,308 888,303 893,303 896,304 897,307 893,310 891,313 892,317 893,326 897,330 900,336 902,347 902,353\"/> <polygon className={classes['_cir']} id=\"_cir\" points=\"245,386 261,394 270,394 276,393 286,397 280,405 280,414 280,422 277,428 278,433 282,438 280,439 280,446 288,458 295,460 297,463 299,470 305,473 306,479 300,479 291,483 283,482 277,483 267,491 257,488 249,483 243,476 235,473 227,474 222,475 217,474 216,466 208,454 206,440 212,430 207,416 207,409 214,398 224,390 245,386\"/> <polygon className={classes['_cor']} id=\"_cor\" points=\"327,193 328,194 328,200 327,203 328,205 328,210 328,215 326,218 325,222 325,227 323,231 320,234 318,234 315,233 311,231 311,230 312,228 312,226 309,226 309,224 310,222 311,220 308,219 308,217 310,216 310,214 308,213 310,209 311,206 315,205 319,205 323,204 324,203 324,196 327,193\"/> <polygon className={classes['_cre']} id=\"_cre\" points=\"659,390 664,389 670,387 674,388 683,385 684,389 687,390 691,389 695,388 698,389 701,387 703,387 704,390 701,393 694,393 690,394 686,395 681,398 674,399 671,397 648,396 645,393 645,387 647,386 652,386 655,387 656,389 659,390\"/> <polygon className={classes['_cyp']} id=\"_cyp\" points=\"819,376 819,380 815,380 810,381 808,383 805,385 801,385 801,387 804,393 810,396 816,397 820,397 823,395 825,393 829,392 830,390 832,388 835,388 841,387 841,386 838,383 838,381 842,378 847,372 852,366 844,371 838,376 829,376 823,376 819,376\"/> <polygon className={classes['_cyr']} id=\"_cyr\" points=\"659,476 647,474 632,472 621,464 606,462 592,464 579,471 572,477 567,486 566,494 569,501 572,507 571,513 568,520 563,528 558,534 549,538 545,539 548,561 559,561 568,556 579,549 587,543 592,543 597,539 603,535 629,535 636,538 644,541 647,549 653,553 660,554 665,556 668,562 672,558 678,555 683,552 684,540 682,535 681,528 686,521 683,511 678,507 672,507 663,503 661,497 658,490 655,486 659,476\"/> <polygon className={classes['_dac']} id=\"_dac\" points=\"709,100 697,88 690,75 689,70 691,63 691,60 685,54 676,50 671,52 669,58 663,62 656,63 647,60 628,60 619,63 613,68 604,79 598,85 586,85 573,87 558,102 544,101 537,104 532,119 541,123 548,135 555,146 564,154 574,155 582,158 585,165 600,179 600,185 597,193 597,197 600,201 607,201 615,204 623,204 632,201 642,199 648,203 654,211 666,213 671,219 679,223 680,215 684,208 690,205 696,204 688,197 686,192 683,188 686,180 688,176 687,168 696,160 693,137 694,130 702,121 706,112 709,106 709,100\"/> <polygon className={classes['_dal']} id=\"_dal\" points=\"443,105 433,104 430,99 421,93 416,91 412,92 412,98 407,105 407,110 412,111 415,111 419,115 419,118 415,118 412,121 412,129 420,138 423,137 427,129 430,129 433,131 436,136 436,139 443,149 439,149 437,151 439,155 454,164 454,167 456,169 459,168 463,169 467,171 473,177 476,180 481,182 482,184 480,184 476,184 475,185 477,187 480,188 483,190 485,192 488,193 488,190 491,190 493,193 501,198 502,201 510,205 513,203 516,204 515,205 513,206 513,208 516,212 518,214 520,217 523,218 529,220 531,226 533,224 537,223 541,228 549,228 553,214 553,210 549,206 543,197 538,188 533,181 528,177 524,179 518,175 518,167 511,161 506,159 501,155 492,152 487,148 482,140 481,134 473,132 465,128 459,123 457,118 456,114 450,108 443,105\"/> <polygon className={classes['_dam']} id=\"_dam\" points=\"1030,365 1030,263 1025,260 1015,259 1010,254 1007,254 1002,251 997,250 990,251 983,251 977,249 968,248 962,250 957,254 950,255 945,258 939,261 938,266 931,272 923,275 917,276 915,281 917,288 926,293 930,295 938,302 937,305 936,308 936,312 949,323 950,331 947,338 943,343 949,349 952,358 952,369 959,366 969,365 978,361 985,356 992,357 1001,359 1011,364 1017,367 1023,367 1030,365\"/> <polygon className={classes['_egy']} id=\"_egy\" points=\"684,482 694,483 707,484 718,486 727,487 736,489 748,490 762,490 770,491 778,490 784,487 793,481 794,459 795,445 799,431 803,419 812,403 816,397 809,396 804,393 801,388 801,385 789,388 777,392 763,394 745,395 727,395 702,392 693,393 688,394 684,397 680,399 676,399 681,411 688,432 688,442 687,467 684,482\"/> <polygon className={classes['_epi']} id=\"_epi\" points=\"559,295 563,295 567,293 573,286 577,286 579,277 579,269 573,263 570,261 569,255 565,252 561,250 562,244 561,240 561,236 555,232 553,231 548,227 541,228 537,223 534,223 531,226 530,249 529,254 529,263 535,271 539,279 542,288 545,293 548,296 551,295 552,293 553,294 555,295 559,295\"/> <polygon className={classes['_etr']} id=\"_etr\" points=\"344,164 349,161 353,156 359,156 357,147 349,139 350,133 351,124 342,119 341,115 343,105 326,101 320,105 314,111 305,112 295,121 296,131 292,139 291,148 293,154 296,154 297,153 300,155 301,158 304,154 315,148 322,148 326,149 339,158 344,164\"/> <polygon className={classes['_gal']} id=\"_gal\" points=\"775,231 769,240 763,248 762,252 750,259 738,260 732,264 720,280 725,282 728,282 734,280 740,280 744,287 752,292 751,299 761,305 765,303 769,303 775,306 783,306 787,299 796,298 803,289 807,288 813,291 819,288 826,287 832,285 836,276 840,273 846,270 846,266 840,260 839,253 840,245 837,240 837,238 839,237 838,233 835,229 829,225 828,214 826,209 822,206 816,204 814,211 810,217 801,224 794,227 784,229 775,231\"/> <polygon className={classes['_gau']} id=\"_gau\" points=\"120,173 123,169 126,143 127,128 127,122 126,119 128,116 129,113 130,109 127,105 126,100 120,93 120,90 115,87 119,82 116,79 115,76 110,75 98,67 92,65 82,63 82,53 86,47 90,44 96,47 99,47 105,45 112,45 116,47 126,41 126,34 125,27 125,20 128,17 131,18 135,23 139,28 144,29 147,24 151,18 156,16 172,15 178,11 182,0 299,1 299,6 303,11 303,15 299,21 299,26 302,30 306,31 306,38 310,44 316,46 316,52 314,57 310,60 310,64 311,71 302,78 295,85 295,94 282,95 274,101 266,111 249,117 246,123 239,131 226,130 219,128 216,135 212,140 210,146 206,151 201,151 195,161 182,163 174,159 168,164 168,176 172,185 163,182 147,183 138,179 129,179 123,177 120,173\"/> <polygon className={classes['_gop']} id=\"_gop\" points=\"793,480 806,471 814,467 824,465 830,465 836,466 841,467 847,469 856,470 862,467 868,466 875,461 882,457 886,454 891,446 894,439 895,429 881,430 867,431 839,431 822,429 801,426 797,438 794,454 793,480\"/> <polygon className={classes['_gos']} id=\"_gos\" points=\"572,477 553,470 538,466 522,464 508,463 491,464 474,467 458,471 443,477 435,481 429,487 435,489 442,491 450,496 454,499 456,505 461,511 470,517 478,521 488,523 496,524 507,528 519,532 528,537 537,538 545,539 552,538 558,533 567,523 571,515 572,506 569,500 566,494 567,486 570,481 572,477\"/> <polygon className={classes['_got']} id=\"_got\" points=\"385,391 415,400 442,406 473,411 498,412 522,413 520,437 514,464 490,464 470,467 453,472 440,479 429,486 418,484 408,483 398,480 389,476 381,472 376,472 368,466 361,459 356,457 349,450 341,443 337,438 336,434 340,427 344,423 347,421 350,412 353,409 355,404 365,401 374,396 385,391\"/> <polygon className={classes['_ibe']} id=\"_ibe\" points=\"121,321 132,325 143,332 153,343 158,356 146,365 132,372 121,374 110,378 103,380 98,384 90,379 85,380 75,380 68,377 63,377 47,370 32,367 25,361 23,354 18,354 15,356 13,362 0,379 0,324 6,325 11,332 14,343 18,347 24,348 31,342 36,342 48,334 55,334 63,337 71,338 90,339 103,326 108,326 115,323 121,321\"/> <polygon className={classes['_ill']} id=\"_ill\" points=\"478,88 469,87 465,88 456,88 450,86 450,96 447,101 441,104 448,107 456,113 458,122 463,128 471,132 480,135 483,143 488,150 499,155 507,160 513,162 518,166 518,175 523,179 529,178 534,181 542,193 550,207 553,210 553,215 549,228 552,231 557,232 562,236 571,228 582,226 583,214 586,210 593,206 599,201 597,197 597,191 600,185 600,180 592,172 585,164 582,158 574,155 564,154 559,151 553,143 548,134 542,124 535,120 528,118 519,116 514,117 509,114 505,113 501,107 498,99 488,98 484,93 481,89 478,88\"/> <polygon className={classes['_ion']} id=\"_ion\" points=\"552,345 531,345 521,344 507,340 495,334 484,327 475,318 476,314 476,308 478,303 482,301 485,297 484,290 479,285 475,283 474,280 472,275 474,272 475,266 476,260 480,256 484,257 490,259 497,264 501,267 505,268 508,261 505,253 510,252 522,252 529,255 529,263 532,268 536,273 539,278 541,285 545,293 549,296 551,295 551,293 553,293 555,295 559,294 558,299 554,298 552,298 552,301 555,303 559,305 562,307 566,314 571,316 577,316 582,315 587,316 594,317 601,316 607,318 612,320 614,324 612,324 609,323 605,323 601,322 595,321 592,321 588,319 584,320 579,322 577,326 577,332 579,336 569,341 552,345\"/> <polygon className={classes['_isa']} id=\"_isa\" points=\"848,324 842,318 837,313 838,306 839,299 839,292 833,288 832,285 827,287 820,288 813,291 807,289 803,288 795,298 787,298 785,303 783,306 775,306 769,303 763,304 761,305 761,312 764,314 769,315 769,319 773,322 777,324 780,329 785,329 793,330 799,333 805,334 813,337 818,339 823,340 829,338 835,337 838,334 843,328 846,325 848,324\"/> <polygon className={classes['_jer']} id=\"_jer\" points=\"886,454 892,459 900,474 905,472 913,471 919,474 919,462 918,458 920,452 920,447 917,444 917,435 912,422 911,416 908,414 904,416 896,416 895,428 894,437 891,446 886,454\"/> <polygon className={classes['_lep']} id=\"_lep\" points=\"428,486 420,484 412,483 406,483 398,480 397,485 393,490 386,494 379,495 369,496 364,498 367,503 367,509 366,514 370,516 381,516 388,517 397,521 408,524 421,527 427,537 435,549 444,552 450,554 457,560 462,568 472,569 478,567 485,565 494,564 496,566 500,567 510,572 528,571 533,566 540,562 548,561 548,555 546,548 545,539 538,538 530,537 519,533 508,528 496,524 488,522 478,522 473,519 466,515 461,511 456,505 454,499 449,495 442,491 435,489 428,486\"/> <polygon className={classes['_lib']} id=\"_lib\" points=\"676,400 681,411 687,429 689,442 688,459 687,470 684,482 673,482 669,478 664,476 658,475 646,474 631,472 625,467 621,464 610,462 598,462 589,464 579,470 572,477 558,472 540,466 524,464 513,464 518,445 521,427 522,413 536,413 563,412 590,408 620,404 647,396 671,397 674,400 676,400\"/> <polygon className={classes['_lig']} id=\"_lig\" points=\"348,180 346,173 344,163 338,158 326,149 319,147 315,148 310,151 305,154 301,158 294,163 288,165 280,169 272,176 256,176 254,174 249,175 245,172 240,171 235,173 228,170 214,174 212,175 206,179 203,188 207,197 207,204 204,208 213,213 221,218 228,225 233,230 237,239 238,252 237,259 250,260 278,260 290,258 297,255 297,249 297,248 298,248 306,248 311,245 318,241 319,235 311,232 311,230 311,229 311,226 310,226 309,224 310,221 308,219 308,217 310,216 311,214 308,213 311,206 315,205 322,204 324,204 325,196 327,193 327,189 331,185 336,182 341,180 348,180\"/> <polygon className={classes['_lus']} id=\"_lus\" points=\"119,174 112,175 102,174 86,174 77,172 70,168 55,166 48,167 29,166 16,167 5,162 0,161 0,296 10,294 18,286 28,283 46,272 54,273 61,268 58,258 67,245 66,235 70,233 75,226 82,223 99,213 103,213 112,204 126,203 134,195 144,189 147,182 136,179 128,179 119,174\"/> <polygon className={classes['_mac']} id=\"_mac\" points=\"610,262 613,264 611,267 613,270 616,273 620,278 625,278 618,272 618,269 622,269 627,275 630,274 630,273 624,268 625,265 628,265 635,272 637,272 637,269 630,262 628,259 625,258 625,256 628,256 631,255 634,253 638,252 642,249 648,249 653,248 657,248 662,250 667,249 669,235 678,226 679,223 672,220 664,212 654,212 648,203 643,199 638,199 625,204 614,204 607,201 600,201 588,209 582,214 581,227 572,227 561,236 562,244 561,250 568,254 570,261 578,269 579,276 576,285 582,287 589,287 593,283 599,280 605,280 604,273 604,268 606,265 610,262\"/> <polygon className={classes['_mar']} id=\"_mar\" points=\"643,612 647,603 654,594 666,587 666,581 664,575 663,568 668,562 666,557 662,555 654,553 648,549 645,543 637,538 629,535 603,534 594,542 587,544 576,552 561,561 548,561 541,562 535,565 528,571 510,572 502,569 495,566 494,569 489,578 486,584 488,591 490,598 490,602 498,606 506,609 517,612 521,611 525,606 532,606 541,609 550,613 556,614 565,614 573,612 588,612 597,614 603,618 609,616 619,618 625,622 629,621 636,617 643,612\"/> <polygon className={classes['_mas']} id=\"_mas\" points=\"203,188 206,179 212,175 220,172 228,170 236,173 240,171 245,172 249,174 254,174 256,176 265,177 272,176 280,170 287,165 294,163 301,158 300,154 297,153 294,154 292,150 291,141 293,134 296,131 295,121 306,112 302,107 297,106 295,95 282,94 274,101 266,111 249,117 245,124 239,131 219,129 216,135 211,140 211,145 206,151 201,151 195,162 182,163 175,159 172,160 169,165 168,178 171,184 193,190 203,188\"/> <polygon className={classes['_mau']} id=\"_mau\" points=\"0,379 8,368 13,363 14,356 18,353 23,354 26,361 32,367 47,370 62,377 68,377 74,380 84,380 88,379 98,384 103,380 110,378 121,373 131,372 147,365 159,355 170,353 176,350 209,350 213,348 237,349 233,363 243,374 242,381 245,386 227,389 224,390 216,397 207,408 207,415 212,430 207,439 207,453 216,465 217,474 202,472 195,472 188,476 181,478 169,479 164,482 157,490 150,498 139,498 131,497 125,495 115,499 105,504 95,504 85,499 75,495 65,499 47,505 38,512 24,523 12,524 0,525 0,379\"/> <polygon className={classes['_mem']} id=\"_mem\" points=\"847,614 852,613 855,612 858,609 859,604 860,602 861,601 861,599 860,595 859,590 856,588 853,586 852,584 852,580 853,579 853,575 852,572 850,567 848,564 847,562 847,559 848,557 849,553 848,552 845,553 842,554 838,553 833,548 829,540 826,533 826,529 827,526 829,523 829,521 828,519 829,515 831,512 832,509 832,506 815,505 809,508 805,512 799,511 779,533 772,532 763,528 755,529 749,533 740,539 731,539 725,537 721,537 714,542 708,548 703,548 697,543 693,541 685,540 683,552 677,556 668,562 663,568 664,575 666,581 666,587 673,586 688,582 697,583 709,593 729,594 742,605 750,605 763,601 772,602 780,606 796,619 803,619 815,614 826,607 833,608 840,612 847,614\"/> <polygon className={classes['_mes']} id=\"_mes\" points=\"522,413 566,412 600,407 626,403 648,397 645,393 645,388 647,386 639,382 631,375 622,365 619,363 616,360 614,357 608,358 608,362 607,365 602,364 600,359 595,355 593,356 592,362 588,361 585,356 587,346 579,337 565,341 553,345 529,345 520,344 522,364 523,382 522,413\"/> <polygon className={classes['_mil']} id=\"_mil\" points=\"741,281 733,280 727,282 723,281 720,281 710,278 699,280 688,276 683,276 682,284 682,289 683,293 681,298 679,296 678,292 676,292 676,296 678,299 674,301 676,303 678,303 680,305 683,305 684,303 686,302 691,305 691,309 690,312 690,316 693,322 703,324 704,327 699,329 702,332 714,332 720,333 719,334 715,335 709,338 705,339 704,342 708,342 712,341 715,341 715,344 718,343 718,340 720,338 731,339 735,344 740,348 747,348 754,347 756,348 758,348 764,346 770,346 775,332 779,329 777,324 769,319 768,316 761,312 761,305 752,300 752,297 753,291 747,288 744,286 741,281\"/> <polygon className={classes['_min']} id=\"_min\" points=\"703,392 722,395 744,395 756,395 763,380 766,371 766,355 764,345 759,348 757,348 754,347 748,348 740,348 735,344 731,338 722,338 720,338 718,340 717,343 715,344 715,341 712,341 708,342 704,342 704,355 699,368 691,378 684,385 684,389 687,390 691,388 695,388 698,389 701,386 703,387 704,389 703,392\"/> <polygon className={classes['_nab']} id=\"_nab\" points=\"1030,661 1030,491 1018,491 1006,480 1001,479 994,476 985,467 979,464 964,463 950,456 942,453 920,453 919,458 919,463 919,473 923,474 930,480 936,482 943,485 952,494 959,504 958,512 953,520 941,531 926,541 932,547 936,549 939,554 944,562 950,566 958,574 967,579 973,583 979,589 985,600 987,610 993,615 1000,620 1003,625 1004,632 1006,637 1013,647 1022,654 1030,661\"/> <polygon className={classes['_nea']} id=\"_nea\" points=\"399,235 401,229 404,226 405,222 407,220 413,218 422,218 429,223 436,234 451,244 458,246 469,252 471,255 478,257 476,260 475,268 474,272 471,275 473,280 476,284 479,285 484,290 485,297 482,301 478,303 476,307 476,315 475,319 471,322 469,327 466,330 462,330 458,327 459,323 460,319 461,313 463,309 465,304 464,297 463,290 461,285 459,281 455,275 452,272 445,268 440,264 437,258 431,254 426,253 420,250 415,243 413,239 407,237 399,235\"/> <polygon className={classes['_num']} id=\"_num\" points=\"337,439 340,442 347,448 357,457 360,458 365,464 372,468 376,472 381,472 389,476 398,480 396,487 388,493 378,496 368,496 363,497 354,500 346,497 335,488 319,487 313,482 306,479 306,474 298,469 297,463 295,459 289,458 280,447 280,438 283,438 291,441 306,442 320,447 333,439 337,439\"/> <polygon className={classes['_pet']} id=\"_pet\" points=\"906,527 912,530 919,535 926,542 936,535 948,525 957,516 959,510 959,504 952,494 943,485 936,483 930,481 923,474 919,473 914,471 908,471 900,473 901,478 903,487 903,492 904,493 905,499 905,505 905,513 906,518 906,527\"/> <polygon className={classes['_pha']} id=\"_pha\" points=\"464,613 470,614 475,612 483,607 491,601 489,596 487,588 487,582 491,574 495,566 493,564 472,568 462,568 456,559 449,554 443,550 435,549 428,537 420,527 406,524 395,520 386,516 369,515 366,513 366,509 368,503 363,497 356,500 352,500 345,496 334,488 317,487 311,481 306,479 299,479 293,482 285,483 279,483 267,491 270,500 278,507 291,509 296,510 314,526 320,540 328,553 339,556 354,564 365,564 369,563 376,572 389,584 397,583 418,598 425,598 433,597 440,598 448,601 456,607 464,613\"/> <polygon className={classes['_pun']} id=\"_pun\" points=\"277,352 274,342 274,326 277,315 281,307 290,297 299,291 301,292 303,299 309,304 313,303 314,298 316,296 323,298 326,295 327,285 351,288 366,293 379,301 389,311 400,329 396,330 392,330 389,332 386,336 388,341 399,346 404,350 404,361 400,372 394,382 385,390 371,398 355,404 352,397 349,390 345,384 344,379 345,376 350,371 354,364 357,358 356,354 353,353 350,355 347,357 341,356 335,352 330,349 323,349 320,351 312,352 301,351 295,350 289,349 284,351 280,352 277,352\"/> <polygon className={classes['_rav']} id=\"_rav\" points=\"419,185 417,179 414,176 410,171 404,166 397,162 389,154 385,144 383,140 384,137 388,135 388,131 384,127 385,121 373,121 368,124 363,132 358,134 351,132 349,138 355,145 359,155 365,157 371,165 377,168 382,178 391,185 400,195 404,188 411,188 419,185\"/> <polygon className={classes['_ree']} id=\"_ree\" points=\"1030,661 972,661 967,652 963,646 959,641 956,633 952,622 948,619 941,614 933,610 928,605 923,596 922,592 921,589 914,585 912,581 912,578 907,575 903,574 893,560 888,555 888,551 887,546 883,542 881,536 878,532 868,524 862,518 857,510 855,504 852,501 849,498 847,493 847,488 849,487 851,488 854,492 860,498 863,503 869,508 872,514 877,519 880,520 885,527 888,530 891,531 893,533 896,535 898,534 900,529 900,523 899,514 899,507 900,499 901,493 903,492 904,494 905,499 905,507 905,518 906,528 911,529 916,532 920,536 924,540 928,544 932,547 936,549 942,558 944,562 949,565 953,569 958,573 963,577 967,580 973,583 978,589 983,597 985,601 987,611 992,614 998,619 1002,623 1003,628 1005,635 1008,640 1014,647 1021,653 1030,661\"/> <polygon className={classes['_rha']} id=\"_rha\" points=\"299,0 424,1 421,4 421,9 424,13 424,16 420,21 419,30 416,34 408,37 403,38 399,40 396,46 392,47 389,51 390,56 391,62 389,66 386,71 388,76 389,81 381,82 377,83 374,86 370,90 362,94 357,95 353,93 349,93 346,96 344,100 343,105 339,104 333,103 327,102 322,102 319,106 312,112 305,112 303,108 297,106 295,95 294,86 302,78 312,71 310,65 310,60 314,57 316,53 316,46 310,44 307,39 306,31 302,30 299,26 299,21 303,16 303,12 299,5 299,0\"/> <polygon className={classes['_rom']} id=\"_rom\" points=\"399,235 401,229 404,226 405,222 407,220 406,209 401,202 400,194 388,182 384,180 379,171 376,168 372,166 366,158 363,156 360,156 353,155 350,161 344,163 346,173 348,180 362,198 364,202 367,204 374,211 382,221 390,228 399,235\"/> <polygon className={classes['_sag']} id=\"_sag\" points=\"132,262 128,270 131,282 140,294 134,299 126,307 122,314 121,321 114,322 109,325 103,326 91,339 83,339 73,339 64,336 55,333 48,334 40,338 37,341 32,342 27,344 24,348 19,347 14,343 11,330 6,325 0,324 1,296 10,295 18,286 28,284 46,272 54,273 62,268 68,266 76,266 86,260 109,260 114,258 125,259 132,262\"/> <polygon className={classes['_sah']} id=\"_sah\" points=\"0,526 22,524 42,508 74,495 95,503 105,504 126,495 139,498 149,498 161,485 169,479 181,479 196,472 207,471 216,474 224,475 232,472 237,473 247,480 256,488 267,491 270,500 278,507 293,509 298,512 306,519 314,527 320,540 328,553 340,557 354,564 363,564 369,563 378,575 389,583 397,583 418,598 425,598 432,597 442,598 449,602 463,613 462,617 464,623 461,631 461,636 470,642 476,645 481,653 483,660 0,661 0,526\"/> <polygon className={classes['_sad']} id=\"_sad\" points=\"319,240 323,243 329,249 331,254 331,258 330,260 329,267 330,269 330,273 329,278 327,285 327,290 326,295 324,298 319,297 316,295 314,298 314,303 309,304 306,302 303,299 302,295 301,292 299,291 301,287 302,282 302,274 304,267 302,263 301,258 297,255 296,249 297,248 299,248 304,248 309,247 313,244 319,240\"/> <polygon className={classes['_sam']} id=\"_sam\" points=\"424,0 645,0 655,6 660,9 666,17 671,31 676,50 671,52 670,58 664,62 658,63 651,62 646,60 628,60 621,62 615,66 607,75 598,85 592,85 580,86 572,88 567,92 558,102 550,102 543,101 537,104 534,110 532,119 519,116 514,117 509,114 505,114 502,108 498,99 488,98 482,89 477,88 469,87 466,88 455,88 451,86 449,78 455,71 454,66 457,60 456,57 455,54 446,47 440,45 433,37 419,36 414,35 419,29 419,20 424,15 421,10 421,4 424,0\"/> <polygon className={classes['_sic']} id=\"_sic\" points=\"450,324 450,328 447,334 445,341 443,346 443,352 445,357 445,363 443,366 439,367 434,368 430,365 427,361 423,360 415,357 409,354 404,349 399,346 394,344 388,341 386,336 389,332 393,330 397,330 401,329 408,330 415,331 424,331 428,329 432,327 438,327 443,325 450,324\"/> <polygon className={classes['_sid']} id=\"_sid\" points=\"912,384 906,384 904,383 901,382 900,375 901,370 904,366 905,361 905,358 902,353 901,343 905,342 907,341 914,338 919,335 925,335 930,338 936,342 943,343 947,347 951,353 952,361 952,369 948,373 943,377 940,380 935,380 930,379 928,378 924,377 919,380 912,384\"/> <polygon className={classes['_sin']} id=\"_sin\" points=\"886,455 891,458 896,467 900,475 902,484 903,493 901,493 900,497 899,505 899,514 900,523 899,530 897,534 895,535 892,532 889,531 885,527 881,523 879,521 877,519 873,515 870,511 866,506 862,501 858,496 854,491 851,488 849,487 849,485 847,483 843,482 840,481 837,480 839,479 840,477 840,474 840,471 841,469 842,467 847,469 854,470 857,470 861,468 865,466 869,466 874,463 878,459 882,457 886,455\"/> <polygon className={classes['_sip']} id=\"_sip\" points=\"906,173 913,172 920,171 925,171 928,168 932,167 938,162 944,156 948,152 950,147 953,148 958,151 965,156 973,159 973,170 970,175 964,180 960,183 955,189 955,198 952,202 947,204 939,207 930,210 924,210 918,216 912,216 905,218 898,223 892,224 877,224 874,228 872,232 864,233 856,233 847,232 843,234 838,237 837,233 829,225 828,213 824,207 816,205 818,201 824,197 828,191 828,186 832,178 833,172 842,173 846,175 849,177 853,177 866,178 877,178 886,179 892,177 897,177 906,173\"/> <polygon className={classes['_spa']} id=\"_spa\" points=\"579,336 583,341 587,346 586,351 585,355 588,361 592,362 592,360 593,356 594,355 597,357 600,359 603,364 607,366 608,362 608,358 612,357 614,357 616,360 619,363 622,365 622,360 619,354 615,348 611,343 613,341 616,342 620,344 623,344 624,342 619,336 616,331 618,328 614,324 608,323 605,323 599,321 593,321 587,319 582,320 577,324 576,328 577,332 579,336\"/> <polygon className={classes['_syr']} id=\"_syr\" points=\"895,428 895,416 896,408 896,403 898,400 897,392 900,388 900,382 900,374 901,370 904,365 905,359 902,353 887,355 872,358 853,365 846,374 841,380 839,381 838,382 839,384 841,386 841,387 838,388 834,388 831,389 830,391 826,393 823,395 821,397 816,397 811,404 804,417 800,426 812,428 828,430 846,431 862,431 876,430 895,428\"/> <polygon className={classes['_tar']} id=\"_tar\" points=\"132,262 125,259 115,259 108,260 86,260 76,265 68,265 61,268 58,259 67,245 67,236 71,233 75,226 82,224 98,213 104,213 112,204 127,203 134,195 144,189 148,183 162,182 171,184 195,190 203,188 207,198 207,204 203,210 195,210 189,216 179,220 162,223 157,227 154,228 149,236 147,242 140,249 138,256 132,262\"/> <polygon className={classes['_tha']} id=\"_tha\" points=\"337,438 336,434 340,428 345,422 348,420 349,416 351,412 354,408 355,404 352,397 349,390 345,384 338,384 332,388 327,392 319,397 310,398 299,400 287,397 280,404 279,415 280,422 278,429 279,434 282,437 289,441 305,442 311,444 321,447 326,444 333,439 337,438\"/> <polygon className={classes['_thb']} id=\"_thb\" points=\"972,661 832,661 832,657 834,656 835,654 835,649 835,646 833,644 832,637 833,633 836,630 840,627 844,622 847,619 848,615 850,615 853,614 856,612 860,609 860,604 861,603 862,603 863,599 862,596 861,591 858,588 855,586 854,585 853,582 854,580 855,577 855,574 852,568 850,564 848,562 848,559 850,558 851,555 851,552 848,550 845,551 842,552 839,552 836,549 832,544 830,539 828,535 827,530 829,527 831,523 830,520 830,518 830,515 832,513 833,511 834,506 834,502 832,499 832,497 831,495 832,492 832,489 832,485 834,482 835,482 837,482 841,482 846,483 848,486 849,488 848,489 848,493 849,497 851,501 854,503 856,507 859,515 868,524 875,529 877,532 881,537 883,541 887,546 888,551 888,555 903,574 909,576 912,578 912,582 914,586 921,589 925,600 930,607 935,611 940,614 946,618 952,622 955,631 959,641 963,647 972,661\"/> <polygon className={classes['_tye']} id=\"_tye\" points=\"896,416 896,403 898,399 898,392 899,389 900,382 904,382 906,384 912,384 917,380 924,377 928,378 935,380 940,380 940,385 939,388 940,393 944,396 943,400 935,412 928,412 923,419 916,419 912,422 911,416 908,414 905,416 896,416\"/> <polygon className={classes['_tyn']} id=\"_tyn\" points=\"348,180 340,180 334,183 328,189 327,193 328,195 327,201 327,203 328,205 328,215 325,218 325,226 323,231 321,233 319,234 319,241 323,243 329,249 331,253 331,259 329,260 329,268 331,272 327,285 345,286 356,289 368,294 378,300 388,310 401,329 417,331 424,332 432,327 438,327 443,325 450,324 451,326 458,326 461,312 465,304 463,290 460,284 459,280 456,276 453,273 444,268 440,264 437,258 431,254 420,251 414,240 408,237 399,235 390,227 380,218 370,207 368,204 365,203 363,198 357,191 348,180\"/> <polygon className={classes['_ven']} id=\"_ven\" points=\"407,110 399,111 393,114 385,120 380,121 372,121 367,124 365,128 364,133 357,134 350,132 350,125 346,122 341,118 341,114 343,111 343,106 344,99 349,94 354,94 358,95 371,90 376,82 388,81 392,81 404,88 408,88 412,93 412,98 407,105 407,110\"/> <polygon className={classes['_vin']} id=\"_vin\" points=\"432,37 439,46 455,54 457,63 455,71 449,77 450,86 450,95 446,102 442,105 433,104 431,101 428,97 422,93 416,91 411,92 408,88 403,88 397,85 393,82 389,81 386,71 390,63 389,51 392,47 395,46 400,40 407,38 415,34 419,36 432,37\"/> <g> <polyline className={classes['water']} id=\"water\" points=\"120,173 123,169 126,143 127,128 127,122 126,119 128,116 129,113 130,109 127,105 126,100 120,93 120,90 115,87 119,82 116,79 115,76 110,75 98,67 92,65 82,63 82,53 86,47 90,44 96,47 99,47 105,45 112,45 116,47 126,41 126,34 125,27 125,20 128,17 131,18 135,23 139,28 144,29 147,24 151,18 156,16 172,15 178,11 182,0 0,0 0,161 5,162 16,167 29,166 48,167 55,166 70,168 77,172 86,174 102,174 112,175 119,174\"/> <g className=\"style1\"> <path d=\"M 832,661 L 832,657 834,656 L 835,654 L 835,649 L 835,646 L 833,644 L 832,637 L 833,633 L 836,630 L 840,627 L 844,622 L 847,619 L 848,615 L 850,615 L 853,614 L 856,612 L 860,609 L 860,604 L 861,603 L 862,603 L 863,599 L 862,596 L 861,591 L 858,588 L 855,586 L 854,585 L 853,582 L 854,580 L 855,577 L 855,574 L 852,568 L 850,564 L 848,562 L 848,559 L 850,558 L 851,555 L 851,552 L 848,550 L 845,551 L 842,552 L 839,552 L 836,549 L 832,544 L 830,539 L 828,535 L 827,530 L 829,527 L 831,523 L 830,520 L 830,518 L 830,515 L 832,513 L 833,511 L 834,506 L 834,502 L 832,499 L 832,497 L 831,495 L 832,492 L 832,489 L 832,485 L 834,482 L 835,482 L 837,482 L 842,466\"/> <path d=\"M 830,495 L 821,483 L 815,477 L 808,477 L 807,472\"/> <path d=\"M 831,482 L 826,474 L 824,465\"/> </g> <line className=\"thickdash\" x1=\"45\" x2=\"38\" y1=\"327\" y2=\"378\"/> <path className=\"thickdash\" d=\"M 465,321 C 461,337 450,344 438,343\"/> <path className=\"thickdash\" d=\"M 321,222 C 331,232 331,240 321,250\"/> <rect className=\"style2\" height=\"660\" width=\"1030\" x=\"0\" y=\"0\"/> </g> </g> <g id=\"SupplyCenterLayer\"> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_CAR\" width=\"10\" x=\"318.9\" y=\"353.7\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_CIR\" width=\"10\" x=\"255.5\" y=\"434.1\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_THA\" width=\"10\" x=\"315.6\" y=\"403.3\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_ALE\" width=\"10\" x=\"724.2\" y=\"490.2\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_MEM\" width=\"10\" x=\"791.6\" y=\"586.9\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_THB\" width=\"10\" x=\"844.4\" y=\"516.2\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_SPA\" width=\"10\" x=\"587.7\" y=\"337.5\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_ATH\" width=\"10\" x=\"614.5\" y=\"303.4\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_MAC\" width=\"10\" x=\"604.8\" y=\"243.3\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_ANT\" width=\"10\" x=\"898.8\" y=\"320.4\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_SID\" transform=\"translate(4)\" width=\"10\" x=\"902.1\" y=\"361.8\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_DAM\" width=\"10\" x=\"945.1\" y=\"270.1\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_NEA\" width=\"10\" x=\"421.2\" y=\"232.7\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_ROM\" width=\"10\" x=\"350.5\" y=\"163.6\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_RAV\" width=\"10\" x=\"378.2\" y=\"153.1\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_SAG\" width=\"10\" x=\"97.9\" y=\"303.4\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_MAS\" width=\"10\" x=\"257.1\" y=\"155.5\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_BAL\" transform=\"translate(4,18)\" width=\"10\" x=\"183.2\" y=\"238.4\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_SAD\" width=\"10\" x=\"301.0\" y=\"277.4\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_SIC\" width=\"10\" x=\"398.5\" y=\"331.0\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_VIN\" width=\"10\" x=\"424.5\" y=\"61.3\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_DAL\" width=\"10\" x=\"455.3\" y=\"139.3\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_NUM\" width=\"10\" x=\"367.6\" y=\"473.1\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_LEP\" width=\"10\" x=\"399.3\" y=\"494.3\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_CYR\" transform=\"translate(0,4)\" width=\"10\" x=\"589.4\" y=\"465\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_CRE\" transform=\"translate(-4,4)\" width=\"10\" x=\"671.4\" y=\"383\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_CYP\" transform=\"translate(-2,8)\" width=\"10\" x=\"808.5\" y=\"377\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_PET\" transform=\"translate(6)\" width=\"10\" x=\"904.5\" y=\"479.6\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_JER\" transform=\"translate(8,4)\" width=\"10\" x=\"887.5\" y=\"436.6\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_TYE\" width=\"10\" x=\"898.0\" y=\"393.5\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_SIP\" width=\"10\" x=\"837.9\" y=\"192.1\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_CHE\" width=\"10\" x=\"866.4\" y=\"75.9\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_BYZ\" width=\"10\" x=\"677.9\" y=\"256.2\"/> <use height=\"10\" href=\"#SupplyCenter\" id=\"sc_MIL\" transform=\"translate(4,6)\" width=\"10\" x=\"712\" y=\"309.9\"/> </g> <g id=\"OrderLayer\"> <g id=\"Layer2\">{renderedOrders2}</g> <g id=\"Layer1\">{renderedOrders}</g> </g> <g id=\"UnitLayer\">{renderedUnits}</g> <g id=\"DislodgedUnitLayer\">{renderedDislodgedUnits}</g> <g id=\"HighestOrderLayer\">{renderedHighestOrders}</g> <g className={classes['BriefLabelLayer']} id=\"BriefLabelLayer\"> <text x=\"454.9\" y=\"199\">adr</text> <text x=\"668.5\" y=\"326.5\">aeg</text> <text x=\"757.1\" y=\"513.4\">ale</text> <text x=\"920.2\" y=\"330.1\">ant</text> <text x=\"422.4\" y=\"216.6\">apu</text> <text x=\"995.9\" y=\"396.4\">ara</text> <text x=\"998.3\" y=\"201.5\">arm</text> <text x=\"585.7\" y=\"298\">ath</text> <text x=\"470.3\" y=\"376.9\">aus</text> <text x=\"215.9\" y=\"244.5\">bal</text> <text x=\"664.5\" y=\"645\">bay</text> <text x=\"242\" y=\"307\">ber</text> <text x=\"802.6\" y=\"210.3\">bit</text> <text x=\"825\" y=\"153\">bla</text> <text x=\"720.8\" y=\"252.6\">byz</text> <text x=\"883.8\" y=\"258.3\">cap</text> <text x=\"274.6\" y=\"374.5\">car</text> <text x=\"962\" y=\"39\">che</text> <text x=\"823.7\" y=\"360.7\">cil</text> <text x=\"245.3\" y=\"431.3\">cir</text> <text x=\"320.9\" y=\"212.8\">cor</text> <text x=\"688.8\" y=\"392.3\">cre</text> <text x=\"825\" y=\"390\">cyp</text> <text x=\"599.5\" y=\"499.6\">cyr</text> <text x=\"641.7\" y=\"128.3\">dac</text> <text x=\"486.6\" y=\"173.8\">dal</text> <text x=\"987.8\" y=\"290.8\">dam</text> <text x=\"741.6\" y=\"433.8\">egy</text> <text x=\"545.9\" y=\"258.3\">epi</text> <text x=\"325\" y=\"119\">etr</text> <text x=\"798.5\" y=\"255.9\">gal</text> <text x=\"228\" y=\"60\">gau</text> <text x=\"825.3\" y=\"453.3\">gop</text> <text x=\"512.6\" y=\"489\">gos</text> <text x=\"450\" y=\"440.3\">got</text> <text x=\"120\" y=\"345\">ibe</text> <text x=\"518.2\" y=\"145.4\">ill</text> <text x=\"520\" y=\"290\">ion</text> <text x=\"795.2\" y=\"321.7\">isa</text> <text x=\"905\" y=\"435\">jer</text> <text x=\"433\" y=\"513.4\">lep</text> <text x=\"586.5\" y=\"441.1\">lib</text> <text x=\"268.1\" y=\"204.7\">lig</text> <text x=\"52.8\" y=\"199.8\">lus</text> <text x=\"605.2\" y=\"229.1\">mac</text> <text x=\"562.1\" y=\"587.3\">mar</text> <text x=\"237.2\" y=\"154.3\">mas</text> <text x=\"76.4\" y=\"443.5\">mau</text> <text x=\"749.8\" y=\"575.1\">mem</text> <text x=\"585\" y=\"375.7\">mes</text> <text x=\"715.6\" y=\"311.1\">mil</text> <text x=\"732.7\" y=\"360.2\">min</text> <text x=\"992.6\" y=\"513.4\">nab</text> <text x=\"454.1\" y=\"259.9\">nea</text> <text x=\"327.4\" y=\"474.4\">num</text> <text x=\"934.1\" y=\"500.9\">pet</text> <text x=\"361.5\" y=\"544.2\">pha</text> <text x=\"325\" y=\"325\">pun</text> <text x=\"372\" y=\"151.1\">rav</text> <text x=\"936.6\" y=\"586.5\">ree</text> <text x=\"356\" y=\"45\">rha</text> <text x=\"390.1\" y=\"215.6\">rom</text> <text x=\"86.1\" y=\"298.1\">sag</text> <text x=\"208.8\" y=\"555.6\">sah</text> <text x=\"316\" y=\"259.9\">sad</text> <text x=\"539\" y=\"32\">sam</text> <text x=\"433\" y=\"360\">sic</text> <text x=\"921.2\" y=\"355.2\">sid</text> <text x=\"878.2\" y=\"481.1\">sin</text> <text x=\"905.8\" y=\"200.6\">sip</text> <text x=\"600\" y=\"353\">spa</text> <text x=\"832.6\" y=\"416.7\">syr</text> <text x=\"104\" y=\"242.1\">tar</text> <text x=\"297.3\" y=\"417.5\">tha</text> <text x=\"885.4\" y=\"636\">thb</text> <text x=\"924\" y=\"408\">tye</text> <text x=\"376.9\" y=\"264.8\">tyn</text> <text x=\"395\" y=\"100\">ven</text> <text x=\"417\" y=\"60\">vin</text> </g> <g id=\"FullLabelLayer\" visibility=\"hidden\"/> <rect className=\"currentnoterect\" height=\"40\" width=\"1030\" x=\"0\" y=\"660\"/> <text className={classes['CurrentNote']} id=\"CurrentNote\" x=\"10\" y=\"676\">{nb_centers_per_power ? nb_centers_per_power : ''}</text> <text className={classes['CurrentNote2']} id=\"CurrentNote2\" x=\"10\" y=\"692\">{note ? note : ''}</text> <text className={classes['CurrentPhase']} id=\"CurrentPhase\" x=\"930\" y=\"682\">{current_phase}</text> <g className={classes['MouseLayer']} id=\"MouseLayer\"> <polygon id=\"adr\" onClick={this.onClick} onMouseOver={this.onHover} points=\"530,249 529,255 523,252 509,252 504,253 500,250 490,245 484,244 460,227 460,222 464,219 465,216 461,214 452,214 446,215 438,213 432,208 425,198 419,184 417,179 414,176 410,170 397,162 389,154 383,140 384,137 388,135 388,131 384,127 385,121 393,115 399,111 406,110 415,111 419,115 419,118 415,118 412,120 413,129 420,139 422,138 425,133 427,130 430,129 433,130 436,135 437,140 441,145 443,148 441,149 439,149 437,151 439,154 445,159 450,161 454,163 454,167 456,169 459,168 463,168 467,171 472,176 476,180 481,182 482,184 480,185 476,184 474,185 476,186 479,187 482,189 485,192 488,193 488,190 491,189 493,192 498,196 501,199 502,201 506,203 511,204 513,203 516,204 515,206 513,206 513,208 515,210 518,214 520,217 523,218 527,219 529,220 530,224 531,232 530,241 530,249\"/> <polygon id=\"aeg\" onClick={this.onClick} onMouseOver={this.onHover} points=\"623,365 628,373 637,381 646,385 652,386 655,388 656,389 659,390 670,387 674,388 683,386 690,379 698,367 703,355 704,342 705,339 709,338 715,335 719,334 720,332 714,332 702,332 699,328 704,327 703,324 694,322 690,316 690,312 692,310 691,305 686,302 684,303 683,305 680,305 679,304 676,304 675,301 678,299 676,296 676,292 678,292 678,294 679,296 682,298 683,294 683,292 682,289 682,283 683,276 680,275 669,277 668,272 668,266 666,265 664,259 665,255 669,253 676,251 677,248 667,249 663,250 658,248 651,249 643,249 635,253 630,256 625,255 625,258 628,259 630,261 637,270 637,272 635,272 628,265 625,265 625,268 630,273 630,274 627,275 622,269 619,269 618,272 625,278 620,279 610,268 613,265 610,262 607,264 604,268 604,275 605,281 611,284 615,287 616,292 612,290 608,291 608,296 614,295 617,299 622,304 628,304 634,309 635,314 639,317 643,318 643,322 641,323 639,321 636,320 634,321 637,331 633,332 629,328 621,326 618,328 616,331 620,337 623,341 623,344 620,345 616,342 614,341 612,343 616,351 619,355 622,360 623,365\"/> <polygon id=\"ale\" onClick={this.onClick} onMouseOver={this.onHover} points=\"659,475 666,476 670,479 673,482 684,482 706,484 725,487 733,488 749,490 763,491 771,491 779,490 786,486 794,480 806,471 808,476 813,477 817,479 821,483 826,489 829,495 832,501 832,506 822,505 816,506 810,508 805,512 799,511 794,518 786,527 780,532 772,532 764,529 762,528 756,528 752,531 744,537 738,538 733,538 727,537 724,536 720,537 715,540 711,545 707,548 703,548 699,544 695,542 689,541 684,540 682,537 681,533 681,528 684,524 686,520 684,515 680,509 676,507 671,507 663,503 661,497 660,492 656,488 656,481 659,475\"/> <polygon id=\"ant\" onClick={this.onClick} onMouseOver={this.onHover} points=\"917,288 930,295 937,301 938,304 935,307 935,311 941,317 949,322 950,332 946,339 944,343 935,341 930,339 925,334 918,335 913,338 907,342 901,342 900,337 897,331 893,327 891,314 893,310 896,307 896,304 893,302 897,298 898,293 904,286 913,281 916,280 917,288\"/> <polygon id=\"apu\" onClick={this.onClick} onMouseOver={this.onHover} points=\"419,184 425,198 433,209 438,213 446,215 453,214 462,214 465,215 465,218 460,222 460,226 465,230 475,237 484,244 491,245 500,249 504,253 508,261 505,268 501,267 494,262 488,258 483,256 480,256 478,257 471,255 468,251 458,246 451,244 441,237 436,235 433,229 429,223 422,218 413,218 407,219 406,209 401,202 400,194 404,188 411,188 419,184\"/> <polygon id=\"ara\" onClick={this.onClick} onMouseOver={this.onHover} points=\"1030,491 1030,364 1024,367 1017,367 1001,359 991,356 985,356 969,365 961,365 952,368 947,373 940,380 940,387 939,392 943,396 943,400 935,412 928,412 924,418 917,419 912,422 917,434 917,444 919,447 920,452 943,454 952,457 964,463 979,464 984,466 988,472 995,477 1001,479 1006,479 1017,490 1030,491\"/> <polygon id=\"arm\" onClick={this.onClick} onMouseOver={this.onHover} points=\"1030,160 1030,263 1024,260 1015,259 1010,254 1006,253 1002,251 996,250 984,251 976,249 968,248 962,250 957,253 951,255 945,257 939,261 934,257 929,254 927,252 926,249 929,246 931,243 931,239 930,237 930,230 934,226 938,221 941,215 942,212 942,207 952,202 955,198 955,189 959,182 969,176 973,171 973,159 982,158 997,158 1004,161 1013,165 1019,164 1030,160\"/> <polygon id=\"ath\" onClick={this.onClick} onMouseOver={this.onHover} points=\"559,295 558,299 552,298 552,301 555,304 561,307 565,313 570,316 576,316 582,315 587,316 600,316 612,320 614,324 618,328 621,326 627,327 632,331 637,332 635,327 634,321 636,319 639,321 641,323 643,322 643,318 640,317 635,314 634,308 629,304 622,303 618,300 616,297 615,295 611,296 608,296 608,290 611,289 613,290 616,291 615,287 611,284 605,280 600,280 594,282 589,287 582,287 577,285 573,286 565,294 559,295\"/> <polygon id=\"aus\" onClick={this.onClick} onMouseOver={this.onHover} points=\"450,326 447,334 445,340 443,346 443,352 445,357 445,362 443,366 439,367 433,368 429,363 427,361 423,360 418,358 411,355 408,353 404,350 404,360 401,371 397,377 391,384 385,391 424,403 448,407 483,412 522,413 523,381 522,363 520,343 513,341 503,338 494,333 483,326 475,318 471,322 469,327 466,329 462,330 458,327 458,326 450,326\"/> <polygon id=\"bal\" onClick={this.onClick} onMouseOver={this.onHover} points=\"204,208 214,213 224,220 233,230 238,239 238,252 237,260 225,273 210,283 194,290 177,293 164,294 139,294 135,288 130,278 127,270 132,263 138,255 139,248 147,243 149,237 154,227 157,227 162,223 172,221 179,220 189,216 196,210 195,253 190,255 186,258 181,260 183,265 187,266 192,270 195,271 198,265 201,260 197,259 195,254 196,210 203,210 204,208\"/> <polygon id=\"bay\" onClick={this.onClick} onMouseOver={this.onHover} points=\"483,660 830,661 830,657 833,655 834,652 834,647 832,644 831,642 831,637 832,633 835,629 839,626 842,623 846,619 847,615 840,612 832,607 825,606 817,612 804,619 795,619 788,612 778,604 772,601 762,601 756,603 752,605 742,605 735,599 729,593 709,593 706,590 698,583 689,582 680,585 673,586 666,587 663,589 655,594 648,600 646,606 644,612 638,616 626,621 618,618 609,616 604,618 598,615 590,612 572,612 564,614 555,614 532,606 527,606 521,611 515,612 508,609 497,606 490,601 485,606 476,611 471,614 467,613 463,613 463,618 464,624 461,632 461,637 466,640 473,644 478,648 483,660\"/> <polygon id=\"ber\" onClick={this.onClick} onMouseOver={this.onHover} points=\"299,291 290,297 283,304 278,314 274,326 273,341 277,352 269,352 260,348 252,348 242,349 236,349 226,348 212,349 210,350 202,350 184,350 176,351 170,353 164,353 159,355 155,348 152,342 144,333 136,328 128,323 121,321 121,314 125,307 133,300 140,295 152,294 167,294 183,292 201,287 217,279 228,270 237,259 250,260 267,260 282,260 297,255 301,258 302,263 305,267 303,270 302,273 302,278 301,284 300,289 299,291\"/> <polygon id=\"bit\" onClick={this.onClick} onMouseOver={this.onHover} points=\"833,173 819,173 814,175 807,179 802,180 793,183 784,189 771,200 763,208 757,215 752,217 745,218 748,222 752,223 755,228 755,232 754,239 757,243 763,249 768,242 772,234 777,230 787,229 798,226 806,220 813,213 815,205 818,200 824,196 828,191 829,186 832,180 833,177 833,173\"/> <polygon id=\"bla\" onClick={this.onClick} onMouseOver={this.onHover} points=\"724,219 729,220 737,220 745,219 757,215 763,208 772,200 784,189 793,183 801,180 808,179 815,174 819,173 833,173 842,174 848,176 849,177 855,177 862,178 876,177 884,178 892,177 896,177 906,173 915,172 921,171 925,171 928,168 933,166 940,160 945,155 947,154 949,148 952,144 953,140 951,137 949,134 948,129 942,125 935,122 927,121 920,119 913,116 906,112 899,111 890,108 883,103 878,100 871,97 864,96 858,95 854,92 852,90 848,89 844,91 841,91 839,89 842,86 842,83 846,83 849,83 854,81 857,74 861,72 862,60 860,58 857,58 852,53 852,52 856,51 859,49 862,43 873,35 873,31 866,31 850,39 846,43 836,49 829,52 819,60 813,66 809,69 806,70 802,73 800,75 802,80 805,81 807,84 809,88 817,88 819,85 824,85 829,81 832,81 835,83 834,86 834,89 833,92 829,93 826,94 823,93 817,95 815,99 810,101 804,105 801,109 797,116 791,115 786,114 783,104 773,101 772,98 768,98 766,99 764,97 766,94 770,93 774,90 779,86 781,83 780,80 774,80 769,80 765,82 761,81 755,82 747,83 743,82 746,77 741,75 737,78 734,78 730,81 718,91 712,98 710,101 709,106 706,112 702,121 695,129 693,136 694,144 696,160 688,168 688,175 683,188 686,192 688,197 693,201 696,205 702,208 706,210 709,214 713,215 718,217 724,219\"/> <polygon id=\"byz\" onClick={this.onClick} onMouseOver={this.onHover} points=\"726,229 730,232 735,234 739,234 741,235 740,237 736,237 723,238 721,239 723,242 725,243 725,244 721,245 717,245 714,246 708,248 704,249 701,248 697,247 696,250 692,253 687,254 681,256 673,261 669,265 667,271 668,277 679,275 683,276 689,276 699,280 710,277 720,281 731,264 738,259 749,260 762,252 763,248 753,239 754,234 756,228 751,223 748,222 746,219 739,220 732,220 728,220 724,218 720,217 714,215 708,213 706,210 696,205 690,204 680,214 679,223 669,234 667,249 677,248 676,251 669,253 665,255 664,259 666,265 668,260 672,257 678,254 682,250 685,244 686,238 688,235 694,232 700,229 704,227 709,227 716,228 720,227 723,225 725,220 728,221 726,229\"/> <polygon id=\"cap\" onClick={this.onClick} onMouseOver={this.onHover} points=\"893,302 897,299 898,294 902,288 908,283 912,280 916,280 918,275 923,274 931,272 937,267 939,262 927,252 926,248 931,244 931,239 930,238 930,231 942,214 943,206 932,210 924,210 917,216 906,217 897,223 877,224 872,231 865,233 855,233 847,231 838,237 837,240 840,244 840,259 846,266 846,270 838,274 834,279 832,285 834,289 839,292 839,303 837,307 837,313 848,324 854,323 863,314 879,314 883,308 888,303 893,302\"/> <polygon id=\"car\" onClick={this.onClick} onMouseOver={this.onHover} points=\"345,384 345,379 345,376 349,372 355,364 357,358 356,354 353,353 348,356 341,356 334,352 329,349 324,348 320,350 313,351 301,351 289,349 280,352 276,352 270,352 260,348 252,347 242,349 236,349 233,362 242,374 242,381 245,386 254,391 261,394 274,393 286,397 297,399 319,396 327,392 333,386 338,384 345,384\"/> <polygon id=\"che\" onClick={this.onClick} onMouseOver={this.onHover} points=\"1030,160 1030,0 646,1 658,8 667,18 673,38 676,51 684,54 691,61 691,66 689,72 691,78 698,89 709,101 711,98 719,90 728,83 734,78 737,77 740,76 746,76 745,79 743,81 744,83 750,83 756,82 760,81 765,82 768,80 774,80 780,79 781,82 779,86 772,91 766,94 764,97 766,99 769,98 771,98 772,101 778,103 783,103 784,109 786,114 791,116 797,115 800,110 804,105 810,101 815,99 817,95 823,93 826,93 829,92 833,92 834,89 834,85 835,83 832,82 829,81 827,83 824,85 819,85 817,88 813,88 809,88 807,83 805,80 802,80 801,75 805,70 810,69 814,65 819,60 823,57 829,52 834,50 839,48 845,44 849,39 856,36 860,34 866,31 873,31 873,35 868,39 862,43 860,49 855,51 852,51 851,53 854,55 857,57 860,58 861,59 862,65 861,72 858,74 854,80 850,82 842,83 843,85 839,89 841,91 844,91 848,90 851,90 855,93 861,96 871,97 879,101 889,107 900,111 906,112 915,117 920,119 928,121 935,122 942,125 947,129 950,134 953,140 953,143 950,147 954,149 966,157 972,159 981,158 998,158 1013,165 1018,165 1030,160\"/> <polygon id=\"cil\" onClick={this.onClick} onMouseOver={this.onHover} points=\"902,353 889,354 877,357 865,360 852,366 844,370 838,376 832,376 819,376 818,380 814,380 811,381 807,384 801,385 781,391 767,394 756,395 762,383 766,372 766,355 764,346 770,345 772,339 775,332 778,329 784,329 794,330 799,333 804,334 810,336 817,339 824,340 829,338 834,337 838,334 843,328 846,324 849,324 855,322 863,315 874,314 880,314 884,308 888,303 893,303 896,304 897,307 893,310 891,313 892,317 893,326 897,330 900,336 902,347 902,353\"/> <polygon id=\"cir\" onClick={this.onClick} onMouseOver={this.onHover} points=\"245,386 261,394 270,394 276,393 286,397 280,405 280,414 280,422 277,428 278,433 282,438 280,439 280,446 288,458 295,460 297,463 299,470 305,473 306,479 300,479 291,483 283,482 277,483 267,491 257,488 249,483 243,476 235,473 227,474 222,475 217,474 216,466 208,454 206,440 212,430 207,416 207,409 214,398 224,390 245,386\"/> <polygon id=\"cor\" onClick={this.onClick} onMouseOver={this.onHover} points=\"327,193 328,194 328,200 327,203 328,205 328,210 328,215 326,218 325,222 325,227 323,231 320,234 318,234 315,233 311,231 311,230 312,228 312,226 309,226 309,224 310,222 311,220 308,219 308,217 310,216 310,214 308,213 310,209 311,206 315,205 319,205 323,204 324,203 324,196 327,193\"/> <polygon id=\"cre\" onClick={this.onClick} onMouseOver={this.onHover} points=\"659,390 664,389 670,387 674,388 683,385 684,389 687,390 691,389 695,388 698,389 701,387 703,387 704,390 701,393 694,393 690,394 686,395 681,398 674,399 671,397 648,396 645,393 645,387 647,386 652,386 655,387 656,389 659,390\"/> <polygon id=\"cyp\" onClick={this.onClick} onMouseOver={this.onHover} points=\"819,376 819,380 815,380 810,381 808,383 805,385 801,385 801,387 804,393 810,396 816,397 820,397 823,395 825,393 829,392 830,390 832,388 835,388 841,387 841,386 838,383 838,381 842,378 847,372 852,366 844,371 838,376 829,376 823,376 819,376\"/> <polygon id=\"cyr\" onClick={this.onClick} onMouseOver={this.onHover} points=\"659,476 647,474 632,472 621,464 606,462 592,464 579,471 572,477 567,486 566,494 569,501 572,507 571,513 568,520 563,528 558,534 549,538 545,539 548,561 559,561 568,556 579,549 587,543 592,543 597,539 603,535 629,535 636,538 644,541 647,549 653,553 660,554 665,556 668,562 672,558 678,555 683,552 684,540 682,535 681,528 686,521 683,511 678,507 672,507 663,503 661,497 658,490 655,486 659,476\"/> <polygon id=\"dac\" onClick={this.onClick} onMouseOver={this.onHover} points=\"709,100 697,88 690,75 689,70 691,63 691,60 685,54 676,50 671,52 669,58 663,62 656,63 647,60 628,60 619,63 613,68 604,79 598,85 586,85 573,87 558,102 544,101 537,104 532,119 541,123 548,135 555,146 564,154 574,155 582,158 585,165 600,179 600,185 597,193 597,197 600,201 607,201 615,204 623,204 632,201 642,199 648,203 654,211 666,213 671,219 679,223 680,215 684,208 690,205 696,204 688,197 686,192 683,188 686,180 688,176 687,168 696,160 693,137 694,130 702,121 706,112 709,106 709,100\"/> <polygon id=\"dal\" onClick={this.onClick} onMouseOver={this.onHover} points=\"443,105 433,104 430,99 421,93 416,91 412,92 412,98 407,105 407,110 412,111 415,111 419,115 419,118 415,118 412,121 412,129 420,138 423,137 427,129 430,129 433,131 436,136 436,139 443,149 439,149 437,151 439,155 454,164 454,167 456,169 459,168 463,169 467,171 473,177 476,180 481,182 482,184 480,184 476,184 475,185 477,187 480,188 483,190 485,192 488,193 488,190 491,190 493,193 501,198 502,201 510,205 513,203 516,204 515,205 513,206 513,208 516,212 518,214 520,217 523,218 529,220 531,226 533,224 537,223 541,228 549,228 553,214 553,210 549,206 543,197 538,188 533,181 528,177 524,179 518,175 518,167 511,161 506,159 501,155 492,152 487,148 482,140 481,134 473,132 465,128 459,123 457,118 456,114 450,108 443,105\"/> <polygon id=\"dam\" onClick={this.onClick} onMouseOver={this.onHover} points=\"1030,365 1030,263 1025,260 1015,259 1010,254 1007,254 1002,251 997,250 990,251 983,251 977,249 968,248 962,250 957,254 950,255 945,258 939,261 938,266 931,272 923,275 917,276 915,281 917,288 926,293 930,295 938,302 937,305 936,308 936,312 949,323 950,331 947,338 943,343 949,349 952,358 952,369 959,366 969,365 978,361 985,356 992,357 1001,359 1011,364 1017,367 1023,367 1030,365\"/> <polygon id=\"egy\" onClick={this.onClick} onMouseOver={this.onHover} points=\"684,482 694,483 707,484 718,486 727,487 736,489 748,490 762,490 770,491 778,490 784,487 793,481 794,459 795,445 799,431 803,419 812,403 816,397 809,396 804,393 801,388 801,385 789,388 777,392 763,394 745,395 727,395 702,392 693,393 688,394 684,397 680,399 676,399 681,411 688,432 688,442 687,467 684,482\"/> <polygon id=\"epi\" onClick={this.onClick} onMouseOver={this.onHover} points=\"559,295 563,295 567,293 573,286 577,286 579,277 579,269 573,263 570,261 569,255 565,252 561,250 562,244 561,240 561,236 555,232 553,231 548,227 541,228 537,223 534,223 531,226 530,249 529,254 529,263 535,271 539,279 542,288 545,293 548,296 551,295 552,293 553,294 555,295 559,295\"/> <polygon id=\"etr\" onClick={this.onClick} onMouseOver={this.onHover} points=\"344,164 349,161 353,156 359,156 357,147 349,139 350,133 351,124 342,119 341,115 343,105 326,101 320,105 314,111 305,112 295,121 296,131 292,139 291,148 293,154 296,154 297,153 300,155 301,158 304,154 315,148 322,148 326,149 339,158 344,164\"/> <polygon id=\"gal\" onClick={this.onClick} onMouseOver={this.onHover} points=\"775,231 769,240 763,248 762,252 750,259 738,260 732,264 720,280 725,282 728,282 734,280 740,280 744,287 752,292 751,299 761,305 765,303 769,303 775,306 783,306 787,299 796,298 803,289 807,288 813,291 819,288 826,287 832,285 836,276 840,273 846,270 846,266 840,260 839,253 840,245 837,240 837,238 839,237 838,233 835,229 829,225 828,214 826,209 822,206 816,204 814,211 810,217 801,224 794,227 784,229 775,231\"/> <polygon id=\"gau\" onClick={this.onClick} onMouseOver={this.onHover} points=\"120,173 123,169 126,143 127,128 127,122 126,119 128,116 129,113 130,109 127,105 126,100 120,93 120,90 115,87 119,82 116,79 115,76 110,75 98,67 92,65 82,63 82,53 86,47 90,44 96,47 99,47 105,45 112,45 116,47 126,41 126,34 125,27 125,20 128,17 131,18 135,23 139,28 144,29 147,24 151,18 156,16 172,15 178,11 182,0 299,1 299,6 303,11 303,15 299,21 299,26 302,30 306,31 306,38 310,44 316,46 316,52 314,57 310,60 310,64 311,71 302,78 295,85 295,94 282,95 274,101 266,111 249,117 246,123 239,131 226,130 219,128 216,135 212,140 210,146 206,151 201,151 195,161 182,163 174,159 168,164 168,176 172,185 163,182 147,183 138,179 129,179 123,177 120,173\"/> <polygon id=\"gop\" onClick={this.onClick} onMouseOver={this.onHover} points=\"793,480 806,471 814,467 824,465 830,465 836,466 841,467 847,469 856,470 862,467 868,466 875,461 882,457 886,454 891,446 894,439 895,429 881,430 867,431 839,431 822,429 801,426 797,438 794,454 793,480\"/> <polygon id=\"gos\" onClick={this.onClick} onMouseOver={this.onHover} points=\"572,477 553,470 538,466 522,464 508,463 491,464 474,467 458,471 443,477 435,481 429,487 435,489 442,491 450,496 454,499 456,505 461,511 470,517 478,521 488,523 496,524 507,528 519,532 528,537 537,538 545,539 552,538 558,533 567,523 571,515 572,506 569,500 566,494 567,486 570,481 572,477\"/> <polygon id=\"got\" onClick={this.onClick} onMouseOver={this.onHover} points=\"385,391 415,400 442,406 473,411 498,412 522,413 520,437 514,464 490,464 470,467 453,472 440,479 429,486 418,484 408,483 398,480 389,476 381,472 376,472 368,466 361,459 356,457 349,450 341,443 337,438 336,434 340,427 344,423 347,421 350,412 353,409 355,404 365,401 374,396 385,391\"/> <polygon id=\"ibe\" onClick={this.onClick} onMouseOver={this.onHover} points=\"121,321 132,325 143,332 153,343 158,356 146,365 132,372 121,374 110,378 103,380 98,384 90,379 85,380 75,380 68,377 63,377 47,370 32,367 25,361 23,354 18,354 15,356 13,362 0,379 0,324 6,325 11,332 14,343 18,347 24,348 31,342 36,342 48,334 55,334 63,337 71,338 90,339 103,326 108,326 115,323 121,321\"/> <polygon id=\"ill\" onClick={this.onClick} onMouseOver={this.onHover} points=\"478,88 469,87 465,88 456,88 450,86 450,96 447,101 441,104 448,107 456,113 458,122 463,128 471,132 480,135 483,143 488,150 499,155 507,160 513,162 518,166 518,175 523,179 529,178 534,181 542,193 550,207 553,210 553,215 549,228 552,231 557,232 562,236 571,228 582,226 583,214 586,210 593,206 599,201 597,197 597,191 600,185 600,180 592,172 585,164 582,158 574,155 564,154 559,151 553,143 548,134 542,124 535,120 528,118 519,116 514,117 509,114 505,113 501,107 498,99 488,98 484,93 481,89 478,88\"/> <polygon id=\"ion\" onClick={this.onClick} onMouseOver={this.onHover} points=\"552,345 531,345 521,344 507,340 495,334 484,327 475,318 476,314 476,308 478,303 482,301 485,297 484,290 479,285 475,283 474,280 472,275 474,272 475,266 476,260 480,256 484,257 490,259 497,264 501,267 505,268 508,261 505,253 510,252 522,252 529,255 529,263 532,268 536,273 539,278 541,285 545,293 549,296 551,295 551,293 553,293 555,295 559,294 558,299 554,298 552,298 552,301 555,303 559,305 562,307 566,314 571,316 577,316 582,315 587,316 594,317 601,316 607,318 612,320 614,324 612,324 609,323 605,323 601,322 595,321 592,321 588,319 584,320 579,322 577,326 577,332 579,336 569,341 552,345\"/> <polygon id=\"isa\" onClick={this.onClick} onMouseOver={this.onHover} points=\"848,324 842,318 837,313 838,306 839,299 839,292 833,288 832,285 827,287 820,288 813,291 807,289 803,288 795,298 787,298 785,303 783,306 775,306 769,303 763,304 761,305 761,312 764,314 769,315 769,319 773,322 777,324 780,329 785,329 793,330 799,333 805,334 813,337 818,339 823,340 829,338 835,337 838,334 843,328 846,325 848,324\"/> <polygon id=\"jer\" onClick={this.onClick} onMouseOver={this.onHover} points=\"886,454 892,459 900,474 905,472 913,471 919,474 919,462 918,458 920,452 920,447 917,444 917,435 912,422 911,416 908,414 904,416 896,416 895,428 894,437 891,446 886,454\"/> <polygon id=\"lep\" onClick={this.onClick} onMouseOver={this.onHover} points=\"428,486 420,484 412,483 406,483 398,480 397,485 393,490 386,494 379,495 369,496 364,498 367,503 367,509 366,514 370,516 381,516 388,517 397,521 408,524 421,527 427,537 435,549 444,552 450,554 457,560 462,568 472,569 478,567 485,565 494,564 496,566 500,567 510,572 528,571 533,566 540,562 548,561 548,555 546,548 545,539 538,538 530,537 519,533 508,528 496,524 488,522 478,522 473,519 466,515 461,511 456,505 454,499 449,495 442,491 435,489 428,486\"/> <polygon id=\"lib\" onClick={this.onClick} onMouseOver={this.onHover} points=\"676,400 681,411 687,429 689,442 688,459 687,470 684,482 673,482 669,478 664,476 658,475 646,474 631,472 625,467 621,464 610,462 598,462 589,464 579,470 572,477 558,472 540,466 524,464 513,464 518,445 521,427 522,413 536,413 563,412 590,408 620,404 647,396 671,397 674,400 676,400\"/> <polygon id=\"lig\" onClick={this.onClick} onMouseOver={this.onHover} points=\"348,180 346,173 344,163 338,158 326,149 319,147 315,148 310,151 305,154 301,158 294,163 288,165 280,169 272,176 256,176 254,174 249,175 245,172 240,171 235,173 228,170 214,174 212,175 206,179 203,188 207,197 207,204 204,208 213,213 221,218 228,225 233,230 237,239 238,252 237,259 250,260 278,260 290,258 297,255 297,249 297,248 298,248 306,248 311,245 318,241 319,235 311,232 311,230 311,229 311,226 310,226 309,224 310,221 308,219 308,217 310,216 311,214 308,213 311,206 315,205 322,204 324,204 325,196 327,193 327,189 331,185 336,182 341,180 348,180\"/> <polygon id=\"lus\" onClick={this.onClick} onMouseOver={this.onHover} points=\"119,174 112,175 102,174 86,174 77,172 70,168 55,166 48,167 29,166 16,167 5,162 0,161 0,296 10,294 18,286 28,283 46,272 54,273 61,268 58,258 67,245 66,235 70,233 75,226 82,223 99,213 103,213 112,204 126,203 134,195 144,189 147,182 136,179 128,179 119,174\"/> <polygon id=\"mac\" onClick={this.onClick} onMouseOver={this.onHover} points=\"610,262 613,264 611,267 613,270 616,273 620,278 625,278 618,272 618,269 622,269 627,275 630,274 630,273 624,268 625,265 628,265 635,272 637,272 637,269 630,262 628,259 625,258 625,256 628,256 631,255 634,253 638,252 642,249 648,249 653,248 657,248 662,250 667,249 669,235 678,226 679,223 672,220 664,212 654,212 648,203 643,199 638,199 625,204 614,204 607,201 600,201 588,209 582,214 581,227 572,227 561,236 562,244 561,250 568,254 570,261 578,269 579,276 576,285 582,287 589,287 593,283 599,280 605,280 604,273 604,268 606,265 610,262\"/> <polygon id=\"mar\" onClick={this.onClick} onMouseOver={this.onHover} points=\"643,612 647,603 654,594 666,587 666,581 664,575 663,568 668,562 666,557 662,555 654,553 648,549 645,543 637,538 629,535 603,534 594,542 587,544 576,552 561,561 548,561 541,562 535,565 528,571 510,572 502,569 495,566 494,569 489,578 486,584 488,591 490,598 490,602 498,606 506,609 517,612 521,611 525,606 532,606 541,609 550,613 556,614 565,614 573,612 588,612 597,614 603,618 609,616 619,618 625,622 629,621 636,617 643,612\"/> <polygon id=\"mas\" onClick={this.onClick} onMouseOver={this.onHover} points=\"203,188 206,179 212,175 220,172 228,170 236,173 240,171 245,172 249,174 254,174 256,176 265,177 272,176 280,170 287,165 294,163 301,158 300,154 297,153 294,154 292,150 291,141 293,134 296,131 295,121 306,112 302,107 297,106 295,95 282,94 274,101 266,111 249,117 245,124 239,131 219,129 216,135 211,140 211,145 206,151 201,151 195,162 182,163 175,159 172,160 169,165 168,178 171,184 193,190 203,188\"/> <polygon id=\"mau\" onClick={this.onClick} onMouseOver={this.onHover} points=\"0,379 8,368 13,363 14,356 18,353 23,354 26,361 32,367 47,370 62,377 68,377 74,380 84,380 88,379 98,384 103,380 110,378 121,373 131,372 147,365 159,355 170,353 176,350 209,350 213,348 237,349 233,363 243,374 242,381 245,386 227,389 224,390 216,397 207,408 207,415 212,430 207,439 207,453 216,465 217,474 202,472 195,472 188,476 181,478 169,479 164,482 157,490 150,498 139,498 131,497 125,495 115,499 105,504 95,504 85,499 75,495 65,499 47,505 38,512 24,523 12,524 0,525 0,379\"/> <polygon id=\"mem\" onClick={this.onClick} onMouseOver={this.onHover} points=\"847,614 852,613 855,612 858,609 859,604 860,602 861,601 861,599 860,595 859,590 856,588 853,586 852,584 852,580 853,579 853,575 852,572 850,567 848,564 847,562 847,559 848,557 849,553 848,552 845,553 842,554 838,553 833,548 829,540 826,533 826,529 827,526 829,523 829,521 828,519 829,515 831,512 832,509 832,506 815,505 809,508 805,512 799,511 779,533 772,532 763,528 755,529 749,533 740,539 731,539 725,537 721,537 714,542 708,548 703,548 697,543 693,541 685,540 683,552 677,556 668,562 663,568 664,575 666,581 666,587 673,586 688,582 697,583 709,593 729,594 742,605 750,605 763,601 772,602 780,606 796,619 803,619 815,614 826,607 833,608 840,612 847,614\"/> <polygon id=\"mes\" onClick={this.onClick} onMouseOver={this.onHover} points=\"522,413 566,412 600,407 626,403 648,397 645,393 645,388 647,386 639,382 631,375 622,365 619,363 616,360 614,357 608,358 608,362 607,365 602,364 600,359 595,355 593,356 592,362 588,361 585,356 587,346 579,337 565,341 553,345 529,345 520,344 522,364 523,382 522,413\"/> <polygon id=\"mil\" onClick={this.onClick} onMouseOver={this.onHover} points=\"741,281 733,280 727,282 723,281 720,281 710,278 699,280 688,276 683,276 682,284 682,289 683,293 681,298 679,296 678,292 676,292 676,296 678,299 674,301 676,303 678,303 680,305 683,305 684,303 686,302 691,305 691,309 690,312 690,316 693,322 703,324 704,327 699,329 702,332 714,332 720,333 719,334 715,335 709,338 705,339 704,342 708,342 712,341 715,341 715,344 718,343 718,340 720,338 731,339 735,344 740,348 747,348 754,347 756,348 758,348 764,346 770,346 775,332 779,329 777,324 769,319 768,316 761,312 761,305 752,300 752,297 753,291 747,288 744,286 741,281\"/> <polygon id=\"min\" onClick={this.onClick} onMouseOver={this.onHover} points=\"703,392 722,395 744,395 756,395 763,380 766,371 766,355 764,345 759,348 757,348 754,347 748,348 740,348 735,344 731,338 722,338 720,338 718,340 717,343 715,344 715,341 712,341 708,342 704,342 704,355 699,368 691,378 684,385 684,389 687,390 691,388 695,388 698,389 701,386 703,387 704,389 703,392\"/> <polygon id=\"nab\" onClick={this.onClick} onMouseOver={this.onHover} points=\"1030,661 1030,491 1018,491 1006,480 1001,479 994,476 985,467 979,464 964,463 950,456 942,453 920,453 919,458 919,463 919,473 923,474 930,480 936,482 943,485 952,494 959,504 958,512 953,520 941,531 926,541 932,547 936,549 939,554 944,562 950,566 958,574 967,579 973,583 979,589 985,600 987,610 993,615 1000,620 1003,625 1004,632 1006,637 1013,647 1022,654 1030,661\"/> <polygon id=\"nea\" onClick={this.onClick} onMouseOver={this.onHover} points=\"399,235 401,229 404,226 405,222 407,220 413,218 422,218 429,223 436,234 451,244 458,246 469,252 471,255 478,257 476,260 475,268 474,272 471,275 473,280 476,284 479,285 484,290 485,297 482,301 478,303 476,307 476,315 475,319 471,322 469,327 466,330 462,330 458,327 459,323 460,319 461,313 463,309 465,304 464,297 463,290 461,285 459,281 455,275 452,272 445,268 440,264 437,258 431,254 426,253 420,250 415,243 413,239 407,237 399,235\"/> <polygon id=\"num\" onClick={this.onClick} onMouseOver={this.onHover} points=\"337,439 340,442 347,448 357,457 360,458 365,464 372,468 376,472 381,472 389,476 398,480 396,487 388,493 378,496 368,496 363,497 354,500 346,497 335,488 319,487 313,482 306,479 306,474 298,469 297,463 295,459 289,458 280,447 280,438 283,438 291,441 306,442 320,447 333,439 337,439\"/> <polygon id=\"pet\" onClick={this.onClick} onMouseOver={this.onHover} points=\"906,527 912,530 919,535 926,542 936,535 948,525 957,516 959,510 959,504 952,494 943,485 936,483 930,481 923,474 919,473 914,471 908,471 900,473 901,478 903,487 903,492 904,493 905,499 905,505 905,513 906,518 906,527\"/> <polygon id=\"pha\" onClick={this.onClick} onMouseOver={this.onHover} points=\"464,613 470,614 475,612 483,607 491,601 489,596 487,588 487,582 491,574 495,566 493,564 472,568 462,568 456,559 449,554 443,550 435,549 428,537 420,527 406,524 395,520 386,516 369,515 366,513 366,509 368,503 363,497 356,500 352,500 345,496 334,488 317,487 311,481 306,479 299,479 293,482 285,483 279,483 267,491 270,500 278,507 291,509 296,510 314,526 320,540 328,553 339,556 354,564 365,564 369,563 376,572 389,584 397,583 418,598 425,598 433,597 440,598 448,601 456,607 464,613\"/> <polygon id=\"pun\" onClick={this.onClick} onMouseOver={this.onHover} points=\"277,352 274,342 274,326 277,315 281,307 290,297 299,291 301,292 303,299 309,304 313,303 314,298 316,296 323,298 326,295 327,285 351,288 366,293 379,301 389,311 400,329 396,330 392,330 389,332 386,336 388,341 399,346 404,350 404,361 400,372 394,382 385,390 371,398 355,404 352,397 349,390 345,384 344,379 345,376 350,371 354,364 357,358 356,354 353,353 350,355 347,357 341,356 335,352 330,349 323,349 320,351 312,352 301,351 295,350 289,349 284,351 280,352 277,352\"/> <polygon id=\"rav\" onClick={this.onClick} onMouseOver={this.onHover} points=\"419,185 417,179 414,176 410,171 404,166 397,162 389,154 385,144 383,140 384,137 388,135 388,131 384,127 385,121 373,121 368,124 363,132 358,134 351,132 349,138 355,145 359,155 365,157 371,165 377,168 382,178 391,185 400,195 404,188 411,188 419,185\"/> <polygon id=\"ree\" onClick={this.onClick} onMouseOver={this.onHover} points=\"1030,661 972,661 967,652 963,646 959,641 956,633 952,622 948,619 941,614 933,610 928,605 923,596 922,592 921,589 914,585 912,581 912,578 907,575 903,574 893,560 888,555 888,551 887,546 883,542 881,536 878,532 868,524 862,518 857,510 855,504 852,501 849,498 847,493 847,488 849,487 851,488 854,492 860,498 863,503 869,508 872,514 877,519 880,520 885,527 888,530 891,531 893,533 896,535 898,534 900,529 900,523 899,514 899,507 900,499 901,493 903,492 904,494 905,499 905,507 905,518 906,528 911,529 916,532 920,536 924,540 928,544 932,547 936,549 942,558 944,562 949,565 953,569 958,573 963,577 967,580 973,583 978,589 983,597 985,601 987,611 992,614 998,619 1002,623 1003,628 1005,635 1008,640 1014,647 1021,653 1030,661\"/> <polygon id=\"rha\" onClick={this.onClick} onMouseOver={this.onHover} points=\"299,0 424,1 421,4 421,9 424,13 424,16 420,21 419,30 416,34 408,37 403,38 399,40 396,46 392,47 389,51 390,56 391,62 389,66 386,71 388,76 389,81 381,82 377,83 374,86 370,90 362,94 357,95 353,93 349,93 346,96 344,100 343,105 339,104 333,103 327,102 322,102 319,106 312,112 305,112 303,108 297,106 295,95 294,86 302,78 312,71 310,65 310,60 314,57 316,53 316,46 310,44 307,39 306,31 302,30 299,26 299,21 303,16 303,12 299,5 299,0\"/> <polygon id=\"rom\" onClick={this.onClick} onMouseOver={this.onHover} points=\"399,235 401,229 404,226 405,222 407,220 406,209 401,202 400,194 388,182 384,180 379,171 376,168 372,166 366,158 363,156 360,156 353,155 350,161 344,163 346,173 348,180 362,198 364,202 367,204 374,211 382,221 390,228 399,235\"/> <polygon id=\"sag\" onClick={this.onClick} onMouseOver={this.onHover} points=\"132,262 128,270 131,282 140,294 134,299 126,307 122,314 121,321 114,322 109,325 103,326 91,339 83,339 73,339 64,336 55,333 48,334 40,338 37,341 32,342 27,344 24,348 19,347 14,343 11,330 6,325 0,324 1,296 10,295 18,286 28,284 46,272 54,273 62,268 68,266 76,266 86,260 109,260 114,258 125,259 132,262\"/> <polygon id=\"sah\" onClick={this.onClick} onMouseOver={this.onHover} points=\"0,526 22,524 42,508 74,495 95,503 105,504 126,495 139,498 149,498 161,485 169,479 181,479 196,472 207,471 216,474 224,475 232,472 237,473 247,480 256,488 267,491 270,500 278,507 293,509 298,512 306,519 314,527 320,540 328,553 340,557 354,564 363,564 369,563 378,575 389,583 397,583 418,598 425,598 432,597 442,598 449,602 463,613 462,617 464,623 461,631 461,636 470,642 476,645 481,653 483,660 0,661 0,526\"/> <polygon id=\"sad\" onClick={this.onClick} onMouseOver={this.onHover} points=\"319,240 323,243 329,249 331,254 331,258 330,260 329,267 330,269 330,273 329,278 327,285 327,290 326,295 324,298 319,297 316,295 314,298 314,303 309,304 306,302 303,299 302,295 301,292 299,291 301,287 302,282 302,274 304,267 302,263 301,258 297,255 296,249 297,248 299,248 304,248 309,247 313,244 319,240\"/> <polygon id=\"sam\" onClick={this.onClick} onMouseOver={this.onHover} points=\"424,0 645,0 655,6 660,9 666,17 671,31 676,50 671,52 670,58 664,62 658,63 651,62 646,60 628,60 621,62 615,66 607,75 598,85 592,85 580,86 572,88 567,92 558,102 550,102 543,101 537,104 534,110 532,119 519,116 514,117 509,114 505,114 502,108 498,99 488,98 482,89 477,88 469,87 466,88 455,88 451,86 449,78 455,71 454,66 457,60 456,57 455,54 446,47 440,45 433,37 419,36 414,35 419,29 419,20 424,15 421,10 421,4 424,0\"/> <polygon id=\"sic\" onClick={this.onClick} onMouseOver={this.onHover} points=\"450,324 450,328 447,334 445,341 443,346 443,352 445,357 445,363 443,366 439,367 434,368 430,365 427,361 423,360 415,357 409,354 404,349 399,346 394,344 388,341 386,336 389,332 393,330 397,330 401,329 408,330 415,331 424,331 428,329 432,327 438,327 443,325 450,324\"/> <polygon id=\"sid\" onClick={this.onClick} onMouseOver={this.onHover} points=\"912,384 906,384 904,383 901,382 900,375 901,370 904,366 905,361 905,358 902,353 901,343 905,342 907,341 914,338 919,335 925,335 930,338 936,342 943,343 947,347 951,353 952,361 952,369 948,373 943,377 940,380 935,380 930,379 928,378 924,377 919,380 912,384\"/> <polygon id=\"sin\" onClick={this.onClick} onMouseOver={this.onHover} points=\"886,455 891,458 896,467 900,475 902,484 903,493 901,493 900,497 899,505 899,514 900,523 899,530 897,534 895,535 892,532 889,531 885,527 881,523 879,521 877,519 873,515 870,511 866,506 862,501 858,496 854,491 851,488 849,487 849,485 847,483 843,482 840,481 837,480 839,479 840,477 840,474 840,471 841,469 842,467 847,469 854,470 857,470 861,468 865,466 869,466 874,463 878,459 882,457 886,455\"/> <polygon id=\"sip\" onClick={this.onClick} onMouseOver={this.onHover} points=\"906,173 913,172 920,171 925,171 928,168 932,167 938,162 944,156 948,152 950,147 953,148 958,151 965,156 973,159 973,170 970,175 964,180 960,183 955,189 955,198 952,202 947,204 939,207 930,210 924,210 918,216 912,216 905,218 898,223 892,224 877,224 874,228 872,232 864,233 856,233 847,232 843,234 838,237 837,233 829,225 828,213 824,207 816,205 818,201 824,197 828,191 828,186 832,178 833,172 842,173 846,175 849,177 853,177 866,178 877,178 886,179 892,177 897,177 906,173\"/> <polygon id=\"spa\" onClick={this.onClick} onMouseOver={this.onHover} points=\"579,336 583,341 587,346 586,351 585,355 588,361 592,362 592,360 593,356 594,355 597,357 600,359 603,364 607,366 608,362 608,358 612,357 614,357 616,360 619,363 622,365 622,360 619,354 615,348 611,343 613,341 616,342 620,344 623,344 624,342 619,336 616,331 618,328 614,324 608,323 605,323 599,321 593,321 587,319 582,320 577,324 576,328 577,332 579,336\"/> <polygon id=\"syr\" onClick={this.onClick} onMouseOver={this.onHover} points=\"895,428 895,416 896,408 896,403 898,400 897,392 900,388 900,382 900,374 901,370 904,365 905,359 902,353 887,355 872,358 853,365 846,374 841,380 839,381 838,382 839,384 841,386 841,387 838,388 834,388 831,389 830,391 826,393 823,395 821,397 816,397 811,404 804,417 800,426 812,428 828,430 846,431 862,431 876,430 895,428\"/> <polygon id=\"tar\" onClick={this.onClick} onMouseOver={this.onHover} points=\"132,262 125,259 115,259 108,260 86,260 76,265 68,265 61,268 58,259 67,245 67,236 71,233 75,226 82,224 98,213 104,213 112,204 127,203 134,195 144,189 148,183 162,182 171,184 195,190 203,188 207,198 207,204 203,210 195,210 189,216 179,220 162,223 157,227 154,228 149,236 147,242 140,249 138,256 132,262\"/> <polygon id=\"tha\" onClick={this.onClick} onMouseOver={this.onHover} points=\"337,438 336,434 340,428 345,422 348,420 349,416 351,412 354,408 355,404 352,397 349,390 345,384 338,384 332,388 327,392 319,397 310,398 299,400 287,397 280,404 279,415 280,422 278,429 279,434 282,437 289,441 305,442 311,444 321,447 326,444 333,439 337,438\"/> <polygon id=\"thb\" onClick={this.onClick} onMouseOver={this.onHover} points=\"972,661 832,661 832,657 834,656 835,654 835,649 835,646 833,644 832,637 833,633 836,630 840,627 844,622 847,619 848,615 850,615 853,614 856,612 860,609 860,604 861,603 862,603 863,599 862,596 861,591 858,588 855,586 854,585 853,582 854,580 855,577 855,574 852,568 850,564 848,562 848,559 850,558 851,555 851,552 848,550 845,551 842,552 839,552 836,549 832,544 830,539 828,535 827,530 829,527 831,523 830,520 830,518 830,515 832,513 833,511 834,506 834,502 832,499 832,497 831,495 832,492 832,489 832,485 834,482 835,482 837,482 841,482 846,483 848,486 849,488 848,489 848,493 849,497 851,501 854,503 856,507 859,515 868,524 875,529 877,532 881,537 883,541 887,546 888,551 888,555 903,574 909,576 912,578 912,582 914,586 921,589 925,600 930,607 935,611 940,614 946,618 952,622 955,631 959,641 963,647 972,661\"/> <polygon id=\"tye\" onClick={this.onClick} onMouseOver={this.onHover} points=\"896,416 896,403 898,399 898,392 899,389 900,382 904,382 906,384 912,384 917,380 924,377 928,378 935,380 940,380 940,385 939,388 940,393 944,396 943,400 935,412 928,412 923,419 916,419 912,422 911,416 908,414 905,416 896,416\"/> <polygon id=\"tyn\" onClick={this.onClick} onMouseOver={this.onHover} points=\"348,180 340,180 334,183 328,189 327,193 328,195 327,201 327,203 328,205 328,215 325,218 325,226 323,231 321,233 319,234 319,241 323,243 329,249 331,253 331,259 329,260 329,268 331,272 327,285 345,286 356,289 368,294 378,300 388,310 401,329 417,331 424,332 432,327 438,327 443,325 450,324 451,326 458,326 461,312 465,304 463,290 460,284 459,280 456,276 453,273 444,268 440,264 437,258 431,254 420,251 414,240 408,237 399,235 390,227 380,218 370,207 368,204 365,203 363,198 357,191 348,180\"/> <polygon id=\"ven\" onClick={this.onClick} onMouseOver={this.onHover} points=\"407,110 399,111 393,114 385,120 380,121 372,121 367,124 365,128 364,133 357,134 350,132 350,125 346,122 341,118 341,114 343,111 343,106 344,99 349,94 354,94 358,95 371,90 376,82 388,81 392,81 404,88 408,88 412,93 412,98 407,105 407,110\"/> <polygon id=\"vin\" onClick={this.onClick} onMouseOver={this.onHover} points=\"432,37 439,46 455,54 457,63 455,71 449,77 450,86 450,95 446,102 442,105 433,104 431,101 428,97 422,93 416,91 411,92 408,88 403,88 397,85 393,82 389,81 386,71 390,63 389,51 392,47 395,46 400,40 407,38 415,34 419,36 432,37\"/> </g> </svg> ); } } SvgAncMed.propTypes = { game: PropTypes.instanceOf(Game).isRequired, mapData: PropTypes.instanceOf(MapData).isRequired, orders: PropTypes.object, onHover: PropTypes.func, onError: PropTypes.func.isRequired, onSelectLocation: PropTypes.func, onSelectVia: PropTypes.func, onOrderBuilding: PropTypes.func, onOrderBuilt: PropTypes.func, orderBuilding: PropTypes.object, showAbbreviations: PropTypes.bool }; // eslint-disable-line semi","/**\r\n==============================================================================\r\nCopyright (C) 2019 - Philip Paquette, Steven Bocco\r\n\r\n This program is free software: you can redistribute it and/or modify it under\r\n the terms of the GNU Affero General Public License as published by the Free\r\n Software Foundation, either version 3 of the License, or (at your option) any\r\n later version.\r\n\r\n This program is distributed in the hope that it will be useful, but WITHOUT\r\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n details.\r\n\r\n You should have received a copy of the GNU Affero General Public License along\r\n with this program.  If not, see <https:www.gnu.org/licenses/>.\r\n==============================================================================\r\n**/\r\nexport const Coordinates = {\"ADA\":{\"unit\":[\"527.9\",\"356.9\"],\"disl\":[\"531.9\",\"352.9\"]},\"ADL\":{\"unit\":[\"83.1\",\"359.8\"],\"disl\":[\"87.1\",\"355.8\"]},\"ADR\":{\"unit\":[\"276.8\",\"332.9\"],\"disl\":[\"280.8\",\"328.9\"]},\"AEG\":{\"unit\":[\"371.2\",\"385.3\"],\"disl\":[\"375.2\",\"381.3\"]},\"ALB\":{\"unit\":[\"314.4\",\"350.6\"],\"disl\":[\"318.4\",\"346.6\"]},\"ALE\":{\"unit\":[\"404.8\",\"502.3\"],\"disl\":[\"408.8\",\"498.3\"]},\"ALG\":{\"unit\":[\"130.4\",\"444.2\"],\"disl\":[\"134.4\",\"440.2\"]},\"ALS\":{\"unit\":[\"187.8\",\"238.0\"],\"disl\":[\"191.8\",\"234.0\"]},\"ANA\":{\"unit\":[\"455.3\",\"379.0\"],\"disl\":[\"459.3\",\"375.0\"]},\"ANK\":{\"unit\":[\"455.3\",\"339.1\"],\"disl\":[\"459.3\",\"335.1\"]},\"APU\":{\"unit\":[\"269.5\",\"345.5\"],\"disl\":[\"273.5\",\"341.5\"]},\"ARA\":{\"unit\":[\"674.0\",\"520.6\"],\"disl\":[\"678.0\",\"516.6\"]},\"ARC\":{\"unit\":[\"196.3\",\"5.8\"],\"disl\":[\"200.3\",\"1.8\"]},\"ARM\":{\"unit\":[\"562.4\",\"322.9\"],\"disl\":[\"566.4\",\"318.9\"]},\"ASW\":{\"unit\":[\"446.2\",\"539.4\"],\"disl\":[\"450.2\",\"535.4\"]},\"AUS\":{\"unit\":[\"268.9\",\"268.5\"],\"disl\":[\"272.9\",\"264.5\"]},\"AUV\":{\"unit\":[\"146.4\",\"300.5\"],\"disl\":[\"150.4\",\"296.5\"]},\"AZE\":{\"unit\":[\"591.6\",\"312.5\"],\"disl\":[\"595.6\",\"308.5\"]},\"BAL\":{\"unit\":[\"310.0\",\"136.4\"],\"disl\":[\"314.0\",\"132.4\"]},\"BAR\":{\"unit\":[\"113.6\",\"322.2\"],\"disl\":[\"117.6\",\"318.2\"]},\"BEL\":{\"unit\":[\"177.8\",\"206.8\"],\"disl\":[\"181.8\",\"202.8\"]},\"BER\":{\"unit\":[\"260.8\",\"188.9\"],\"disl\":[\"264.8\",\"184.9\"]},\"BHM\":{\"unit\":[\"264.1\",\"165.6\"],\"disl\":[\"268.1\",\"161.6\"]},\"BIE\":{\"unit\":[\"366.0\",\"189.8\"],\"disl\":[\"370.0\",\"185.8\"]},\"BIS\":{\"unit\":[\"86.2\",\"239.3\"],\"disl\":[\"90.2\",\"235.3\"]},\"BOR\":{\"unit\":[\"133.6\",\"278.1\"],\"disl\":[\"137.6\",\"274.1\"]},\"BOS\":{\"unit\":[\"294.7\",\"307.0\"],\"disl\":[\"298.7\",\"303.0\"]},\"BRI\":{\"unit\":[\"126.2\",\"232.9\"],\"disl\":[\"130.2\",\"228.9\"]},\"BRN\":{\"unit\":[\"287.1\",\"4.4\"],\"disl\":[\"291.1\",\"0.4\"]},\"BUL\":{\"unit\":[\"380.7\",\"328.2\"],\"disl\":[\"384.7\",\"324.2\"]},\"CAI\":{\"unit\":[\"475.3\",\"503.1\"],\"disl\":[\"479.3\",\"499.1\"]},\"CAS\":{\"unit\":[\"626.7\",\"311.7\"],\"disl\":[\"630.7\",\"307.7\"]},\"CAU\":{\"unit\":[\"552.9\",\"273.7\"],\"disl\":[\"556.9\",\"269.7\"]},\"CLY\":{\"unit\":[\"144.0\",\"94.6\"],\"disl\":[\"148.0\",\"90.6\"]},\"CRO\":{\"unit\":[\"280.7\",\"287.1\"],\"disl\":[\"284.7\",\"283.1\"]},\"CRP\":{\"unit\":[\"434.3\",\"183.5\"],\"disl\":[\"438.3\",\"179.5\"]},\"CZE\":{\"unit\":[\"277.5\",\"240.0\"],\"disl\":[\"281.5\",\"236.0\"]},\"DEN\":{\"unit\":[\"242.2\",\"147.7\"],\"disl\":[\"246.2\",\"143.7\"]},\"DON\":{\"unit\":[\"476.3\",\"245.3\"],\"disl\":[\"480.3\",\"241.3\"]},\"EBS\":{\"unit\":[\"475.2\",\"306.9\"],\"disl\":[\"479.2\",\"302.9\"]},\"EDI\":{\"unit\":[\"159.9\",\"111.9\"],\"disl\":[\"163.9\",\"107.9\"]},\"EME\":{\"unit\":[\"412.3\",\"434.5\"],\"disl\":[\"416.3\",\"430.5\"]},\"ENG\":{\"unit\":[\"71.6\",\"206.8\"],\"disl\":[\"75.6\",\"202.8\"]},\"ESA\":{\"unit\":[\"355.4\",\"475.7\"],\"disl\":[\"359.4\",\"471.7\"]},\"EST\":{\"unit\":[\"359.7\",\"111.2\"],\"disl\":[\"363.7\",\"107.2\"]},\"FIN\":{\"unit\":[\"356.5\",\"62.5\"],\"disl\":[\"360.5\",\"58.5\"]},\"FRA\":{\"unit\":[\"233.6\",\"212.8\"],\"disl\":[\"237.6\",\"208.8\"]},\"GDA\":{\"unit\":[\"325.9\",\"173.6\"],\"disl\":[\"329.9\",\"169.6\"]},\"GEO\":{\"unit\":[\"534.2\",\"302.1\"],\"disl\":[\"538.2\",\"298.1\"]},\"GIB\":{\"unit\":[\"50.5\",\"366.1\"],\"disl\":[\"54.5\",\"362.1\"]},\"GOB\":{\"unit\":[\"316.6\",\"97.9\"],\"disl\":[\"320.6\",\"93.9\"]},\"GOL\":{\"unit\":[\"135.7\",\"346.4\"],\"disl\":[\"139.7\",\"342.4\"]},\"GOR\":{\"unit\":[\"522.6\",\"93.0\"],\"disl\":[\"526.6\",\"89.0\"]},\"GRE\":{\"unit\":[\"335.5\",\"367.5\"],\"disl\":[\"339.5\",\"363.5\"]},\"HAM\":{\"unit\":[\"227.6\",\"190.2\"],\"disl\":[\"231.6\",\"186.2\"]},\"HEL\":{\"unit\":[\"214.3\",\"163.0\"],\"disl\":[\"218.3\",\"159.0\"]},\"HOL\":{\"unit\":[\"196.4\",\"188.2\"],\"disl\":[\"200.4\",\"184.2\"]},\"HUN\":{\"unit\":[\"309.3\",\"275.2\"],\"disl\":[\"313.3\",\"271.2\"]},\"ICE\":{\"unit\":[\"113.6\",\"22.6\"],\"disl\":[\"117.6\",\"18.6\"]},\"ION\":{\"unit\":[\"302.9\",\"391.6\"],\"disl\":[\"306.9\",\"387.6\"]},\"IRE\":{\"unit\":[\"96.2\",\"139.8\"],\"disl\":[\"100.2\",\"135.8\"]},\"IRI\":{\"unit\":[\"96.8\",\"172.3\"],\"disl\":[\"100.8\",\"168.3\"]},\"IRK\":{\"unit\":[\"569.9\",\"387.4\"],\"disl\":[\"573.9\",\"383.4\"]},\"IRN\":{\"unit\":[\"624.6\",\"385.3\"],\"disl\":[\"628.6\",\"381.3\"]},\"IRN/NC\":{\"unit\":[\"639.2\",\"357.5\"],\"disl\":[\"643.2\",\"353.5\"]},\"IRN/SC\":{\"unit\":[\"679.2\",\"446.8\"],\"disl\":[\"683.2\",\"442.8\"]},\"ISR\":{\"unit\":[\"494.2\",\"424.0\"],\"disl\":[\"498.2\",\"420.0\"]},\"IST\":{\"unit\":[\"422.7\",\"355.9\"],\"disl\":[\"426.7\",\"351.9\"]},\"IZM\":{\"unit\":[\"398.5\",\"381.1\"],\"disl\":[\"402.5\",\"377.1\"]},\"JOR\":{\"unit\":[\"512.1\",\"453.3\"],\"disl\":[\"516.1\",\"449.3\"]},\"KAZ\":{\"unit\":[\"644.6\",\"198.2\"],\"disl\":[\"648.6\",\"194.2\"]},\"KHA\":{\"unit\":[\"478.5\",\"224.4\"],\"disl\":[\"482.5\",\"220.4\"]},\"KIE\":{\"unit\":[\"428.0\",\"214.6\"],\"disl\":[\"432.0\",\"210.6\"]},\"KRA\":{\"unit\":[\"334.4\",\"221.3\"],\"disl\":[\"338.4\",\"217.3\"]},\"LAP\":{\"unit\":[\"332.3\",\"7.1\"],\"disl\":[\"336.3\",\"3.1\"]},\"LAT\":{\"unit\":[\"361.2\",\"137.7\"],\"disl\":[\"365.2\",\"133.7\"]},\"LBN\":{\"unit\":[\"306.5\",\"450.5\"],\"disl\":[\"310.5\",\"446.5\"]},\"LIB\":{\"unit\":[\"301.8\",\"501.0\"],\"disl\":[\"305.8\",\"497.0\"]},\"LIG\":{\"unit\":[\"194.5\",\"323.0\"],\"disl\":[\"198.5\",\"319.0\"]},\"LIT\":{\"unit\":[\"347.1\",\"161.0\"],\"disl\":[\"351.1\",\"157.0\"]},\"LIV\":{\"unit\":[\"134.7\",\"137.8\"],\"disl\":[\"138.7\",\"133.8\"]},\"LON\":{\"unit\":[\"160.6\",\"182.9\"],\"disl\":[\"164.6\",\"178.9\"]},\"LYO\":{\"unit\":[\"164.5\",\"264.0\"],\"disl\":[\"168.5\",\"260.0\"]},\"MAC\":{\"unit\":[\"335.3\",\"344.0\"],\"disl\":[\"339.3\",\"340.0\"]},\"MAD\":{\"unit\":[\"66.9\",\"318.0\"],\"disl\":[\"70.9\",\"314.0\"]},\"MAL\":{\"unit\":[\"255.6\",\"440.0\"],\"disl\":[\"259.6\",\"436.0\"]},\"MAR\":{\"unit\":[\"171.2\",\"292.4\"],\"disl\":[\"175.2\",\"288.4\"]},\"MID\":{\"unit\":[\"13.7\",\"211.8\"],\"disl\":[\"17.7\",\"207.8\"]},\"MIL\":{\"unit\":[\"227.0\",\"283.8\"],\"disl\":[\"231.0\",\"279.8\"]},\"MOL\":{\"unit\":[\"391.1\",\"262.2\"],\"disl\":[\"395.1\",\"258.2\"]},\"MON\":{\"unit\":[\"187.1\",\"301.7\"],\"disl\":[\"191.1\",\"297.7\"]},\"MOR\":{\"unit\":[\"45.3\",\"411.6\"],\"disl\":[\"49.3\",\"407.6\"]},\"MOS\":{\"unit\":[\"434.8\",\"151.0\"],\"disl\":[\"438.8\",\"147.0\"]},\"MUN\":{\"unit\":[\"224.5\",\"248.0\"],\"disl\":[\"228.5\",\"244.0\"]},\"MUR\":{\"unit\":[\"451.5\",\"51.8\"],\"disl\":[\"455.5\",\"47.8\"]},\"NAO\":{\"unit\":[\"52.6\",\"107.8\"],\"disl\":[\"56.6\",\"103.8\"]},\"NAP\":{\"unit\":[\"270.1\",\"365.4\"],\"disl\":[\"274.1\",\"361.4\"]},\"NAV\":{\"unit\":[\"99.9\",\"298.1\"],\"disl\":[\"103.9\",\"294.1\"]},\"NTH\":{\"unit\":[\"186.5\",\"127.8\"],\"disl\":[\"190.5\",\"123.8\"]},\"NWG\":{\"unit\":[\"188.5\",\"74.7\"],\"disl\":[\"192.5\",\"70.7\"]},\"NWY\":{\"unit\":[\"232.3\",\"101.2\"],\"disl\":[\"236.3\",\"97.2\"]},\"ODE\":{\"unit\":[\"406.9\",\"241.2\"],\"disl\":[\"410.9\",\"237.2\"]},\"PAR\":{\"unit\":[\"149.4\",\"243.9\"],\"disl\":[\"153.4\",\"239.9\"]},\"PER\":{\"unit\":[\"662.4\",\"463.1\"],\"disl\":[\"666.4\",\"459.1\"]},\"PIC\":{\"unit\":[\"159.3\",\"220.8\"],\"disl\":[\"163.3\",\"216.8\"]},\"PIE\":{\"unit\":[\"205.1\",\"291.1\"],\"disl\":[\"209.1\",\"287.1\"]},\"POD\":{\"unit\":[\"370.2\",\"232.4\"],\"disl\":[\"374.2\",\"228.4\"]},\"POR\":{\"unit\":[\"30.5\",\"315.9\"],\"disl\":[\"34.5\",\"311.9\"]},\"PRU\":{\"unit\":[\"294.7\",\"181.6\"],\"disl\":[\"298.7\",\"177.6\"]},\"RED\":{\"unit\":[\"522.6\",\"521.0\"],\"disl\":[\"526.6\",\"517.0\"]},\"ROM\":{\"unit\":[\"244.9\",\"333.6\"],\"disl\":[\"248.9\",\"329.6\"]},\"ROS\":{\"unit\":[\"493.2\",\"270.3\"],\"disl\":[\"497.2\",\"266.3\"]},\"RUH\":{\"unit\":[\"206.4\",\"210.1\"],\"disl\":[\"210.4\",\"206.1\"]},\"RUM\":{\"unit\":[\"359.1\",\"285.8\"],\"disl\":[\"363.1\",\"281.8\"]},\"SAO\":{\"unit\":[\"4.3\",\"389.5\"],\"disl\":[\"8.3\",\"385.5\"]},\"SAU\":{\"unit\":[\"569.9\",\"505.2\"],\"disl\":[\"573.9\",\"501.2\"]},\"SAX\":{\"unit\":[\"245.6\",\"232.7\"],\"disl\":[\"249.6\",\"228.7\"]},\"SER\":{\"unit\":[\"326.5\",\"315.0\"],\"disl\":[\"330.5\",\"311.0\"]},\"SEV\":{\"unit\":[\"443.8\",\"270.7\"],\"disl\":[\"447.8\",\"266.7\"]},\"SIB\":{\"unit\":[\"635.1\",\"87.8\"],\"disl\":[\"639.1\",\"83.8\"]},\"SIL\":{\"unit\":[\"293.5\",\"214.0\"],\"disl\":[\"297.5\",\"210.0\"]},\"SIN\":{\"unit\":[\"485.1\",\"468.4\"],\"disl\":[\"489.1\",\"464.4\"]},\"SKA\":{\"unit\":[\"248.9\",\"119.8\"],\"disl\":[\"252.9\",\"115.8\"]},\"SLK\":{\"unit\":[\"313.3\",\"251.9\"],\"disl\":[\"317.3\",\"247.9\"]},\"SOG\":{\"unit\":[\"64.5\",\"387.0\"],\"disl\":[\"68.5\",\"383.0\"]},\"STP\":{\"unit\":[\"390.1\",\"110.9\"],\"disl\":[\"394.1\",\"106.9\"]},\"SVE\":{\"unit\":[\"50.5\",\"339.0\"],\"disl\":[\"54.5\",\"335.0\"]},\"SWE\":{\"unit\":[\"276.6\",\"124.6\"],\"disl\":[\"280.6\",\"120.6\"]},\"SWI\":{\"unit\":[\"206.5\",\"268.0\"],\"disl\":[\"210.5\",\"264.0\"]},\"SYR\":{\"unit\":[\"528.2\",\"395.3\"],\"disl\":[\"532.2\",\"391.3\"]},\"TUN\":{\"unit\":[\"204.0\",\"446.3\"],\"disl\":[\"208.0\",\"442.3\"]},\"TUS\":{\"unit\":[\"225.6\",\"311.7\"],\"disl\":[\"229.6\",\"307.7\"]},\"TYR\":{\"unit\":[\"234.2\",\"374.7\"],\"disl\":[\"238.2\",\"370.7\"]},\"URA\":{\"unit\":[\"526.8\",\"16.3\"],\"disl\":[\"530.8\",\"12.3\"]},\"VEN\":{\"unit\":[\"249.6\",\"309.7\"],\"disl\":[\"253.6\",\"305.7\"]},\"VOL\":{\"unit\":[\"514.2\",\"192.9\"],\"disl\":[\"518.2\",\"188.9\"]},\"WAL\":{\"unit\":[\"130.0\",\"188.9\"],\"disl\":[\"134.0\",\"184.9\"]},\"WAR\":{\"unit\":[\"316.6\",\"203.5\"],\"disl\":[\"320.6\",\"199.5\"]},\"WBS\":{\"unit\":[\"423.6\",\"309.6\"],\"disl\":[\"427.6\",\"305.6\"]},\"WHI\":{\"unit\":[\"422.7\",\"9.9\"],\"disl\":[\"426.7\",\"5.9\"]},\"WME\":{\"unit\":[\"143.0\",\"380.1\"],\"disl\":[\"147.0\",\"376.1\"]},\"WSA\":{\"unit\":[\"47.4\",\"511.5\"],\"disl\":[\"51.4\",\"507.5\"]},\"YOR\":{\"unit\":[\"154.6\",\"153.7\"],\"disl\":[\"158.6\",\"149.7\"]}};\r\nexport const SymbolSizes = {\"Fleet\":{\"width\":16.0,\"height\":16.0},\"Army\":{\"width\":16.0,\"height\":16.0},\"Wing\":{\"width\":20.0,\"height\":20.0},\"DislodgedFleet\":{\"width\":20.0,\"height\":20.0},\"DislodgedArmy\":{\"width\":20.0,\"height\":20.0},\"DislodgedWing\":{\"width\":20.0,\"height\":20.0},\"FailedOrder\":{\"width\":17.0,\"height\":17.0},\"SupplyCenter\":{\"width\":5.0,\"height\":5.0},\"BuildUnit\":{\"width\":24.0,\"height\":24.0},\"RemoveUnit\":{\"width\":24.0,\"height\":24.0},\"WaivedBuild\":{\"width\":25.0,\"height\":25.0},\"HoldUnit\":{\"width\":30.0,\"height\":30.0},\"SupportHoldUnit\":{\"width\":34.5,\"height\":34.5},\"ConvoyTriangle\":{\"width\":40.0,\"height\":34.5},\"Stroke\":{\"width\":2.0,\"height\":4.0}};\r\nexport const Colors = {\"BRITAIN\":\"royalblue\",\"EGYPT\":\"#808000\",\"FRANCE\":\"#00FFFF\",\"GERMANY\":\"darkgrey\",\"ITALY\":\"#80FF80\",\"POLAND\":\"#FF0000\",\"RUSSIA\":\"#008000\",\"SPAIN\":\"#FF8080\",\"TURKEY\":\"#FFFF00\",\"UKRAINE\":\"#FF00FF\"};\r\n","/**\r\n==============================================================================\r\nCopyright (C) 2019 - Philip Paquette, Steven Bocco\r\n\r\n This program is free software: you can redistribute it and/or modify it under\r\n the terms of the GNU Affero General Public License as published by the Free\r\n Software Foundation, either version 3 of the License, or (at your option) any\r\n later version.\r\n\r\n This program is distributed in the hope that it will be useful, but WITHOUT\r\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n details.\r\n\r\n You should have received a copy of the GNU Affero General Public License along\r\n with this program.  If not, see <https:www.gnu.org/licenses/>.\r\n==============================================================================\r\n**/\r\n/** Generated with parameters: Namespace(input='src/diplomacy/maps/svg/modern.svg', name='SvgModern', output='src/gui/maps/modern/') **/\r\n import React from 'react'; import PropTypes from 'prop-types'; import './SvgModern.css'; import {Coordinates, SymbolSizes, Colors} from \"./SvgModernMetadata\"; import {getClickedID, parseLocation, setInfluence} from \"../common/common\"; import {Game} from \"../../../diplomacy/engine/game\"; import {MapData} from \"../../utils/map_data\"; import {UTILS} from \"../../../diplomacy/utils/utils\"; import {Diplog} from \"../../../diplomacy/utils/diplog\"; import {extendOrderBuilding} from \"../../utils/order_building\"; import {Unit} from \"../common/unit\"; import {Hold} from \"../common/hold\"; import {Move} from \"../common/move\"; import {SupportMove} from \"../common/supportMove\"; import {SupportHold} from \"../common/supportHold\"; import {Convoy} from \"../common/convoy\"; import {Build} from \"../common/build\"; import {Disband} from \"../common/disband\"; export class SvgModern extends React.Component { constructor(props) { super(props); this.onClick = this.onClick.bind(this); this.onHover = this.onHover.bind(this); } onClick(event) { if (this.props.orderBuilding) return this.handleClickedID(getClickedID(event)); } onHover(event) { return this.handleHoverID(getClickedID(event)); } handleClickedID(id) { const orderBuilding = this.props.orderBuilding; if (!orderBuilding.builder) return this.props.onError('No orderable locations.'); const province = this.props.mapData.getProvince(id); if (!province) throw new Error(`Cannot find a province named ${id}`); const stepLength = orderBuilding.builder.steps.length; if (orderBuilding.path.length >= stepLength) throw new Error(`Order building: current steps count (${orderBuilding.path.length}) should be less than  expected steps count (${stepLength}) (${orderBuilding.path.join(', ')}).`); const lengthAfterClick = orderBuilding.path.length + 1; let validLocations = []; const testedPath = [orderBuilding.type].concat(orderBuilding.path); const value = UTILS.javascript.getTreeValue(this.props.game.ordersTree, testedPath); if (value !== null) { const checker = orderBuilding.builder.steps[lengthAfterClick - 1]; try { const possibleLocations = checker(province, orderBuilding.power); for (let possibleLocation of possibleLocations) { possibleLocation = possibleLocation.toUpperCase(); if (value.includes(possibleLocation)) validLocations.push(possibleLocation); } } catch (error) { return this.props.onError(error); } } if (!validLocations.length) return this.props.onError('Disallowed.'); if (validLocations.length > 1 && orderBuilding.type === 'S' && orderBuilding.path.length >= 2) { /* We are building a support order and we have a multiple choice for a location. */ /* Let's check if next location to choose is a coast. To have a coast: */ /* - all possible locations must start with same 3 characters. */ /* - we expect at least province name in possible locations (e.g. 'SPA' for 'SPA/NC'). */ /* If we have a coast, we will remove province name from possible locations. */ let isACoast = true; let validLocationsNoProvinceName = []; for (let i = 0; i < validLocations.length; ++i) { let location = validLocations[i]; if (i > 0) { /* Compare 3 first letters with previous location. */ if (validLocations[i - 1].substring(0, 3).toUpperCase() !== validLocations[i].substring(0, 3).toUpperCase()) { /* No same prefix with previous location. We does not have a coast. */ isACoast = false; break; } } if (location.length !== 3) validLocationsNoProvinceName.push(location); } if (validLocations.length === validLocationsNoProvinceName.length) { /* We have not found province name. */ isACoast = false; } if (isACoast) { /* We want to choose location in a coastal province. Let's remove province name. */ validLocations = validLocationsNoProvinceName; } } if (validLocations.length > 1) { if (this.props.onSelectLocation) { return this.props.onSelectLocation(validLocations, orderBuilding.power, orderBuilding.type, orderBuilding.path); } else { Diplog.warn(`Forced to select first valid location.`); validLocations = [validLocations[0]]; } } let orderBuildingType = orderBuilding.type; if (lengthAfterClick === stepLength && orderBuildingType === 'M') { const moveOrderPath = ['M'].concat(orderBuilding.path, validLocations[0]); const moveTypes = UTILS.javascript.getTreeValue(this.props.game.ordersTree, moveOrderPath); if (moveTypes !== null) { if (moveTypes.length === 2 && this.props.onSelectVia) { /* This move can be done either regularly or VIA a fleet. Let user choose. */ return this.props.onSelectVia(validLocations[0], orderBuilding.power, orderBuilding.path); } else { orderBuildingType = moveTypes[0]; } } } extendOrderBuilding( orderBuilding.power, orderBuildingType, orderBuilding.path, validLocations[0], this.props.onOrderBuilding, this.props.onOrderBuilt, this.props.onError ); } handleHoverID(id) { if (this.props.onHover) { const province = this.props.mapData.getProvince(id); if (province) { this.props.onHover(province.name, this.getRelatedOrders(province.name)); } } } getRelatedOrders(name) { const orders = []; if (this.props.orders) { for (let powerOrders of Object.values(this.props.orders)) { if (powerOrders) { for (let order of powerOrders) { const pieces = order.split(/ +/); if (pieces[1].slice(0, 3) === name.toUpperCase().slice(0, 3)) orders.push(order); } } } } return orders; } getNeighbors(extraLocation) { const selectedPath = [this.props.orderBuilding.type].concat(this.props.orderBuilding.path); if (extraLocation) selectedPath.push(extraLocation); const possibleNeighbors = UTILS.javascript.getTreeValue(this.props.game.ordersTree, selectedPath); const neighbors = possibleNeighbors ? possibleNeighbors.map(neighbor => parseLocation(neighbor)) : []; return neighbors.length ? neighbors: null; } render() { const classes = {\"_ada\":\"nopower\",\"_adr\":\"water\",\"_aeg\":\"water\",\"_alb\":\"nopower\",\"_ale\":\"nopower\",\"_alg\":\"nopower\",\"_als\":\"nopower\",\"_ana\":\"nopower\",\"_adl\":\"nopower\",\"_ank\":\"nopower\",\"_apu\":\"nopower\",\"_ara\":\"water\",\"_arc\":\"water\",\"_arm\":\"nopower\",\"_asw\":\"nopower\",\"_aus\":\"nopower\",\"_auv\":\"nopower\",\"_aze\":\"nopower\",\"_bal\":\"water\",\"_bar\":\"nopower\",\"_bel\":\"nopower\",\"_ber\":\"nopower\",\"_bhm\":\"water\",\"_bie\":\"nopower\",\"_bis\":\"water\",\"_bor\":\"nopower\",\"_bos\":\"nopower\",\"_bri\":\"nopower\",\"_brn\":\"water\",\"_bul\":\"nopower\",\"_cai\":\"nopower\",\"_cas\":\"water\",\"_cau\":\"nopower\",\"_crp\":\"nopower\",\"_cly\":\"nopower\",\"_cro\":\"nopower\",\"_cze\":\"nopower\",\"_den\":\"nopower\",\"_don\":\"nopower\",\"_ebs\":\"water\",\"_edi\":\"nopower\",\"_eme\":\"water\",\"_eng\":\"water\",\"_esa\":\"nopower\",\"_est\":\"nopower\",\"_fin\":\"nopower\",\"_fra\":\"nopower\",\"_gda\":\"nopower\",\"_geo\":\"nopower\",\"_gib\":\"nopower\",\"_gob\":\"water\",\"_gol\":\"water\",\"_gor\":\"nopower\",\"_gre\":\"nopower\",\"_ham\":\"nopower\",\"_hel\":\"water\",\"_hol\":\"nopower\",\"_hun\":\"nopower\",\"_ice\":\"nopower\",\"_ion\":\"water\",\"_ire\":\"nopower\",\"_iri\":\"water\",\"_irk\":\"nopower\",\"_irn\":\"nopower\",\"_isr\":\"nopower\",\"_ist\":\"nopower\",\"_izm\":\"nopower\",\"_jor\":\"nopower\",\"_kaz\":\"nopower\",\"_kha\":\"nopower\",\"_kie\":\"nopower\",\"_kra\":\"nopower\",\"_lap\":\"nopower\",\"_lat\":\"nopower\",\"_lbn\":\"water\",\"_lib\":\"nopower\",\"_lig\":\"nopower\",\"_lit\":\"nopower\",\"_lpl\":\"nopower\",\"_lon\":\"nopower\",\"_lyo\":\"nopower\",\"_mac\":\"nopower\",\"_mad\":\"nopower\",\"_mal\":\"water\",\"_mar\":\"nopower\",\"_mat\":\"water\",\"_mil\":\"nopower\",\"_mol\":\"nopower\",\"_mon\":\"nopower\",\"_mor\":\"nopower\",\"_mos\":\"nopower\",\"_mun\":\"nopower\",\"_mur\":\"nopower\",\"_nap\":\"nopower\",\"_nat\":\"water\",\"_nav\":\"nopower\",\"_nwy\":\"nopower\",\"_nth\":\"water\",\"_nwg\":\"water\",\"_ode\":\"nopower\",\"_par\":\"nopower\",\"_per\":\"water\",\"_pic\":\"nopower\",\"_pie\":\"nopower\",\"_pod\":\"nopower\",\"_por\":\"nopower\",\"_pru\":\"nopower\",\"_red\":\"water\",\"_rom\":\"nopower\",\"_ros\":\"nopower\",\"_ruh\":\"nopower\",\"_rum\":\"nopower\",\"_sat\":\"water\",\"_sau\":\"nopower\",\"_sax\":\"nopower\",\"_ser\":\"nopower\",\"_sev\":\"nopower\",\"_sib\":\"nopower\",\"_sil\":\"nopower\",\"_sin\":\"nopower\",\"_ska\":\"water\",\"_slk\":\"nopower\",\"_stp\":\"nopower\",\"_sog\":\"water\",\"_svl\":\"nopower\",\"_swe\":\"nopower\",\"_swi\":\"nopower\",\"_syr\":\"nopower\",\"_tun\":\"nopower\",\"_tus\":\"nopower\",\"_tyr\":\"water\",\"_ura\":\"nopower\",\"_ven\":\"nopower\",\"_vol\":\"nopower\",\"_wal\":\"nopower\",\"_war\":\"nopower\",\"_wbs\":\"water\",\"_wme\":\"water\",\"_wsa\":\"nopower\",\"_whi\":\"water\",\"_yor\":\"nopower\",\"BriefLabelLayer\":\"labeltext\",\"CurrentNote\":\"currentnotetext\",\"CurrentNote2\":\"currentnotetext\",\"CurrentPhase\":\"currentphasetext\",\"MouseLayer\":\"invisibleContent\"}; const game = this.props.game; const mapData = this.props.mapData; const orders = this.props.orders; /* Current phase. */ const current_phase = (game.phase[0] === '?' || game.phase === 'COMPLETED') ? 'FINAL' : game.phase; /* Notes. */ const nb_centers = []; for (let power of Object.values(game.powers)) { if (!power.isEliminated()) nb_centers.push([power.name.substr(0, 3), power.centers.length]); } /* Sort nb_centers by descending number of centers. */ nb_centers.sort((a, b) => { return -(a[1] - b[1]) || a[0].localeCompare(b[0]); }); const nb_centers_per_power = nb_centers.map((couple) => (couple[0] + ': ' + couple[1])).join(' '); const note = game.note; /* Adding units, influence and orders. */ const renderedUnits = []; const renderedDislodgedUnits = []; const renderedOrders = []; const renderedOrders2 = []; const renderedHighestOrders = []; for (let power of Object.values(game.powers)) if (!power.isEliminated()) { for (let unit of power.units) { renderedUnits.push( <Unit key={unit} unit={unit} powerName={power.name} isDislodged={false} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } for (let unit of Object.keys(power.retreats)) { renderedDislodgedUnits.push( <Unit key={unit} unit={unit} powerName={power.name} isDislodged={true} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } for (let center of power.centers) { setInfluence(classes, mapData, center, power.name); } for (let loc of power.influence) { if (!mapData.supplyCenters.has(loc)) setInfluence(classes, mapData, loc, power.name); } if (orders) { const powerOrders = (orders && orders.hasOwnProperty(power.name) && orders[power.name]) || []; for (let order of powerOrders) { const tokens = order.split(/ +/); if (!tokens || tokens.length < 3) continue; const unit_loc = tokens[1]; if (tokens[2] === 'H') { renderedOrders.push( <Hold key={order} loc={unit_loc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else if (tokens[2] === '-') { const destLoc = tokens[tokens.length - (tokens[tokens.length - 1] === 'VIA' ? 2 : 1)]; renderedOrders.push( <Move key={order} srcLoc={unit_loc} dstLoc={destLoc} powerName={power.name} phaseType={game.getPhaseType()} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else if (tokens[2] === 'S') { const destLoc = tokens[tokens.length - 1]; if (tokens.includes('-')) { const srcLoc = tokens[4]; renderedOrders2.push( <SupportMove key={order} loc={unit_loc} srcLoc={srcLoc} dstLoc={destLoc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else { renderedOrders2.push( <SupportHold key={order} loc={unit_loc} dstLoc={destLoc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } } else if (tokens[2] === 'C') { const srcLoc = tokens[4]; const destLoc = tokens[tokens.length - 1]; if ((srcLoc !== destLoc) && (tokens.includes('-'))) { renderedOrders2.push( <Convoy key={order} loc={unit_loc} srcLoc={srcLoc} dstLoc={destLoc} powerName={power.name} coordinates={Coordinates} colors={Colors} symbolSizes={SymbolSizes}/> ); } } else if (tokens[2] === 'B') { renderedHighestOrders.push( <Build key={order} unitType={tokens[0]} loc={unit_loc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } else if (tokens[2] === 'D') { renderedHighestOrders.push( <Disband key={order} loc={unit_loc} phaseType={game.getPhaseType()} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } else if (tokens[2] === 'R') { const destLoc = tokens[3]; renderedOrders.push( <Move key={order} srcLoc={unit_loc} dstLoc={destLoc} powerName={power.name} phaseType={game.getPhaseType()} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else { throw new Error(`Unknown error to render (${order}).`); } } } } if (this.props.orderBuilding && this.props.orderBuilding.path.length) { const clicked = parseLocation(this.props.orderBuilding.path[0]); const province = this.props.mapData.getProvince(clicked); if (!province) throw new Error(('Unknown clicked province ' + clicked)); const clickedID = province.getID(classes); if (!clicked) throw new Error(`Unknown path (${clickedID}) for province (${clicked}).`); classes[clickedID] = 'provinceRed'; const neighbors = this.getNeighbors(); if (neighbors) { for (let neighbor of neighbors) { const neighborProvince = this.props.mapData.getProvince(neighbor); if (!neighborProvince) throw new Error('Unknown neighbor province ' + neighbor); const neighborID = neighborProvince.getID(classes); if (!neighborID) throw new Error(`Unknown neoghbor path (${neighborID}) for province (${neighbor}).`); classes[neighborID] = neighborProvince.isWater() ? 'provinceBlue' : 'provinceGreen'; } } } if (this.props.showAbbreviations === false) { classes['BriefLabelLayer'] = 'visibilityHidden'; } return ( <svg className=\"SvgModern\" colorRendering=\"optimizeQuality\" height=\"600px\" imageRendering=\"optimizeQuality\" preserveAspectRatio=\"xMinYMin\" shapeRendering=\"geometricPrecision\" textRendering=\"optimizeLegibility\" viewBox=\"0 0 716 600\" width=\"716px\" xmlns=\"http://www.w3.org/2000/svg\"> <title>MODERN</title> <defs> <symbol id=\"WaivedBuild\" overflow=\"visible\" viewBox=\"0 0 100 100\"> <linearGradient gradientUnits=\"userSpaceOnUse\" id=\"symWBGradient\" x1=\"15\" x2=\"100\" y1=\"100\" y2=\"10\"> <stop offset=\"20%\" stopColor=\"yellow\" stopOpacity=\"1\"/> <stop offset=\"95%\" stopColor=\"yellow\" stopOpacity=\"0\"/> </linearGradient> <linearGradient gradientUnits=\"userSpaceOnUse\" id=\"symShadowWBGradient\" x1=\"15\" x2=\"100\" y1=\"100\" y2=\"10\"> <stop offset=\"20%\" stopColor=\"black\" stopOpacity=\"0.5\"/> <stop offset=\"90%\" stopColor=\"black\" stopOpacity=\"0\"/> </linearGradient> <g> <polygon fill=\"url(#symShadowWBGradient)\" points=\"40,100 100,35 95,30 40,85 13,65 10,70\" transform=\"translate(1 7)\"/> <polygon fill=\"url(#symWBGradient)\" points=\"40,100 100,35 90,20 40,85 13,65 10,70\" stroke=\"black\" strokeWidth=\"0.5\"/> </g> </symbol> <symbol id=\"BuildUnit\" overflow=\"visible\" viewBox=\"-23.5 -23.5 153 153\"> <g> <g fill=\"none\" opacity=\"0.5\" stroke=\"black\" strokeWidth=\"7\" transform=\"translate(6 6)\"> <circle cx=\"50\" cy=\"50\" r=\"10\"/> <circle cx=\"50\" cy=\"50\" r=\"30\"/> <circle cx=\"50\" cy=\"50\" r=\"50\"/> <circle cx=\"50\" cy=\"50\" r=\"70\"/> </g> <g fill=\"none\" stroke=\"yellow\" strokeWidth=\"7\"> <circle cx=\"50\" cy=\"50\" r=\"10\"/> <circle cx=\"50\" cy=\"50\" r=\"30\"/> <circle cx=\"50\" cy=\"50\" r=\"50\"/> <circle cx=\"50\" cy=\"50\" r=\"70\"/> </g> </g> </symbol> <symbol id=\"RemoveUnit\" overflow=\"visible\" viewBox=\"-2.5 -2.5 15.5 15.5\"> <g fill=\"none\" stroke=\"red\" strokeWidth=\"1\"> <circle cx=\"5\" cy=\"5\" r=\"7\"/> <line x1=\"-2\" x2=\"12\" y1=\"-2\" y2=\"12\"/> <line x1=\"-2\" x2=\"12\" y1=\"12\" y2=\"-2\"/> </g> </symbol> <symbol id=\"FailedOrder\" overflow=\"visible\" viewBox=\"0 0 35 35\"> <g> <polygon className=\"shadow\" points=\"0,0 12,0 17,6 22,0 35,0 22,17 32,34 19,34 15,27 9,34 -4,34 10,17\" strokeWidth=\"1\" transform=\"translate(3.5,3.5)\"/> <polygon fill=\"red\" fillOpacity=\"1\" points=\"0,0 12,0 17,6 22,0 35,0 22,17 32,34 19,34 15,27 9,34 -4,34 10,17\" stroke=\"black\" strokeWidth=\"3%\"/> </g> </symbol> <symbol id=\"SupplyCenter\" overflow=\"visible\" viewBox=\"-0.375 -0.375 10.75 10.75\"> <g> <circle cx=\"5\" cy=\"5\" r=\"3\" stroke=\"black\" strokeWidth=\"0.4\"/> <circle cx=\"5\" cy=\"5\" fill=\"none\" r=\"5\" stroke=\"black\" strokeWidth=\"0.75\"/> </g> </symbol> <symbol id=\"HoldUnit\" overflow=\"visible\" viewBox=\"-5 -5 76.6 76.6\"> <g> <polygon fill=\"none\" points=\"47.1,0.0 66.6,19.5 66.6, 47.1 47.1,66.6 19.5,66.6 0.0,47.1 0.0,19.5 19.5,0.0\" stroke=\"black\" strokeWidth=\"10\"/> <polygon fill=\"none\" points=\"47.1,0.0 66.6,19.5 66.6, 47.1 47.1,66.6 19.5,66.6 0.0,47.1 0.0,19.5 19.5,0.0\" strokeWidth=\"6\"/> </g> </symbol> <symbol id=\"SupportHoldUnit\" overflow=\"visible\" viewBox=\"-5 -5 86.6 86.6\"> <g> <polygon fill=\"none\" opacity=\"0.45\" points=\"54.2,0.0 76.6,22.4 76.6,54.2 54.2,76.6 22.4,76.6 0.0,54.2 0.0,22.4 22.4,0.0\" stroke=\"black\" strokeWidth=\"10\"/> <polygon fill=\"none\" points=\"54.2,0.0 76.6,22.4 76.6,54.2 54.2,76.6 22.4,76.6 0.0,54.2 0.0,22.4 22.4,0.0\" strokeDasharray=\"5,5\" strokeWidth=\"6\"/> </g> </symbol> <symbol id=\"ConvoyTriangle\" overflow=\"visible\" viewBox=\"-9 -10 84.4 72.4\"> <g> <polygon fill=\"none\" opacity=\"0.45\" points=\"33.2,0.0 66.4,57.4 0.0,57.4\" stroke=\"black\" strokeWidth=\"10\"/> <polygon fill=\"none\" points=\"33.2,0.0 66.4,57.4 0.0,57.4\" strokeDasharray=\"15,5\" strokeWidth=\"6\"/> </g> </symbol> <symbol id=\"Army\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"black\" height=\"13\" opacity=\"0.40\" rx=\"4\" stroke=\"black\" strokeWidth=\"1\" width=\"23\" x=\"2\" y=\"2\"/> <rect height=\"13\" rx=\"4\" stroke=\"black\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"13\" x=\"6\" y=\"6\"/> <rect height=\"1\" width=\"14\" x=\"5\" y=\"7\"/> <rect height=\"1\" width=\"12\" x=\"6\" y=\"8\"/> <rect height=\"1\" width=\"10\" x=\"7\" y=\"9\"/> <rect height=\"3\" width=\"5\" x=\"10\" y=\"3\"/> <rect height=\"1.5\" width=\"1\" x=\"15\" y=\"4.5\"/> <line x1=\"3\" x2=\"10\" y1=\"4\" y2=\"4\"/> </g> </g> </symbol> <symbol id=\"Fleet\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"black\" height=\"13\" opacity=\"0.40\" rx=\"4\" stroke=\"black\" strokeWidth=\"1\" width=\"23\" x=\"2\" y=\"2\"/> <rect height=\"13\" rx=\"4\" stroke=\"black\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"16.5\" x=\"3\" y=\"7\"/> <rect height=\"1\" width=\"15\" x=\"4\" y=\"8\"/> <rect height=\"1\" width=\"13.5\" x=\"5\" y=\"9\"/> <rect height=\"1\" width=\"2.75\" x=\"13.5\" y=\"6\"/> <rect height=\"2\" width=\"4\" x=\"7\" y=\"5\"/> <rect height=\"1\" width=\"1\" x=\"8.5\" y=\"4\"/> <rect height=\"1\" width=\"1\" x=\"6\" y=\"6\"/> </g> </g> </symbol> <symbol id=\"DislodgedArmy\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"red\" height=\"13\" opacity=\"0.50\" rx=\"4\" stroke=\"red\" strokeWidth=\"1\" width=\"23\" x=\"3\" y=\"3\"/> <rect height=\"13\" rx=\"4\" stroke=\"red\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"13\" x=\"6\" y=\"6\"/> <rect height=\"1\" width=\"14\" x=\"5\" y=\"7\"/> <rect height=\"1\" width=\"12\" x=\"6\" y=\"8\"/> <rect height=\"1\" width=\"10\" x=\"7\" y=\"9\"/> <rect height=\"3\" width=\"5\" x=\"10\" y=\"3\"/> <rect height=\"1.5\" width=\"1\" x=\"15\" y=\"4.5\"/> <line x1=\"3\" x2=\"10\" y1=\"4\" y2=\"4\"/> </g> </g> </symbol> <symbol id=\"DislodgedFleet\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"red\" height=\"13\" opacity=\"0.50\" rx=\"4\" stroke=\"red\" strokeWidth=\"1\" width=\"23\" x=\"3\" y=\"3\"/> <rect height=\"13\" rx=\"4\" stroke=\"red\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"16.5\" x=\"3\" y=\"7\"/> <rect height=\"1\" width=\"15\" x=\"4\" y=\"8\"/> <rect height=\"1\" width=\"13.5\" x=\"5\" y=\"9\"/> <rect height=\"1\" width=\"2.75\" x=\"13.5\" y=\"6\"/> <rect height=\"2\" width=\"4\" x=\"7\" y=\"5\"/> <rect height=\"1\" width=\"1\" x=\"8.5\" y=\"4\"/> <rect height=\"1\" width=\"1\" x=\"6\" y=\"6\"/> </g> </g> </symbol> <marker id=\"arrow\" markerHeight=\"4\" markerUnits=\"strokeWidth\" markerWidth=\"4\" orient=\"auto\" refX=\"5\" refY=\"5\" viewBox=\"0 0 10 10\"><path d=\"M 0 0 L 10 5 L 0 10 z\"/></marker> <pattern height=\"10\" id=\"patternRed\" patternTransform=\"scale(0.39 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"red\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"pink\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternBrown\" patternTransform=\"scale(0.39 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"peru\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"antiquewhite\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternGreen\" patternTransform=\"scale(0.39 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"seagreen\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"yellowgreen\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternBlue\" patternTransform=\"scale(0.39 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"CornflowerBlue\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"cyan\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternBlack\" patternTransform=\"scale(0.39 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"black\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"gray\" height=\"10\" width=\"10\" x=\"0\" y=\"5\"/> </pattern> </defs> <g id=\"MapLayer\"> <rect className=\"style1\" height=\"85\" width=\"210\" x=\"205\" y=\"355\"/> <polygon className={classes['_ada']} id=\"_ada\" points=\"483,407 491,409 499,400 502,403 506,396,516,393,520,389,530,390,546,378,552,380,558,373 563,374 568,369 585,369 581,362 575,360 571,343 569,340 563,339 560,337 555,341,543,345,539,352,515,359,502,357 480,376 482,383 478,393\"/> <polygon className={classes['_adr']} id=\"_adr\" points=\"309,374 308,372 288,354 291,350 281,351 275,348 271,342 266,325 258,319 258,305 266,300 269,302 268,305 271,311 274,305 279,306 281,319 298,337 310,346 319,352 321,354 319,371 321,374\"/> <polygon className={classes['_aeg']} id=\"_aeg\" points=\"361,423 357,412 362,413 361,406 369,408 366,399 355,392 362,388 353,378 356,372 363,379 368,373 365,368 389,366 395,369 391,374 393,375 390,382 398,381 400,397 397,400 402,402 404,410 408,412 404,417 413,415 413,421 402,432 390,429 376,430 371,428 368,430\"/> <polygon className={classes['_alb']} id=\"_alb\" points=\"319,352 321,354 319,371 321,374 327,382 337,372 337,368 333,364 332,351 327,344 320,345\"/> <polygon className={classes['_ale']} id=\"_ale\" points=\"459,462 447,462,441,467,432,471 426,470 424,474,417,476,399,469 394,469 388,476,389,482,385,487,393,494 393,526 412,530,424,529,440,521,456,525,465,534 474,532 471,526,475,522,470,514,465,514,455,495,463,480,459,473\"/> <polygon className={classes['_alg']} id=\"_alg\" points=\"201,415 191,411,183,411,180,410,169,412,153,406,122,404,106,410 96,408 91,413,81,411,78,406 74,408 75,417,70,422,77,428,76,434 31,449 173,533 176,531 219,514 213,507 214,475 205,461 201,460 195,447 196,421\"/> <polygon className={classes['_als']} id=\"_als\" points=\"193,233 204,240 211,247 219,250 212,270 210,270 205,275 196,274 193,268 195,266 195,257 185,252 190,240\"/> <polygon className={classes['_ana']} id=\"_ana\" points=\"480,376 472,378,464,376,452,379 447,386 449,393,435,401,433,407,439,407 442,413 448,412,456,414,465,420,480,415 483,407 478,393 482,383\"/> <polygon className={classes['_adl']} id=\"_adl\" points=\"74,382 96,387 95,384 100,378 107,379 107,377 102,367 104,359 101,356 97,355 88,361 85,361 81,368 74,367 71,370\"/> <polygon className={classes['_ank']} id=\"_ank\" points=\"440,355 456,337,471,335 475,332 482,338,485,338,491,340,504,340,522,337 536,328 547,324 554,324 558,327 560,337 555,341,543,345,539,352,515,359,502,357 480,376 472,378,464,376,452,379 447,386 442,385 444,371\"/> <polygon className={classes['_apu']} id=\"_apu\" points=\"309,374 308,372 288,354 291,350 281,351 275,348 271,342 267,346 272,356 276,358 280,362 284,367 287,376 293,378 297,372 307,380 311,377\"/> <polygon className={classes['_ara']} id=\"_ara\" points=\"559,554 569,554,584,548,588,551,595,545,598,545,645,531,658,532,678,515 690,502 704,474 715,477 715,559 559,559\"/> <polygon className={classes['_arc']} id=\"_arc\" points=\"0,37 91,37 95,34 99,36 102,29 96,25 98,24 107,28 105,23 111,24 100,18 99,13 109,9 110,17 113,8 117,9 118,20 113,28 120,27 123,21 131,24 287,24 287,0 0,0\"/> <polygon className={classes['_arm']} id=\"_arm\" points=\"571,343 569,340 563,339 560,337 558,327 561,321 574,317 580,324 580,329 588,334 595,348\"/> <polygon className={classes['_asw']} id=\"_asw\" points=\"393,559 393,526 412,530,424,529,440,521,456,525,465,534 474,532 485,525,498,525 507,519 516,525,525,540,523,545,527,548 530,559\"/> <polygon className={classes['_aus']} id=\"_aus\" points=\"233,272 239,276 260,274 265,278 267,276 264,268 268,268 272,264 275,262 284,264 288,258 302,265 302,274 298,284 295,285 287,284 279,290 271,290 259,288 254,285 247,289 242,288 238,281 233,279\"/> <polygon className={classes['_auv']} id=\"_auv\" points=\"162,327 162,320 172,315 171,304 175,299 166,290 167,285 160,279 154,277 155,294 141,307 140,316 147,318 157,327\"/> <polygon className={classes['_aze']} id=\"_aze\" points=\"574,317 580,324 580,329 588,334 595,348 607,333 612,341 623,340 619,328 619,314 625,310 621,308 617,309 609,301 604,312 576,302 573,305 579,309 582,313\"/> <polygon className={classes['_bal']} id=\"_bal\" points=\"294,162 302,148 303,136 314,131 318,128 336,146 334,160 335,170 330,177 325,179 320,188 316,182 312,180\"/> <polygon className={classes['_bar']} id=\"_bar\" points=\"107,377 115,370 120,370 122,368 119,358 135,339 151,337 160,332 162,327 157,327 147,318 145,324 124,326 113,321 107,327 108,337 101,356 104,359 102,367\"/> <polygon className={classes['_bel']} id=\"_bel\" points=\"191,211 176,214 172,222 185,224 193,233 204,240 209,236 206,226 205,216 193,213\"/> <polygon className={classes['_ber']} id=\"_ber\" points=\"286,189 278,187 279,182 273,181 260,189 258,204 256,207 257,221 288,213 288,206 285,203 285,194\"/> <polygon className={classes['_bhm']} id=\"_bhm\" points=\"273,163 276,170 281,170 285,162 294,162 312,180 305,181 297,187 286,189 278,187 279,182 273,181 260,189 255,183 251,182 251,180 249,173 261,173 266,176 271,171 270,167\"/> <polygon className={classes['_bie']} id=\"_bie\" points=\"358,192 374,181 382,179 387,168 387,159 410,161 410,172 419,180 422,185 428,185 428,190 421,194 425,206 417,213 415,220 403,220 398,218 393,220 382,216 368,216 360,223 360,216 357,214 357,210 362,207 362,201\"/> <polygon className={classes['_bis']} id=\"_bis\" points=\"109,232 112,237 117,238 130,252 130,264 135,269 128,286 129,287 120,302 110,299 106,300 82,288 72,285 67,280 63,279 63,232\"/> <polygon className={classes['_bor']} id=\"_bor\" points=\"135,269 128,286 129,287 120,302 122,309 140,316 141,307 155,294 154,277 151,271\"/> <polygon className={classes['_bos']} id=\"_bos\" points=\"313,342 298,328 290,315 290,310 295,308 315,310 321,312 321,323 325,325 323,331\"/> <polygon className={classes['_bri']} id=\"_bri\" points=\"155,229 149,228 142,221 142,235 131,233 129,228 112,227 109,232 112,237 117,238 130,252 130,264 135,269 151,271 151,245 153,236\"/> <polygon className={classes['_brn']} id=\"_brn\" points=\"472,0 466,9 470,17 463,20 452,16 456,11 450,6 440,7 409,21 395,17 383,15 379,17 373,15 378,10 367,5 360,6 359,10 355,6 352,11 349,5 342,10 322,18 311,24 287,24 287,0\"/> <polygon className={classes['_bul']} id=\"_bul\" points=\"407,348 402,340 404,328 410,324 403,320 391,320 380,327 365,326 356,325 352,322 349,325 353,333 356,336 350,339 351,343 355,350 362,359 372,357 378,360 391,356 392,351 400,348\"/> <g className={classes['_cai']} id=\"_cai\"> <polygon points=\"498,458 493,460 482,462 479,462 474,464 464,461 459,462 459,473 463,480 455,495 465,514 470,514 475,522 471,526 474,532 485,525,498,525 507,519 493,491 480,475 485,475 493,466 501,463\"/> <polygon className=\"water\" points=\"482,462 479,462 480,475 483,475\"/> </g> <polygon className={classes['_cas']} id=\"_cas\" points=\"623,340 619,328 619,314 625,310 621,308 617,309 609,301 590,290 585,281 574,278 572,271 571,252 572,249 575,248 578,252 581,248 582,238 589,234 598,222 613,216 620,220 623,239 613,241 611,247 615,254 605,259 606,263 611,262 621,275 636,274 635,284 643,291 640,284 647,279 654,284 662,287 660,295 651,297 646,294 651,306 655,302 669,311 673,334 672,340 656,350 643,351 638,346 627,349\"/> <polygon className={classes['_cau']} id=\"_cau\" points=\"609,301 590,290 585,281 574,278 572,271 547,268 541,272 544,297 541,303 557,304 561,306 565,303 573,305 576,302 604,312\"/> <polygon className={classes['_crp']} id=\"_crp\" points=\"419,180 422,185 428,185 428,190 421,194 425,206 432,208 439,204 450,207 452,215 459,215 465,224 466,227 483,223 488,227 493,225 496,201 492,187 476,192 451,180 424,175\"/> <polygon className={classes['_cly']} id=\"_cly\" points=\"144,132 139,128 140,123 139,118 143,115 142,107 150,102 158,101 167,104 161,111 156,115 149,125 149,132\"/> <polygon className={classes['_cro']} id=\"_cro\" points=\"269,302 268,305 271,311 274,305 279,306 281,319 298,337 310,346 313,342 298,328 290,315 290,310 295,308 315,310 321,312 322,307 319,302 311,301 295,285 287,284 279,290 271,290\"/> <polygon className={classes['_cze']} id=\"_cze\" points=\"290,230 281,230 273,236 261,237 259,240 275,262 284,264 288,258 302,265 317,251 316,244 312,242 301,243 297,235\"/> <g className={classes['_den']} id=\"_den\"> <polygon points=\"249,173 248,172 240,171 239,162 243,147 246,143 254,142 260,139 261,145 258,152 261,159 254,161 249,166\"/> <polygon points=\"261,173 266,176 271,171 270,167 273,163 272,160 268,160 264,162 258,164\"/> <polygon className=\"water\" points=\"261,159 254,161 249,166 249,173 261,173 258,164 264,162\"/> </g> <polygon className={classes['_don']} id=\"_don\" points=\"473,273 495,260 498,259 502,253 509,250 509,246 506,244 506,238 490,241 477,250 462,249 459,266 461,272\"/> <polygon className={classes['_ebs']} id=\"_ebs\" points=\"462,305 470,296 480,294 477,288 468,292 459,284 473,273 495,260 498,259 499,261 486,270 491,276 487,288 482,289 489,296 501,297 522,308 533,311 539,318 536,328 522,337 504,340 491,340 485,338 482,338 475,332\"/> <polygon className={classes['_edi']} id=\"_edi\" points=\"161,111 168,111 173,113 174,116 173,122 162,134 155,134 161,136 164,138 166,145 160,148 151,139 149,132 149,125 156,115\"/> <polygon className={classes['_eme']} id=\"_eme\" points=\"413,421 419,417 424,418 431,425 440,422 442,413 448,412,456,414,465,420,480,415 483,407 491,409 499,400 502,403 496,410 498,414 497,420 503,449 498,458 493,460 482,462 479,462 474,464 464,461 459,462 447,462,441,467,432,471 426,470 402,446 402,432\"/> <polygon className={classes['_eng']} id=\"_eng\" points=\"176,214 172,222 159,224 157,226 160,230 155,229 149,228 142,221 142,235 131,233 129,228 112,227 109,232 63,232 63,204 109,204 111,206 120,204 127,208 131,204 141,207 152,207 161,211 172,210\"/> <polygon className={classes['_esa']} id=\"_esa\" points=\"394,469 369,461 356,459 349,459 342,461 348,474 353,520 358,539 365,553 371,559 393,559 393,494 385,487 389,482 388,476\"/> <polygon className={classes['_est']} id=\"_est\" points=\"382,118 369,117 359,118 351,123 352,131 358,133 358,140 368,137 379,139 385,133\"/> <polygon className={classes['_fin']} id=\"_fin\" points=\"384,101 352,113 348,113 336,106 333,89 345,76 351,64 357,62 354,55 348,52 347,45 343,38 330,29 333,24 341,30 354,29 355,18 362,17 369,23 371,28 376,37 375,52 394,83 394,88\"/> <polygon className={classes['_fra']} id=\"_fra\" points=\"256,207 242,213 233,214 228,219 228,226 223,237 223,242 227,248 238,251 242,249 242,242 257,221\"/> <polygon className={classes['_gda']} id=\"_gda\" points=\"330,177 325,179 320,188 322,192 322,199 331,200 342,199 349,193 351,186 349,179 342,175 338,175 334,178\"/> <polygon className={classes['_geo']} id=\"_geo\" points=\"522,308 533,311 539,318 536,328 547,324 554,324 558,327 561,321 574,317 582,313 579,309 573,305 565,303 561,306 557,304 541,303 526,303\"/> <polygon className={classes['_gib']} id=\"_gib\" points=\"71,370 68,366 58,366 52,372 48,373 49,379 52,385 64,384 74,382\"/> <polygon className={classes['_gob']} id=\"_gob\" points=\"336,146 344,140 347,141 352,147 356,148 359,145 358,140 358,133 352,131 351,123 359,118 369,117 382,118 384,112 393,112 385,106 384,101 352,113 348,113 336,106 333,89 345,76 351,64 357,62 354,55 348,52 341,50 334,65 336,72 312,95 309,109 316,113 319,121 318,128\"/> <polygon className={classes['_gol']} id=\"_gol\" points=\"120,370 122,368 119,358 135,339 151,337 160,332 162,327 162,320 172,315 179,319 179,337 192,350 217,350 217,354 212,358 210,357 208,360 210,370 156,370 154,366 147,370\"/> <polygon className={classes['_gor']} id=\"_gor\" points=\"459,139 456,131 456,122 467,105 485,92 513,87 536,83 555,89 559,101 555,125 535,125 531,132 509,143 506,152 482,138\"/> <polygon className={classes['_gre']} id=\"_gre\" points=\"361,423 357,412 362,413 361,406 369,408 366,399 355,392 362,388 353,378 356,372 363,379 368,373 365,368 389,366 392,360 391,356 378,360 372,357 362,359 354,360 344,367 337,368 337,372 327,382 328,387 338,401 353,401 356,403 341,403 337,407 345,420 346,415 352,422 353,418\"/> <g className={classes['_ham']} id=\"_ham\"> <polygon points=\"260,189 255,183 251,182 251,180 249,173 248,172 240,171 239,173 241,179 240,184 240,187 232,191 231,188 226,187 224,189 225,195 223,204 218,210 213,210 212,214 218,214 228,219 233,214 242,213 256,207 258,204\"/> <polygon className=\"water\" points=\"251,182 251,180 240,184 240,186\"/> </g> <polygon className={classes['_hel']} id=\"_hel\" points=\"239,162 240,171 239,173 241,179 240,184 240,187 232,191 231,188 226,187 224,189 212,188 209,190 209,172 219,162\"/> <polygon className={classes['_hol']} id=\"_hol\" points=\"224,189 212,188 209,190 203,195 191,211 193,213 205,216 206,226 212,214 213,210 218,210 223,204 225,195\"/> <polygon className={classes['_hun']} id=\"_hun\" points=\"319,302 311,301 295,285 298,284 302,274 315,274 328,270 337,264 349,265 354,270 344,280 340,294 334,296 325,294\"/> <polygon className={classes['_ice']} id=\"_ice\" points=\"91,37 95,34 99,36 102,29 96,25 98,24 107,28 105,23 111,24 100,18 99,13 109,9 110,17 113,8 117,9 118,20 113,28 120,27 123,21 131,24 136,30 145,29 151,35 152,44 150,49 136,54 120,51 110,53 103,46 102,41\"/> <polygon className={classes['_ion']} id=\"_ion\" points=\"321,374 327,382 328,387 338,401 353,401 356,403 341,403 337,407 345,420 346,415 352,422 353,418 361,423 368,430 376,434 394,434 402,432 402,446 290,446 290,404 298,392 298,389 297,385 293,378 297,372 307,380 311,377 309,374\"/> <polygon className={classes['_ire']} id=\"_ire\" points=\"78,166 80,161 85,161 94,152 87,145 93,143 91,138 94,135 101,139 106,138 112,131 119,131 128,137 129,146 126,149 120,150 119,162 110,174 100,172 84,176\"/> <polygon className={classes['_iri']} id=\"_iri\" points=\"129,146 126,149 120,150 119,162 110,174 100,172 84,176 78,166 63,166 63,204 109,204 129,195 137,197 142,194 136,194 129,188 123,187 122,181 132,180 135,174 131,173 140,167 146,168 149,159 146,148 137,146\"/> <polygon className={classes['_irk']} id=\"_irk\" points=\"619,462 610,464 605,458 584,453 583,447 549,439 544,433 542,426 564,404 563,393 558,384 563,374 568,369 585,369 596,375 608,407 609,430 605,434 608,438 607,445 615,453\"/> <polygon className={classes['_irn']} id=\"_irn\" points=\"715,331 673,334 672,340 656,350 643,351 638,346 627,349 623,340 612,341 607,333 595,348 571,343 575,360 581,362 585,369 596,375 608,407 609,430 615,438 632,439 648,450 654,459 666,455 673,456 696,475 704,474 715,477\"/> <polygon className={classes['_isr']} id=\"_isr\" points=\"497,420 503,449 498,458 501,463 504,467 513,456 516,441 515,428 505,419\"/> <g className={classes['_ist']} id=\"_ist\"> <polygon points=\"389,366 395,369 391,374 393,375 390,382 398,381 409,385 429,386 433,383 442,385 444,371 440,355 420,357 418,356 409,352 407,348 400,348 392,351 391,356 392,360\"/> <polygon className=\"water\" points=\"393,375 400,371 406,371 426,361 418,360 421,357 418,356 414,360 400,365\"/> </g> <polygon className={classes['_izm']} id=\"_izm\" points=\"398,381 400,397 397,400 402,402 404,410 408,412 404,417 413,415 413,421 419,417 424,418 431,425 440,422 442,413 439,407 433,407 435,401 449,393 447,386 442,385 433,383 429,386 409,385\"/> <polygon className={classes['_jor']} id=\"_jor\" points=\"504,467 508,473 511,482 519,481 528,471 528,465 539,460 531,451 539,449 540,443 549,439 544,433 542,426 530,438 516,441 513,456\"/> <polygon className={classes['_kaz']} id=\"_kaz\" points=\"715,101 689,106 671,117 659,140 669,147 676,147 676,152 649,159 627,173 594,168 591,173 584,172 571,190 574,196 570,201 559,195 557,208 562,225 573,227 589,234 598,222 613,216 620,220 623,239 613,241 611,247 615,254 605,259 606,263 611,262 621,275 636,274 635,284 643,291 640,284 647,279 654,284 662,287 660,295 651,297 646,294 651,306 655,302 669,311 673,334 715,331\"/> <polygon className={classes['_kha']} id=\"_kha\" points=\"506,238 490,241 477,250 462,249 459,246 459,227 465,224 466,227 483,223 488,227 493,225 499,229 507,230 509,234\"/> <polygon className={classes['_kie']} id=\"_kie\" points=\"425,206 432,208 439,204 450,207 452,215 459,215 465,224 459,227 459,246 462,249 459,266 461,272 456,274 448,274 444,269 435,245 409,239 403,220 415,220 417,213\"/> <polygon className={classes['_kra']} id=\"_kra\" points=\"316,244 319,240 320,234 337,223 357,214 360,216 360,223 364,229 364,236 353,245 356,255 352,258 343,253 327,254 317,251\"/> <polygon className={classes['_lap']} id=\"_lap\" points=\"379,17 373,15 378,10 367,5 360,6 359,10 355,6 352,11 349,5 342,10 322,18 311,24 308,34 312,37 320,42 319,33 330,34 330,29 333,24 341,30 354,29 355,18 362,17 369,23 371,28\"/> <polygon className={classes['_lat']} id=\"_lat\" points=\"334,160 336,146 344,140 347,141 352,147 356,148 359,145 358,140 358,140 368,137 379,139 385,133 388,137 391,146 387,159 387,168 373,160 355,156\"/> <polygon className={classes['_lbn']} id=\"_lbn\" points=\"426,470 424,474,417,476,399,469 394,469 369,461 356,459 349,459 342,461 336,465 332,474 319,481 296,472 284,474 275,472 272,469 272,464 290,446 402,446\"/> <polygon className={classes['_lib']} id=\"_lib\" points=\"342,461 336,465 332,474 319,481 296,472 284,474 275,472 272,469 272,464 251,456 229,453 223,469 214,475 213,507 219,514 237,526 253,528 271,539 294,530 350,559 371,559 365,553 358,539 353,520 348,474\"/> <g className={classes['_lig']} id=\"_lig\"> <polygon className=\"water\" points=\"179,319 183,320 190,325 193,324 210,318 218,313 224,313 230,317 236,334 242,341 249,350 192,350 179,337\"/> <polygon points=\"217,350 214,347 213,338 220,330 221,341 219,348\"/> </g> <polygon className={classes['_lit']} id=\"_lit\" points=\"330,177 335,170 334,160 355,156 373,160 387,168 382,179 374,181 358,192 351,186 349,179 342,175 338,175 334,178\"/> <polygon className={classes['_lpl']} id=\"_lpl\" points=\"146,168 149,159 146,148 137,146 137,142 143,137 144,132 149,132 151,139 160,148 160,158 155,168 155,182 146,176\"/> <polygon className={classes['_lon']} id=\"_lon\" points=\"169,184 171,185 173,183 180,187 178,197 167,206 173,207 172,210 161,211 152,207 150,194 157,187\"/> <polygon className={classes['_lyo']} id=\"_lyo\" points=\"175,299 166,290 167,285 160,279 168,270 170,262 185,252 195,257 195,266 193,268 196,274 205,275 194,286 181,284\"/> <polygon className={classes['_mac']} id=\"_mac\" points=\"362,359 354,360 344,367 337,368 333,364 332,351 342,344 351,343 355,350\"/> <polygon className={classes['_mad']} id=\"_mad\" points=\"113,321 107,327 108,337 101,356 97,355 88,361 85,361 82,350 64,340 56,332 65,314 72,313 74,310 107,316\"/> <polygon className={classes['_mal']} id=\"_mal\" points=\"272,464 251,456 229,453 229,438 222,428 231,420 231,418 243,406 270,421 272,411 276,403 282,403 282,406 286,407 290,404 290,446\"/> <polygon className={classes['_mar']} id=\"_mar\" points=\"172,315 179,319 183,320 190,325 189,307 194,302 203,301 207,299 206,289 204,284 197,289 194,286 181,284 175,299 171,304\"/> <polygon className={classes['_mat']} id=\"_mat\" points=\"0,166 63,166 63,279 59,282 53,280 48,286 47,299 39,315 0,315\"/> <polygon className={classes['_mil']} id=\"_mil\" points=\"247,289 246,309 242,316 233,313 225,296 227,289 239,291 242,288\"/> <polygon className={classes['_mol']} id=\"_mol\" points=\"405,299 402,283 397,279 389,266 394,262 403,263 409,265 414,274 419,281 414,287 410,298\"/> <polygon className={classes['_mon']} id=\"_mon\" points=\"190,325 193,324 210,318 203,301 194,302 189,307\"/> <polygon className={classes['_mor']} id=\"_mor\" points=\"74,408 59,404 55,399 53,390 47,391 31,412 13,414 0,422 0,458 19,459 19,450 31,449 76,434 76,426 70,422 75,417\"/> <polygon className={classes['_mos']} id=\"_mos\" points=\"387,159 410,161 410,172 419,180 424,175 451,180 476,192 492,187 513,173 507,166 506,152 482,138 459,139 440,136 422,129 388,137 391,146\"/> <polygon className={classes['_mun']} id=\"_mun\" points=\"233,272 239,276 260,274 265,278 267,276 264,268 253,253 242,249 238,251 227,248 219,250 212,270 220,271 221,268\"/> <polygon className={classes['_mur']} id=\"_mur\" points=\"453,34 445,33 434,51 446,59 438,65 425,60 421,60 420,66 431,75 430,78 412,74 406,61 407,55 397,50 394,44 422,47 432,39 433,32 426,27 409,21 395,17 383,15 379,17 371,28 376,37 375,52 394,83 394,88 414,94 450,96 467,105 485,92 513,87 479,48\"/> <polygon className={classes['_nap']} id=\"_nap\" points=\"266,361 270,370 278,377 284,381 287,391 282,403 282,406 286,407 290,404 298,392 298,389 297,385 293,378 287,376 284,367 280,362 276,358 272,356\"/> <polygon className={classes['_nat']} id=\"_nat\" points=\"0,166 78,166 80,161 85,161 94,152 87,145 93,143 91,138 94,135 101,139 106,138 112,131 119,131 128,137 129,146 137,146 137,142 143,137 144,132 139,128 140,123 139,118 143,115 142,107 150,102 150,49 136,54 120,51 110,53 103,46 102,41 92,37 0,37\"/> <polygon className={classes['_nav']} id=\"_nav\" points=\"120,302 110,299 106,300 82,288 72,285 67,280 63,279 59,282 53,280 48,286 47,299 56,298 56,302 69,303 74,310 107,316 113,321 124,326 145,324 147,318 140,316 122,309\"/> <polygon className={classes['_nwy']} id=\"_nwy\" points=\"308,34 292,48 271,75 252,78 233,91 229,103 232,109 227,113 229,122 239,131 260,123 264,116 267,124 272,124 279,100 283,78 303,56 312,37\"/> <polygon className={classes['_nth']} id=\"_nth\" points=\"243,147 239,162 219,162 209,172 209,190 203,195 191,211 176,214 172,210 173,207 167,206 178,197 180,187 173,183 171,185 169,184 172,181 172,164 166,157 166,145 164,138 161,136 155,134 162,134 173,122 174,116 173,113 227,113 229,122 229,147\"/> <polygon className={classes['_nwg']} id=\"_nwg\" points=\"312,24 308,34 292,48 271,75 252,78 233,91 229,103 232,109 227,113 173,113 168,111 161,111 167,104 158,101 150,102 150,49 152,44 151,35 145,29 136,30 131,24\"/> <polygon className={classes['_ode']} id=\"_ode\" points=\"403,263 409,265 414,274 419,281 414,287 410,298 405,299 406,303 417,302 424,283 435,280 438,282 441,276 448,274 444,269 435,245 409,239 401,248\"/> <polygon className={classes['_par']} id=\"_par\" points=\"151,271 151,245 153,236 190,240 185,252 170,262 168,270 160,279 154,277\"/> <polygon className={classes['_per']} id=\"_per\" points=\"690,502 665,486 661,473 650,484 641,484 632,476 636,468 632,463 629,464 631,468 627,471 619,462 615,453 607,445 608,438 605,434 609,430 615,438 632,439 648,450 654,459 666,455 673,456 696,475 704,474\"/> <polygon className={classes['_pic']} id=\"_pic\" points=\"172,222 159,224 157,226 160,230 155,229 153,236 190,240 193,233 185,224\"/> <polygon className={classes['_pie']} id=\"_pie\" points=\"210,318 218,313 224,313 230,317 233,313 225,296 218,289 213,291 206,289 207,299 203,301\"/> <polygon className={classes['_pod']} id=\"_pod\" points=\"360,223 364,229 364,236 353,245 356,255 352,258 349,265 354,270 376,273 383,266 389,266 394,262 403,263 401,248 409,239 403,220 398,218 393,220 382,216 368,216\"/> <polygon className={classes['_por']} id=\"_por\" points=\"47,299 39,315 27,332 31,341 29,348 30,351 25,359 36,366 42,365 43,359 50,355 48,345 53,340 52,331 56,332 65,314 72,313 74,310 69,303 56,302 56,298 47,299\"/> <polygon className={classes['_pru']} id=\"_pru\" points=\"320,188 316,182 312,180 305,181 297,187 286,189 285,194 285,203 288,206 304,209 306,203 322,199 322,192\"/> <polygon className={classes['_red']} id=\"_red\" points=\"530,559 527,548 523,545 525,540 516,525 507,519 507,519 493,491 480,475 485,475 494,487 501,491 505,490 508,473 511,482 510,487 519,488 532,504 531,507 535,512 539,513 555,546 553,552 559,554 559,559\"/> <polygon className={classes['_rom']} id=\"_rom\" points=\"242,341 249,350 254,356 266,361 272,356 267,346 257,334\"/> <g className={classes['_ros']} id=\"_ros\"> <polygon points=\"498,259 499,261 486,270 491,276 487,288 482,289 489,296 501,297 522,308 526,303 541,303 544,297 541,272 528,267 523,251 521,248 509,246 509,250 502,253\"/> <polygon className=\"water\" points=\"498,259 499,261 523,251 521,248\"/> </g> <polygon className={classes['_ruh']} id=\"_ruh\" points=\"212,214 218,214 228,219 228,226 223,237 223,242 227,248 219,250 211,247 204,240 209,236 206,226\"/> <polygon className={classes['_rum']} id=\"_rum\" points=\"410,324 403,320 391,320 380,327 365,326 356,325 352,322 351,316 347,316 339,307 337,299 334,296 340,294 344,280 354,270 376,273 383,266 389,266 397,279 402,283 405,299 406,303 417,302 417,307 411,311\"/> <polygon className={classes['_sat']} id=\"_sat\" points=\"0,315 39,315 27,332 31,341 29,348 30,351 25,359 36,366 42,365 48,373 49,379 42,386 47,391 31,412 13,414 0,422\"/> <polygon className={classes['_sau']} id=\"_sau\" points=\"511,482 510,487 519,488 532,504 531,507 535,512 539,513 555,546 553,552 559,554 569,554,584,548,588,551,595,545,598,545,645,531,658,532,678,515 690,502 665,486 661,473 650,484 641,484 632,476 636,468 632,463 629,464 631,468 627,471 619,462 610,464 605,458 584,453 583,447 549,439 540,443 539,449 531,451 539,460 528,465 528,471 519,481\"/> <polygon className={classes['_sax']} id=\"_sax\" points=\"264,268 268,268 272,264 275,262 259,240 261,237 273,236 281,230 290,230 288,213 257,221 242,242 242,249 253,253\"/> <polygon className={classes['_ser']} id=\"_ser\" points=\"321,312 321,323 325,325 323,331 313,342 310,346 319,352 320,345 327,344 332,351 342,344 351,343 350,339 356,336 353,333 349,325 352,322 351,316 347,316 339,307 337,299 334,296 325,294 319,302 322,307\"/> <polygon className={classes['_sev']} id=\"_sev\" points=\"462,305 470,296 480,294 477,288 468,292 459,284 473,273 461,272 456,274 448,274 441,276 438,282 436,284 440,287 450,284 452,288 447,290 444,296 453,298 453,305 457,306\"/> <polygon className={classes['_sib']} id=\"_sib\" points=\"715,101 689,106 671,117 659,140 669,147 676,147 676,152 649,159 627,173 594,168 596,159 589,151 595,119 593,99 605,87 611,26 616,0 715,0\"/> <polygon className={classes['_sil']} id=\"_sil\" points=\"316,244 312,242 301,243 297,235 290,230 288,213 288,206 304,209 319,230 320,234 319,240\"/> <polygon className={classes['_sin']} id=\"_sin\" points=\"485,475 494,487 501,491 505,490 508,473 504,467 501,463 493,466\"/> <polygon className={classes['_ska']} id=\"_ska\" points=\"243,147 246,143 254,142 260,139 261,145 258,152 261,159 264,162 268,160 272,160 275,155 269,143 271,137 267,124 264,116 260,123 239,131 229,122 229,147\"/> <polygon className={classes['_slk']} id=\"_slk\" points=\"352,258 343,253 327,254 317,251 302,265 302,274 315,274 328,270 337,264 349,265\"/> <polygon className={classes['_stp']} id=\"_stp\" points=\"382,118 384,112 393,112 385,106 384,101 394,88 414,94 450,96 467,105 456,122 456,131 459,139 440,136 422,129 388,137 385,133\"/> <polygon className={classes['_sog']} id=\"_sog\" points=\"49,379 52,385 64,384 74,382 96,387 96,408 91,413,81,411,78,406 74,408 59,404 55,399 53,390 47,391 42,386\"/> <polygon className={classes['_svl']} id=\"_svl\" points=\"42,365 43,359 50,355 48,345 53,340 52,331 56,332 64,340 82,350 85,361 81,368 74,367 71,370 71,370 68,366 58,366 52,372 48,373\"/> <polygon className={classes['_swe']} id=\"_swe\" points=\"348,52 341,50 334,65 336,72 312,95 309,109 316,113 319,121 318,128 314,131 303,136 302,148 294,162 285,162 281,170 276,170 273,163 272,160 275,155 269,143 271,137 267,124 272,124 279,100 283,78 303,56 312,37 320,42 319,33 330,34 330,29 343,38 347,45\"/> <polygon className={classes['_swi']} id=\"_swi\" points=\"210,270 194,286 197,289 204,284 206,289 213,291 218,289 225,296 227,289 239,291 242,288 238,281 233,279 233,272 221,268 220,271 212,270\"/> <polygon className={classes['_syr']} id=\"_syr\" points=\"502,403 496,410 498,414 497,420 505,419 515,428 516,441 530,438 542,426 564,404 563,393 558,384 563,374 558,373 552,380 546,378 530,390 520,389 516,393 506,396\"/> <polygon className={classes['_tun']} id=\"_tun\" points=\"229,453 229,438 222,428 231,420 231,418 227,417 220,420 221,412 216,410 210,411 206,415 201,415 196,421 195,447 201,460 205,461 214,475 223,469\"/> <polygon className={classes['_tus']} id=\"_tus\" points=\"230,317 236,334 242,341 257,334 255,328 242,316 233,313\"/> <polygon className={classes['_tyr']} id=\"_tyr\" points=\"249,350 254,356 266,361 270,370 278,377 284,381 287,391 282,403 276,403 264,404 251,401 247,402 231,418 227,417 220,420 221,412 216,410 216,383 220,364 217,354 217,350\"/> <polygon className={classes['_ura']} id=\"_ura\" points=\"472,0 466,9 470,17 463,20 452,16 456,11 450,6 440,7 445,9 448,20 455,24 453,34 479,48 513,87 536,83 555,89 585,93 593,99 605,87 611,26 616,0 715,0\"/> <polygon className={classes['_ven']} id=\"_ven\" points=\"271,342 266,325 258,319 258,305 266,300 269,302 271,290 259,288 254,285 247,289 246,309 242,316 255,328 257,334 267,346\"/> <g className={classes['_vol']} id=\"_vol\"> <polygon points=\"572,271 571,252 572,249 575,248 578,252 581,248 582,238 589,234 573,227 562,225 557,208 559,195 570,201 574,196 571,190 584,172 591,173 594,168 596,159 589,151 595,119 593,99 585,93 555,89 559,101 555,125 535,125 531,132 509,143 506,152 507,166 513,173 492,187 496,201 493,225 499,229 507,230 509,234 506,238 506,244 509,246 509,250 509,246 521,248 523,251 528,267 541,272 547,268\"/> <polygon className=\"water\" points=\"521,248 549,233 575,248 572,249 549,236 523,251\"/> </g> <polygon className={classes['_wal']} id=\"_wal\" points=\"109,204 129,195 137,197 142,194 136,194 129,188 123,187 122,181 132,180 135,174 131,173 140,167 146,168 146,176 155,182 157,187 150,194 152,207 141,207 131,204 127,208 120,204 111,206\"/> <polygon className={classes['_war']} id=\"_war\" points=\"304,209 306,203 322,199 322,192 322,199 331,200 342,199 349,193 351,186 358,192 362,201 362,207 357,210 357,214 337,223 320,234 319,230\"/> <polygon className={classes['_wbs']} id=\"_wbs\" points=\"475,332 471,335 456,337 440,355 420,357 418,356 409,352 407,348 402,340 404,328 410,324 411,311 417,307 417,302 424,283 435,280 438,282 436,284 440,287 450,284 452,288 447,290 444,296 453,298 453,305 457,306 462,305\"/> <polygon className={classes['_wme']} id=\"_wme\" points=\"216,410 210,411 206,415 201,415 191,411,183,411,180,410,169,412,153,406,122,404,106,410 96,408 96,387 95,384 100,378 107,379 107,377 115,370 147,370 150,371 156,370 210,370 208,380 211,384 216,383\"/> <polygon className={classes['_wsa']} id=\"_wsa\" points=\"0,458 19,459 19,450 31,449 173,533 176,531 219,514 237,526 253,528 271,539 294,530 350,559 0,559\"/> <polygon className={classes['_whi']} id=\"_whi\" points=\"440,7 445,9 448,20 455,24 453,34 445,33 434,51 446,59 438,65 425,60 421,60 420,66 431,75 430,78 412,74 406,61 407,55 397,50 394,44 422,47 432,39 433,32 426,27 409,21\"/> <polygon className={classes['_yor']} id=\"_yor\" points=\"169,184 172,181 172,164 166,157 166,145 160,148 160,158 155,168 155,182 157,187\"/> <text className=\"labeltext\" x=\"635\" y=\"362\">nc</text> <text className=\"labeltext\" x=\"653\" y=\"452\">sc</text> </g> <g id=\"SupplyCenterLayer\"> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_LON\" transform=\"translate(-6,-4)\" width=\"7\" x=\"162.8\" y=\"204.6\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_LIV\" transform=\"translate(-5.4,-6.0)\" width=\"7\" x=\"150.7\" y=\"170.7\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_EDI\" transform=\"translate(-6.7,-6.7)\" width=\"7\" x=\"159.9\" y=\"141.7\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_GIB\" width=\"7\" x=\"56.7\" y=\"378.0\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_CAI\" transform=\"translate(-6,-4)\" width=\"7\" x=\"471.1\" y=\"469.8\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_ALE\" width=\"7\" x=\"441.4\" y=\"472.7\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_ASW\" width=\"7\" x=\"482.5\" y=\"542.7\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_PAR\" width=\"7\" x=\"169.1\" y=\"243.5\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_BOR\" width=\"7\" x=\"136.6\" y=\"279.6\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_MAR\" width=\"7\" x=\"193.0\" y=\"287.0\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_LYO\" width=\"7\" x=\"188.2\" y=\"273.2\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_HAM\" width=\"7\" x=\"243.4\" y=\"192.7\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_BER\" transform=\"translate(-3.3,-6.0)\" width=\"7\" x=\"277.6\" y=\"208\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_FRA\" transform=\"translate(-2.7,-4.7)\" width=\"7\" x=\"232.2\" y=\"242.2\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_MUN\" transform=\"translate(-4.7,-4.0)\" width=\"7\" x=\"255.2\" y=\"267.6\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_MIL\" transform=\"translate(-4.7,-6.0)\" width=\"7\" x=\"238.1\" y=\"308.8\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_VEN\" transform=\"translate(-8.7,-5.4)\" width=\"7\" x=\"261.7\" y=\"295.3\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_ROM\" width=\"7\" x=\"251.1\" y=\"344.2\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_NAP\" width=\"7\" x=\"273.5\" y=\"364.8\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_WAR\" transform=\"translate(2.0,-10.0)\" width=\"7\" x=\"335.3\" y=\"214.5\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_GDA\" width=\"7\" x=\"324.7\" y=\"188.0\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_KRA\" transform=\"translate(-1.3,-6.7)\" width=\"7\" x=\"324.1\" y=\"245.8\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_MOS\" width=\"7\" x=\"475.0\" y=\"160.0\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_GOR\" width=\"7\" x=\"491.7\" y=\"103.5\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_STP\" width=\"7\" x=\"397.6\" y=\"107.7\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_MUR\" width=\"7\" x=\"393.3\" y=\"24.2\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_ROS\" width=\"7\" x=\"522.0\" y=\"273.0\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_BAR\" transform=\"translate(0,-4)\" width=\"7\" x=\"139.4\" y=\"331.9\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_MAD\" width=\"7\" x=\"87.1\" y=\"327.7\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_SVE\" transform=\"translate(-4.7,-4.7)\" width=\"7\" x=\"49.6\" y=\"363.8\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_ADA\" transform=\"translate(-4.0,-5.4)\" width=\"7\" x=\"488.8\" y=\"400.5\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_IZM\" width=\"7\" x=\"410.3\" y=\"406.9\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_IST\" width=\"7\" x=\"405.4\" y=\"356.7\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_ANK\" transform=\"translate(-2.0,-4.0)\" width=\"7\" x=\"461.2\" y=\"365.9\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_SEV\" transform=\"translate(-4,-4)\" width=\"7\" x=\"458.4\" y=\"300.8\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_KHA\" width=\"7\" x=\"472.6\" y=\"230.8\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_KIE\" width=\"7\" x=\"417.4\" y=\"227.2\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_ODE\" transform=\"translate(-4.0,-7.4)\" width=\"7\" x=\"430.1\" y=\"276\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_IRE\" width=\"7\" x=\"111.1\" y=\"161.5\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_MOR\" width=\"7\" x=\"34.0\" y=\"416.8\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_NWY\" width=\"7\" x=\"262.3\" y=\"109.0\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_ISR\" transform=\"translate(-4.0,-6.7)\" width=\"7\" x=\"506.5\" y=\"454.3\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_LIB\" width=\"7\" x=\"238.4\" y=\"465.6\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_BEL\" transform=\"translate(-17.4,0.7)\" width=\"7\" x=\"204\" y=\"215\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_MON\" transform=\"translate(-10, 6)\" width=\"7\" x=\"205\" y=\"298\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_SWI\" transform=\"translate(-4)\" width=\"7\" x=\"225\" y=\"271\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_AUS\" width=\"7\" x=\"287.0\" y=\"266.0\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_DEN\" transform=\"translate(-6.7,-6.7)\" width=\"7\" x=\"265.8\" y=\"168.5\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_HOL\" width=\"7\" x=\"212.0\" y=\"193.0\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_CRO\" width=\"7\" x=\"279.4\" y=\"298.2\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_SER\" width=\"7\" x=\"331.1\" y=\"309.3\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_TUN\" width=\"7\" x=\"215.8\" y=\"429.5\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_BIE\" width=\"7\" x=\"405.0\" y=\"189.0\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_CZE\" transform=\"translate(-11.4,-2.7)\" width=\"7\" x=\"293\" y=\"238\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_LIT\" transform=\"translate(-8.0,-4.7)\" width=\"7\" x=\"375.9\" y=\"172.2\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_SWE\" transform=\"translate(-2,-4)\" width=\"7\" x=\"309.4\" y=\"124.3\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_POR\" width=\"7\" x=\"34.7\" y=\"332.6\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_BUL\" width=\"7\" x=\"360.8\" y=\"343.2\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_GEO\" transform=\"translate(-4.0,-4.7)\" width=\"7\" x=\"567\" y=\"310.8\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_GRE\" width=\"7\" x=\"360.8\" y=\"403.4\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_IRN\" width=\"7\" x=\"663.5\" y=\"370.1\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_RUM\" transform=\"translate(1.3,-6.0)\" width=\"7\" x=\"391.2\" y=\"311.4\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_HUN\" width=\"7\" x=\"332.0\" y=\"273.0\"/> <use height=\"7\" href=\"#SupplyCenter\" id=\"sc_SAU\" width=\"7\" x=\"607.7\" y=\"492.5\"/> </g> <g id=\"OrderLayer\"> <g id=\"Layer2\">{renderedOrders2}</g> <g id=\"Layer1\">{renderedOrders}</g> </g> <g id=\"UnitLayer\">{renderedUnits}</g> <g id=\"DislodgedUnitLayer\">{renderedDislodgedUnits}</g> <g id=\"HighestOrderLayer\">{renderedHighestOrders}</g> <g className={classes['BriefLabelLayer']} id=\"BriefLabelLayer\" transform=\"translate(-7,10)\"> <text x=\"515\" y=\"376\">ada</text> <text x=\"299\" y=\"348\">adr</text> <text x=\"384\" y=\"408\">aeg</text> <text x=\"328\" y=\"365\">alb</text> <text x=\"429\" y=\"478\">ale</text> <text x=\"139\" y=\"475\">alg</text> <text x=\"205\" y=\"256\">als</text> <text x=\"463\" y=\"399\">ana</text> <text x=\"90\" y=\"369\">adl</text> <text x=\"481\" y=\"354\">ank</text> <text x=\"299\" y=\"361\">apu</text> <text x=\"625\" y=\"541\">ara</text> <text x=\"50\" y=\"17\">arc</text> <text x=\"578\" y=\"332\">arm</text> <text x=\"428\" y=\"542\">asw</text> <text x=\"272\" y=\"277\">aus</text> <text x=\"156\" y=\"308\">auv</text> <text x=\"595\" y=\"321\">aze</text> <text x=\"317\" y=\"153\">bal</text> <text x=\"119\" y=\"340\">bar</text> <text x=\"199\" y=\"220\">bel</text> <text x=\"267\" y=\"201\">ber</text> <text x=\"288\" y=\"174\">bhm</text> <text x=\"398\" y=\"196\">bie</text> <text x=\"97\" y=\"261\">bis</text> <text x=\"137\" y=\"291\">bor</text> <text x=\"310\" y=\"323\">bos</text> <text x=\"140\" y=\"250\">bri</text> <text x=\"310\" y=\"8\">brn</text> <text x=\"380\" y=\"338\">bul</text> <text x=\"475\" y=\"493\">cai</text> <text x=\"620\" y=\"290\">cas</text> <text x=\"561\" y=\"286\">cau</text> <text x=\"463\" y=\"203\">crp</text> <text x=\"149\" y=\"106\">cly</text> <text x=\"292\" y=\"296\">cro</text> <text x=\"300\" y=\"247\">cze</text> <text x=\"250\" y=\"156\">den</text> <text x=\"472\" y=\"255\">don</text> <text x=\"493\" y=\"316\">ebs</text> <text x=\"161\" y=\"120\">edi</text> <text x=\"444\" y=\"439\">eme</text> <text x=\"108\" y=\"215\">eng</text> <text x=\"371\" y=\"505\">esa</text> <text x=\"367\" y=\"124\">est</text> <text x=\"365\" y=\"80\">fin</text> <text x=\"238\" y=\"226\">fra</text> <text x=\"336\" y=\"186\">gda</text> <text x=\"548\" y=\"311\">geo</text> <text x=\"66\" y=\"374\">gib</text> <text x=\"330\" y=\"117\">gob</text> <text x=\"167\" y=\"351\">gol</text> <text x=\"510\" y=\"110\">gor</text> <text x=\"343\" y=\"385\">gre</text> <text x=\"235\" y=\"199\">ham</text> <text x=\"224\" y=\"173\">hel</text> <text x=\"205\" y=\"200\">hol</text> <text x=\"325\" y=\"280\">hun</text> <text x=\"122\" y=\"38\">ice</text> <text x=\"319\" y=\"416\">ion</text> <text x=\"103\" y=\"150\">ire</text> <text x=\"96\" y=\"187\">iri</text> <text x=\"581\" y=\"416\">irk</text> <text x=\"668\" y=\"402\">irn</text> <text x=\"510\" y=\"434\">isr</text> <text x=\"426\" y=\"367\">ist</text> <text x=\"423\" y=\"397\">izm</text> <text x=\"520\" y=\"463\">jor</text> <text x=\"675\" y=\"220\">kaz</text> <text x=\"471\" y=\"235\">kha</text> <text x=\"439\" y=\"228\">kie</text> <text x=\"343\" y=\"239\">kra</text> <text x=\"344\" y=\"16\">lap</text> <text x=\"371\" y=\"147\">lat</text> <text x=\"317\" y=\"463\">lbn</text> <text x=\"276\" y=\"500\">lib</text> <text x=\"206\" y=\"333\">lig</text> <text x=\"360\" y=\"173\">lit</text> <text x=\"153\" y=\"148\">lpl</text> <text x=\"166\" y=\"190\">lon</text> <text x=\"176\" y=\"274\">lyo</text> <text x=\"346\" y=\"351\">mac</text> <text x=\"90\" y=\"335\">mad</text> <text x=\"248\" y=\"425\">mal</text> <text x=\"180\" y=\"302\">mar</text> <text x=\"20\" y=\"244\">mat</text> <text x=\"238\" y=\"293\">mil</text> <text x=\"407\" y=\"272\">mol</text> <text x=\"198\" y=\"309\">mon</text> <text x=\"30\" y=\"429\">mor</text> <text x=\"468\" y=\"167\">mos</text> <text x=\"236\" y=\"258\">mun</text> <text x=\"460\" y=\"70\">mur</text> <text x=\"290\" y=\"384\">nap</text> <text x=\"60\" y=\"90\">nat</text> <text x=\"81\" y=\"296\">nav</text> <text x=\"260\" y=\"81\">nwy</text> <text x=\"196\" y=\"150\">nth</text> <text x=\"205\" y=\"58\">nwg</text> <text x=\"425\" y=\"256\">ode</text> <text x=\"161\" y=\"254\">par</text> <text x=\"645\" y=\"463\">per</text> <text x=\"183\" y=\"226\">pic</text> <text x=\"219\" y=\"300\">pie</text> <text x=\"380\" y=\"242\">pod</text> <text x=\"38\" y=\"338\">por</text> <text x=\"297\" y=\"192\">pru</text> <text x=\"518\" y=\"509\">red</text> <text x=\"258\" y=\"345\">rom</text> <text x=\"515\" y=\"280\">ros</text> <text x=\"217\" y=\"227\">ruh</text> <text x=\"371\" y=\"295\">rum</text> <text x=\"15\" y=\"371\">sat</text> <text x=\"575\" y=\"486\">sau</text> <text x=\"270\" y=\"219\">sax</text> <text x=\"335\" y=\"328\">ser</text> <text x=\"457\" y=\"287\">sev</text> <text x=\"650\" y=\"65\">sib</text> <text x=\"305\" y=\"224\">sil</text> <text x=\"500\" y=\"477\">sin</text> <text x=\"248\" y=\"131\">ska</text> <text x=\"322\" y=\"260\">slk</text> <text x=\"419\" y=\"110\">stp</text> <text x=\"76\" y=\"395\">sog</text> <text x=\"62\" y=\"349\">svl</text> <text x=\"295\" y=\"105\">swe</text> <text x=\"218\" y=\"278\">swi</text> <text x=\"530\" y=\"406\">syr</text> <text x=\"208\" y=\"429\">tun</text> <text x=\"243\" y=\"325\">tus</text> <text x=\"242\" y=\"387\">tyr</text> <text x=\"535\" y=\"40\">ura</text> <text x=\"255\" y=\"293\">ven</text> <text x=\"542\" y=\"178\">vol</text> <text x=\"140\" y=\"174\">wal</text> <text x=\"324\" y=\"213\">war</text> <text x=\"435\" y=\"320\">wbs</text> <text x=\"170\" y=\"389\">wme</text> <text x=\"90\" y=\"515\">wsa</text> <text x=\"438\" y=\"19\">whi</text> <text x=\"164\" y=\"171\">yor</text> </g> <g id=\"FullLabelLayer\" visibility=\"hidden\"/> <rect className=\"currentnoterect\" height=\"40\" width=\"716\" x=\"0\" y=\"560\"/> <text className={classes['CurrentNote']} id=\"CurrentNote\" x=\"10\" y=\"576\">{nb_centers_per_power ? nb_centers_per_power : ''}</text> <text className={classes['CurrentNote2']} id=\"CurrentNote2\" x=\"10\" y=\"592\">{note ? note : ''}</text> <text className={classes['CurrentPhase']} id=\"CurrentPhase\" x=\"645\" y=\"578\">{current_phase}</text> <g className={classes['MouseLayer']} id=\"MouseLayer\"> <polygon id=\"ada\" onClick={this.onClick} onMouseOver={this.onHover} points=\"483,407 491,409 499,400 502,403 506,396,516,393,520,389,530,390,546,378,552,380,558,373 563,374 568,369 585,369 581,362 575,360 571,343 569,340 563,339 560,337 555,341,543,345,539,352,515,359,502,357 480,376 482,383 478,393\"/> <polygon id=\"adr\" onClick={this.onClick} onMouseOver={this.onHover} points=\"309,374 308,372 288,354 291,350 281,351 275,348 271,342 266,325 258,319 258,305 266,300 269,302 268,305 271,311 274,305 279,306 281,319 298,337 310,346 319,352 321,354 319,371 321,374\"/> <polygon id=\"aeg\" onClick={this.onClick} onMouseOver={this.onHover} points=\"361,423 357,412 362,413 361,406 369,408 366,399 355,392 362,388 353,378 356,372 363,379 368,373 365,368 389,366 395,369 391,374 393,375 390,382 398,381 400,397 397,400 402,402 404,410 408,412 404,417 413,415 413,421 402,432 390,429 376,430 371,428 368,430\"/> <polygon id=\"alb\" onClick={this.onClick} onMouseOver={this.onHover} points=\"319,352 321,354 319,371 321,374 327,382 337,372 337,368 333,364 332,351 327,344 320,345\"/> <polygon id=\"ale\" onClick={this.onClick} onMouseOver={this.onHover} points=\"459,462 447,462,441,467,432,471 426,470 424,474,417,476,399,469 394,469 388,476,389,482,385,487,393,494 393,526 412,530,424,529,440,521,456,525,465,534 474,532 471,526,475,522,470,514,465,514,455,495,463,480,459,473\"/> <polygon id=\"alg\" onClick={this.onClick} onMouseOver={this.onHover} points=\"201,415 191,411,183,411,180,410,169,412,153,406,122,404,106,410 96,408 91,413,81,411,78,406 74,408 75,417,70,422,77,428,76,434 31,449 173,533 176,531 219,514 213,507 214,475 205,461 201,460 195,447 196,421\"/> <polygon id=\"als\" onClick={this.onClick} onMouseOver={this.onHover} points=\"193,233 204,240 211,247 219,250 212,270 210,270 205,275 196,274 193,268 195,266 195,257 185,252 190,240\"/> <polygon id=\"ana\" onClick={this.onClick} onMouseOver={this.onHover} points=\"480,376 472,378,464,376,452,379 447,386 449,393,435,401,433,407,439,407 442,413 448,412,456,414,465,420,480,415 483,407 478,393 482,383\"/> <polygon id=\"adl\" onClick={this.onClick} onMouseOver={this.onHover} points=\"74,382 96,387 95,384 100,378 107,379 107,377 102,367 104,359 101,356 97,355 88,361 85,361 81,368 74,367 71,370\"/> <polygon id=\"ank\" onClick={this.onClick} onMouseOver={this.onHover} points=\"440,355 456,337,471,335 475,332 482,338,485,338,491,340,504,340,522,337 536,328 547,324 554,324 558,327 560,337 555,341,543,345,539,352,515,359,502,357 480,376 472,378,464,376,452,379 447,386 442,385 444,371\"/> <polygon id=\"apu\" onClick={this.onClick} onMouseOver={this.onHover} points=\"309,374 308,372 288,354 291,350 281,351 275,348 271,342 267,346 272,356 276,358 280,362 284,367 287,376 293,378 297,372 307,380 311,377\"/> <polygon id=\"ara\" onClick={this.onClick} onMouseOver={this.onHover} points=\"559,554 569,554,584,548,588,551,595,545,598,545,645,531,658,532,678,515 690,502 704,474 715,477 715,559 559,559\"/> <polygon id=\"arc\" onClick={this.onClick} onMouseOver={this.onHover} points=\"0,37 91,37 95,34 99,36 102,29 96,25 98,24 107,28 105,23 111,24 100,18 99,13 109,9 110,17 113,8 117,9 118,20 113,28 120,27 123,21 131,24 287,24 287,0 0,0\"/> <polygon id=\"arm\" onClick={this.onClick} onMouseOver={this.onHover} points=\"571,343 569,340 563,339 560,337 558,327 561,321 574,317 580,324 580,329 588,334 595,348\"/> <polygon id=\"asw\" onClick={this.onClick} onMouseOver={this.onHover} points=\"393,559 393,526 412,530,424,529,440,521,456,525,465,534 474,532 485,525,498,525 507,519 516,525,525,540,523,545,527,548 530,559\"/> <polygon id=\"aus\" onClick={this.onClick} onMouseOver={this.onHover} points=\"233,272 239,276 260,274 265,278 267,276 264,268 268,268 272,264 275,262 284,264 288,258 302,265 302,274 298,284 295,285 287,284 279,290 271,290 259,288 254,285 247,289 242,288 238,281 233,279\"/> <polygon id=\"auv\" onClick={this.onClick} onMouseOver={this.onHover} points=\"162,327 162,320 172,315 171,304 175,299 166,290 167,285 160,279 154,277 155,294 141,307 140,316 147,318 157,327\"/> <polygon id=\"aze\" onClick={this.onClick} onMouseOver={this.onHover} points=\"574,317 580,324 580,329 588,334 595,348 607,333 612,341 623,340 619,328 619,314 625,310 621,308 617,309 609,301 604,312 576,302 573,305 579,309 582,313\"/> <polygon id=\"bal\" onClick={this.onClick} onMouseOver={this.onHover} points=\"294,162 302,148 303,136 314,131 318,128 336,146 334,160 335,170 330,177 325,179 320,188 316,182 312,180\"/> <polygon id=\"bar\" onClick={this.onClick} onMouseOver={this.onHover} points=\"107,377 115,370 120,370 122,368 119,358 135,339 151,337 160,332 162,327 157,327 147,318 145,324 124,326 113,321 107,327 108,337 101,356 104,359 102,367\"/> <polygon id=\"bel\" onClick={this.onClick} onMouseOver={this.onHover} points=\"191,211 176,214 172,222 185,224 193,233 204,240 209,236 206,226 205,216 193,213\"/> <polygon id=\"ber\" onClick={this.onClick} onMouseOver={this.onHover} points=\"286,189 278,187 279,182 273,181 260,189 258,204 256,207 257,221 288,213 288,206 285,203 285,194\"/> <polygon id=\"bhm\" onClick={this.onClick} onMouseOver={this.onHover} points=\"273,163 276,170 281,170 285,162 294,162 312,180 305,181 297,187 286,189 278,187 279,182 273,181 260,189 255,183 251,182 251,180 249,173 261,173 266,176 271,171 270,167\"/> <polygon id=\"bie\" onClick={this.onClick} onMouseOver={this.onHover} points=\"358,192 374,181 382,179 387,168 387,159 410,161 410,172 419,180 422,185 428,185 428,190 421,194 425,206 417,213 415,220 403,220 398,218 393,220 382,216 368,216 360,223 360,216 357,214 357,210 362,207 362,201\"/> <polygon id=\"bis\" onClick={this.onClick} onMouseOver={this.onHover} points=\"109,232 112,237 117,238 130,252 130,264 135,269 128,286 129,287 120,302 110,299 106,300 82,288 72,285 67,280 63,279 63,232\"/> <polygon id=\"bor\" onClick={this.onClick} onMouseOver={this.onHover} points=\"135,269 128,286 129,287 120,302 122,309 140,316 141,307 155,294 154,277 151,271\"/> <polygon id=\"bos\" onClick={this.onClick} onMouseOver={this.onHover} points=\"313,342 298,328 290,315 290,310 295,308 315,310 321,312 321,323 325,325 323,331\"/> <polygon id=\"bri\" onClick={this.onClick} onMouseOver={this.onHover} points=\"155,229 149,228 142,221 142,235 131,233 129,228 112,227 109,232 112,237 117,238 130,252 130,264 135,269 151,271 151,245 153,236\"/> <polygon id=\"brn\" onClick={this.onClick} onMouseOver={this.onHover} points=\"472,0 466,9 470,17 463,20 452,16 456,11 450,6 440,7 409,21 395,17 383,15 379,17 373,15 378,10 367,5 360,6 359,10 355,6 352,11 349,5 342,10 322,18 311,24 287,24 287,0\"/> <polygon id=\"bul\" onClick={this.onClick} onMouseOver={this.onHover} points=\"407,348 402,340 404,328 410,324 403,320 391,320 380,327 365,326 356,325 352,322 349,325 353,333 356,336 350,339 351,343 355,350 362,359 372,357 378,360 391,356 392,351 400,348\"/> <g id=\"cai\" onClick={this.onClick} onMouseOver={this.onHover}> <polygon points=\"498,458 493,460 482,462 479,462 474,464 464,461 459,462 459,473 463,480 455,495 465,514 470,514 475,522 471,526 474,532 485,525,498,525 507,519 493,491 480,475 485,475 493,466 501,463\"/> <polygon points=\"482,462 479,462 480,475 483,475\"/> </g> <polygon id=\"cas\" onClick={this.onClick} onMouseOver={this.onHover} points=\"623,340 619,328 619,314 625,310 621,308 617,309 609,301 590,290 585,281 574,278 572,271 571,252 572,249 575,248 578,252 581,248 582,238 589,234 598,222 613,216 620,220 623,239 613,241 611,247 615,254 605,259 606,263 611,262 621,275 636,274 635,284 643,291 640,284 647,279 654,284 662,287 660,295 651,297 646,294 651,306 655,302 669,311 673,334 672,340 656,350 643,351 638,346 627,349\"/> <polygon id=\"cau\" onClick={this.onClick} onMouseOver={this.onHover} points=\"609,301 590,290 585,281 574,278 572,271 547,268 541,272 544,297 541,303 557,304 561,306 565,303 573,305 576,302 604,312\"/> <polygon id=\"crp\" onClick={this.onClick} onMouseOver={this.onHover} points=\"419,180 422,185 428,185 428,190 421,194 425,206 432,208 439,204 450,207 452,215 459,215 465,224 466,227 483,223 488,227 493,225 496,201 492,187 476,192 451,180 424,175\"/> <polygon id=\"cly\" onClick={this.onClick} onMouseOver={this.onHover} points=\"144,132 139,128 140,123 139,118 143,115 142,107 150,102 158,101 167,104 161,111 156,115 149,125 149,132\"/> <polygon id=\"cro\" onClick={this.onClick} onMouseOver={this.onHover} points=\"269,302 268,305 271,311 274,305 279,306 281,319 298,337 310,346 313,342 298,328 290,315 290,310 295,308 315,310 321,312 322,307 319,302 311,301 295,285 287,284 279,290 271,290\"/> <polygon id=\"cze\" onClick={this.onClick} onMouseOver={this.onHover} points=\"290,230 281,230 273,236 261,237 259,240 275,262 284,264 288,258 302,265 317,251 316,244 312,242 301,243 297,235\"/> <g id=\"den\" onClick={this.onClick} onMouseOver={this.onHover}> <polygon points=\"249,173 248,172 240,171 239,162 243,147 246,143 254,142 260,139 261,145 258,152 261,159 254,161 249,166\"/> <polygon points=\"261,173 266,176 271,171 270,167 273,163 272,160 268,160 264,162 258,164\"/> <polygon points=\"261,159 254,161 249,166 249,173 261,173 258,164 264,162\"/> </g> <polygon id=\"don\" onClick={this.onClick} onMouseOver={this.onHover} points=\"473,273 495,260 498,259 502,253 509,250 509,246 506,244 506,238 490,241 477,250 462,249 459,266 461,272\"/> <polygon id=\"ebs\" onClick={this.onClick} onMouseOver={this.onHover} points=\"462,305 470,296 480,294 477,288 468,292 459,284 473,273 495,260 498,259 499,261 486,270 491,276 487,288 482,289 489,296 501,297 522,308 533,311 539,318 536,328 522,337 504,340 491,340 485,338 482,338 475,332\"/> <polygon id=\"edi\" onClick={this.onClick} onMouseOver={this.onHover} points=\"161,111 168,111 173,113 174,116 173,122 162,134 155,134 161,136 164,138 166,145 160,148 151,139 149,132 149,125 156,115\"/> <polygon id=\"eme\" onClick={this.onClick} onMouseOver={this.onHover} points=\"413,421 419,417 424,418 431,425 440,422 442,413 448,412,456,414,465,420,480,415 483,407 491,409 499,400 502,403 496,410 498,414 497,420 503,449 498,458 493,460 482,462 479,462 474,464 464,461 459,462 447,462,441,467,432,471 426,470 402,446 402,432\"/> <polygon id=\"eng\" onClick={this.onClick} onMouseOver={this.onHover} points=\"176,214 172,222 159,224 157,226 160,230 155,229 149,228 142,221 142,235 131,233 129,228 112,227 109,232 63,232 63,204 109,204 111,206 120,204 127,208 131,204 141,207 152,207 161,211 172,210\"/> <polygon id=\"esa\" onClick={this.onClick} onMouseOver={this.onHover} points=\"394,469 369,461 356,459 349,459 342,461 348,474 353,520 358,539 365,553 371,559 393,559 393,494 385,487 389,482 388,476\"/> <polygon id=\"est\" onClick={this.onClick} onMouseOver={this.onHover} points=\"382,118 369,117 359,118 351,123 352,131 358,133 358,140 368,137 379,139 385,133\"/> <polygon id=\"fin\" onClick={this.onClick} onMouseOver={this.onHover} points=\"384,101 352,113 348,113 336,106 333,89 345,76 351,64 357,62 354,55 348,52 347,45 343,38 330,29 333,24 341,30 354,29 355,18 362,17 369,23 371,28 376,37 375,52 394,83 394,88\"/> <polygon id=\"fra\" onClick={this.onClick} onMouseOver={this.onHover} points=\"256,207 242,213 233,214 228,219 228,226 223,237 223,242 227,248 238,251 242,249 242,242 257,221\"/> <polygon id=\"gda\" onClick={this.onClick} onMouseOver={this.onHover} points=\"330,177 325,179 320,188 322,192 322,199 331,200 342,199 349,193 351,186 349,179 342,175 338,175 334,178\"/> <polygon id=\"geo\" onClick={this.onClick} onMouseOver={this.onHover} points=\"522,308 533,311 539,318 536,328 547,324 554,324 558,327 561,321 574,317 582,313 579,309 573,305 565,303 561,306 557,304 541,303 526,303\"/> <polygon id=\"gib\" onClick={this.onClick} onMouseOver={this.onHover} points=\"71,370 68,366 58,366 52,372 48,373 49,379 52,385 64,384 74,382\"/> <polygon id=\"gob\" onClick={this.onClick} onMouseOver={this.onHover} points=\"336,146 344,140 347,141 352,147 356,148 359,145 358,140 358,133 352,131 351,123 359,118 369,117 382,118 384,112 393,112 385,106 384,101 352,113 348,113 336,106 333,89 345,76 351,64 357,62 354,55 348,52 341,50 334,65 336,72 312,95 309,109 316,113 319,121 318,128\"/> <polygon id=\"gol\" onClick={this.onClick} onMouseOver={this.onHover} points=\"120,370 122,368 119,358 135,339 151,337 160,332 162,327 162,320 172,315 179,319 179,337 192,350 217,350 217,354 212,358 210,357 208,360 210,370 156,370 154,366 147,370\"/> <polygon id=\"gor\" onClick={this.onClick} onMouseOver={this.onHover} points=\"459,139 456,131 456,122 467,105 485,92 513,87 536,83 555,89 559,101 555,125 535,125 531,132 509,143 506,152 482,138\"/> <polygon id=\"gre\" onClick={this.onClick} onMouseOver={this.onHover} points=\"361,423 357,412 362,413 361,406 369,408 366,399 355,392 362,388 353,378 356,372 363,379 368,373 365,368 389,366 392,360 391,356 378,360 372,357 362,359 354,360 344,367 337,368 337,372 327,382 328,387 338,401 353,401 356,403 341,403 337,407 345,420 346,415 352,422 353,418\"/> <g id=\"ham\" onClick={this.onClick} onMouseOver={this.onHover}> <polygon points=\"260,189 255,183 251,182 251,180 249,173 248,172 240,171 239,173 241,179 240,184 240,187 232,191 231,188 226,187 224,189 225,195 223,204 218,210 213,210 212,214 218,214 228,219 233,214 242,213 256,207 258,204\"/> <polygon points=\"251,182 251,180 240,184 240,186\"/> </g> <polygon id=\"hel\" onClick={this.onClick} onMouseOver={this.onHover} points=\"239,162 240,171 239,173 241,179 240,184 240,187 232,191 231,188 226,187 224,189 212,188 209,190 209,172 219,162\"/> <polygon id=\"hol\" onClick={this.onClick} onMouseOver={this.onHover} points=\"224,189 212,188 209,190 203,195 191,211 193,213 205,216 206,226 212,214 213,210 218,210 223,204 225,195\"/> <polygon id=\"hun\" onClick={this.onClick} onMouseOver={this.onHover} points=\"319,302 311,301 295,285 298,284 302,274 315,274 328,270 337,264 349,265 354,270 344,280 340,294 334,296 325,294\"/> <polygon id=\"ice\" onClick={this.onClick} onMouseOver={this.onHover} points=\"91,37 95,34 99,36 102,29 96,25 98,24 107,28 105,23 111,24 100,18 99,13 109,9 110,17 113,8 117,9 118,20 113,28 120,27 123,21 131,24 136,30 145,29 151,35 152,44 150,49 136,54 120,51 110,53 103,46 102,41\"/> <polygon id=\"ion\" onClick={this.onClick} onMouseOver={this.onHover} points=\"321,374 327,382 328,387 338,401 353,401 356,403 341,403 337,407 345,420 346,415 352,422 353,418 361,423 368,430 376,434 394,434 402,432 402,446 290,446 290,404 298,392 298,389 297,385 293,378 297,372 307,380 311,377 309,374\"/> <polygon id=\"ire\" onClick={this.onClick} onMouseOver={this.onHover} points=\"78,166 80,161 85,161 94,152 87,145 93,143 91,138 94,135 101,139 106,138 112,131 119,131 128,137 129,146 126,149 120,150 119,162 110,174 100,172 84,176\"/> <polygon id=\"iri\" onClick={this.onClick} onMouseOver={this.onHover} points=\"129,146 126,149 120,150 119,162 110,174 100,172 84,176 78,166 63,166 63,204 109,204 129,195 137,197 142,194 136,194 129,188 123,187 122,181 132,180 135,174 131,173 140,167 146,168 149,159 146,148 137,146\"/> <polygon id=\"irk\" onClick={this.onClick} onMouseOver={this.onHover} points=\"619,462 610,464 605,458 584,453 583,447 549,439 544,433 542,426 564,404 563,393 558,384 563,374 568,369 585,369 596,375 608,407 609,430 605,434 608,438 607,445 615,453\"/> <polygon id=\"irn-nc\" onClick={this.onClick} onMouseOver={this.onHover} points=\"715,331 673,334 672,340 656,350 643,351 638,346 627,349 623,340 612,341 607,333 595,348 571,343 575,360 581,362 585,369 596,375 608,407 715,400\"/> <polygon id=\"irn-sc\" onClick={this.onClick} onMouseOver={this.onHover} points=\"608,407 609,430 615,438 632,439 648,450 654,459 666,455 673,456 696,475 704,474 715,477 715,400\"/> <polygon id=\"isr\" onClick={this.onClick} onMouseOver={this.onHover} points=\"497,420 503,449 498,458 501,463 504,467 513,456 516,441 515,428 505,419\"/> <g id=\"ist\" onClick={this.onClick} onMouseOver={this.onHover}> <polygon points=\"389,366 395,369 391,374 393,375 390,382 398,381 409,385 429,386 433,383 442,385 444,371 440,355 420,357 418,356 409,352 407,348 400,348 392,351 391,356 392,360\"/> <polygon points=\"393,375 400,371 406,371 426,361 418,360 421,357 418,356 414,360 400,365\"/> </g> <polygon id=\"izm\" onClick={this.onClick} onMouseOver={this.onHover} points=\"398,381 400,397 397,400 402,402 404,410 408,412 404,417 413,415 413,421 419,417 424,418 431,425 440,422 442,413 439,407 433,407 435,401 449,393 447,386 442,385 433,383 429,386 409,385\"/> <polygon id=\"jor\" onClick={this.onClick} onMouseOver={this.onHover} points=\"504,467 508,473 511,482 519,481 528,471 528,465 539,460 531,451 539,449 540,443 549,439 544,433 542,426 530,438 516,441 513,456\"/> <polygon id=\"kaz\" onClick={this.onClick} onMouseOver={this.onHover} points=\"715,101 689,106 671,117 659,140 669,147 676,147 676,152 649,159 627,173 594,168 591,173 584,172 571,190 574,196 570,201 559,195 557,208 562,225 573,227 589,234 598,222 613,216 620,220 623,239 613,241 611,247 615,254 605,259 606,263 611,262 621,275 636,274 635,284 643,291 640,284 647,279 654,284 662,287 660,295 651,297 646,294 651,306 655,302 669,311 673,334 715,331\"/> <polygon id=\"kha\" onClick={this.onClick} onMouseOver={this.onHover} points=\"506,238 490,241 477,250 462,249 459,246 459,227 465,224 466,227 483,223 488,227 493,225 499,229 507,230 509,234\"/> <polygon id=\"kie\" onClick={this.onClick} onMouseOver={this.onHover} points=\"425,206 432,208 439,204 450,207 452,215 459,215 465,224 459,227 459,246 462,249 459,266 461,272 456,274 448,274 444,269 435,245 409,239 403,220 415,220 417,213\"/> <polygon id=\"kra\" onClick={this.onClick} onMouseOver={this.onHover} points=\"316,244 319,240 320,234 337,223 357,214 360,216 360,223 364,229 364,236 353,245 356,255 352,258 343,253 327,254 317,251\"/> <polygon id=\"lap\" onClick={this.onClick} onMouseOver={this.onHover} points=\"379,17 373,15 378,10 367,5 360,6 359,10 355,6 352,11 349,5 342,10 322,18 311,24 308,34 312,37 320,42 319,33 330,34 330,29 333,24 341,30 354,29 355,18 362,17 369,23 371,28\"/> <polygon id=\"lat\" onClick={this.onClick} onMouseOver={this.onHover} points=\"334,160 336,146 344,140 347,141 352,147 356,148 359,145 358,140 358,140 368,137 379,139 385,133 388,137 391,146 387,159 387,168 373,160 355,156\"/> <polygon id=\"lbn\" onClick={this.onClick} onMouseOver={this.onHover} points=\"426,470 424,474,417,476,399,469 394,469 369,461 356,459 349,459 342,461 336,465 332,474 319,481 296,472 284,474 275,472 272,469 272,464 290,446 402,446\"/> <polygon id=\"lib\" onClick={this.onClick} onMouseOver={this.onHover} points=\"342,461 336,465 332,474 319,481 296,472 284,474 275,472 272,469 272,464 251,456 229,453 223,469 214,475 213,507 219,514 237,526 253,528 271,539 294,530 350,559 371,559 365,553 358,539 353,520 348,474\"/> <g id=\"lig\" onClick={this.onClick} onMouseOver={this.onHover}> <polygon points=\"179,319 183,320 190,325 193,324 210,318 218,313 224,313 230,317 236,334 242,341 249,350 192,350 179,337\"/> <polygon points=\"217,350 214,347 213,338 220,330 221,341 219,348\"/> </g> <polygon id=\"lit\" onClick={this.onClick} onMouseOver={this.onHover} points=\"330,177 335,170 334,160 355,156 373,160 387,168 382,179 374,181 358,192 351,186 349,179 342,175 338,175 334,178\"/> <polygon id=\"lpl\" onClick={this.onClick} onMouseOver={this.onHover} points=\"146,168 149,159 146,148 137,146 137,142 143,137 144,132 149,132 151,139 160,148 160,158 155,168 155,182 146,176\"/> <polygon id=\"lon\" onClick={this.onClick} onMouseOver={this.onHover} points=\"169,184 171,185 173,183 180,187 178,197 167,206 173,207 172,210 161,211 152,207 150,194 157,187\"/> <polygon id=\"lyo\" onClick={this.onClick} onMouseOver={this.onHover} points=\"175,299 166,290 167,285 160,279 168,270 170,262 185,252 195,257 195,266 193,268 196,274 205,275 194,286 181,284\"/> <polygon id=\"mac\" onClick={this.onClick} onMouseOver={this.onHover} points=\"362,359 354,360 344,367 337,368 333,364 332,351 342,344 351,343 355,350\"/> <polygon id=\"mad\" onClick={this.onClick} onMouseOver={this.onHover} points=\"113,321 107,327 108,337 101,356 97,355 88,361 85,361 82,350 64,340 56,332 65,314 72,313 74,310 107,316\"/> <polygon id=\"mal\" onClick={this.onClick} onMouseOver={this.onHover} points=\"272,464 251,456 229,453 229,438 222,428 231,420 231,418 243,406 270,421 272,411 276,403 282,403 282,406 286,407 290,404 290,446\"/> <polygon id=\"mar\" onClick={this.onClick} onMouseOver={this.onHover} points=\"172,315 179,319 183,320 190,325 189,307 194,302 203,301 207,299 206,289 204,284 197,289 194,286 181,284 175,299 171,304\"/> <polygon id=\"mat\" onClick={this.onClick} onMouseOver={this.onHover} points=\"0,166 63,166 63,279 59,282 53,280 48,286 47,299 39,315 0,315\"/> <polygon id=\"mil\" onClick={this.onClick} onMouseOver={this.onHover} points=\"247,289 246,309 242,316 233,313 225,296 227,289 239,291 242,288\"/> <polygon id=\"mol\" onClick={this.onClick} onMouseOver={this.onHover} points=\"405,299 402,283 397,279 389,266 394,262 403,263 409,265 414,274 419,281 414,287 410,298\"/> <polygon id=\"mon\" onClick={this.onClick} onMouseOver={this.onHover} points=\"190,325 193,324 210,318 203,301 194,302 189,307\"/> <polygon id=\"mor\" onClick={this.onClick} onMouseOver={this.onHover} points=\"74,408 59,404 55,399 53,390 47,391 31,412 13,414 0,422 0,458 19,459 19,450 31,449 76,434 76,426 70,422 75,417\"/> <polygon id=\"mos\" onClick={this.onClick} onMouseOver={this.onHover} points=\"387,159 410,161 410,172 419,180 424,175 451,180 476,192 492,187 513,173 507,166 506,152 482,138 459,139 440,136 422,129 388,137 391,146\"/> <polygon id=\"mun\" onClick={this.onClick} onMouseOver={this.onHover} points=\"233,272 239,276 260,274 265,278 267,276 264,268 253,253 242,249 238,251 227,248 219,250 212,270 220,271 221,268\"/> <polygon id=\"mur\" onClick={this.onClick} onMouseOver={this.onHover} points=\"453,34 445,33 434,51 446,59 438,65 425,60 421,60 420,66 431,75 430,78 412,74 406,61 407,55 397,50 394,44 422,47 432,39 433,32 426,27 409,21 395,17 383,15 379,17 371,28 376,37 375,52 394,83 394,88 414,94 450,96 467,105 485,92 513,87 479,48\"/> <polygon id=\"nap\" onClick={this.onClick} onMouseOver={this.onHover} points=\"266,361 270,370 278,377 284,381 287,391 282,403 282,406 286,407 290,404 298,392 298,389 297,385 293,378 287,376 284,367 280,362 276,358 272,356\"/> <polygon id=\"nat\" onClick={this.onClick} onMouseOver={this.onHover} points=\"0,166 78,166 80,161 85,161 94,152 87,145 93,143 91,138 94,135 101,139 106,138 112,131 119,131 128,137 129,146 137,146 137,142 143,137 144,132 139,128 140,123 139,118 143,115 142,107 150,102 150,49 136,54 120,51 110,53 103,46 102,41 92,37 0,37\"/> <polygon id=\"nav\" onClick={this.onClick} onMouseOver={this.onHover} points=\"120,302 110,299 106,300 82,288 72,285 67,280 63,279 59,282 53,280 48,286 47,299 56,298 56,302 69,303 74,310 107,316 113,321 124,326 145,324 147,318 140,316 122,309\"/> <polygon id=\"nwy\" onClick={this.onClick} onMouseOver={this.onHover} points=\"308,34 292,48 271,75 252,78 233,91 229,103 232,109 227,113 229,122 239,131 260,123 264,116 267,124 272,124 279,100 283,78 303,56 312,37\"/> <polygon id=\"nth\" onClick={this.onClick} onMouseOver={this.onHover} points=\"243,147 239,162 219,162 209,172 209,190 203,195 191,211 176,214 172,210 173,207 167,206 178,197 180,187 173,183 171,185 169,184 172,181 172,164 166,157 166,145 164,138 161,136 155,134 162,134 173,122 174,116 173,113 227,113 229,122 229,147\"/> <polygon id=\"nwg\" onClick={this.onClick} onMouseOver={this.onHover} points=\"312,24 308,34 292,48 271,75 252,78 233,91 229,103 232,109 227,113 173,113 168,111 161,111 167,104 158,101 150,102 150,49 152,44 151,35 145,29 136,30 131,24\"/> <polygon id=\"ode\" onClick={this.onClick} onMouseOver={this.onHover} points=\"403,263 409,265 414,274 419,281 414,287 410,298 405,299 406,303 417,302 424,283 435,280 438,282 441,276 448,274 444,269 435,245 409,239 401,248\"/> <polygon id=\"par\" onClick={this.onClick} onMouseOver={this.onHover} points=\"151,271 151,245 153,236 190,240 185,252 170,262 168,270 160,279 154,277\"/> <polygon id=\"per\" onClick={this.onClick} onMouseOver={this.onHover} points=\"690,502 665,486 661,473 650,484 641,484 632,476 636,468 632,463 629,464 631,468 627,471 619,462 615,453 607,445 608,438 605,434 609,430 615,438 632,439 648,450 654,459 666,455 673,456 696,475 704,474\"/> <polygon id=\"pic\" onClick={this.onClick} onMouseOver={this.onHover} points=\"172,222 159,224 157,226 160,230 155,229 153,236 190,240 193,233 185,224\"/> <polygon id=\"pie\" onClick={this.onClick} onMouseOver={this.onHover} points=\"210,318 218,313 224,313 230,317 233,313 225,296 218,289 213,291 206,289 207,299 203,301\"/> <polygon id=\"pod\" onClick={this.onClick} onMouseOver={this.onHover} points=\"360,223 364,229 364,236 353,245 356,255 352,258 349,265 354,270 376,273 383,266 389,266 394,262 403,263 401,248 409,239 403,220 398,218 393,220 382,216 368,216\"/> <polygon id=\"por\" onClick={this.onClick} onMouseOver={this.onHover} points=\"47,299 39,315 27,332 31,341 29,348 30,351 25,359 36,366 42,365 43,359 50,355 48,345 53,340 52,331 56,332 65,314 72,313 74,310 69,303 56,302 56,298 47,299\"/> <polygon id=\"pru\" onClick={this.onClick} onMouseOver={this.onHover} points=\"320,188 316,182 312,180 305,181 297,187 286,189 285,194 285,203 288,206 304,209 306,203 322,199 322,192\"/> <polygon id=\"red\" onClick={this.onClick} onMouseOver={this.onHover} points=\"530,559 527,548 523,545 525,540 516,525 507,519 507,519 493,491 480,475 485,475 494,487 501,491 505,490 508,473 511,482 510,487 519,488 532,504 531,507 535,512 539,513 555,546 553,552 559,554 559,559\"/> <polygon id=\"rom\" onClick={this.onClick} onMouseOver={this.onHover} points=\"242,341 249,350 254,356 266,361 272,356 267,346 257,334\"/> <g id=\"ros\" onClick={this.onClick} onMouseOver={this.onHover}> <polygon points=\"498,259 499,261 486,270 491,276 487,288 482,289 489,296 501,297 522,308 526,303 541,303 544,297 541,272 528,267 523,251 521,248 509,246 509,250 502,253\"/> <polygon points=\"498,259 499,261 523,251 521,248\"/> </g> <polygon id=\"ruh\" onClick={this.onClick} onMouseOver={this.onHover} points=\"212,214 218,214 228,219 228,226 223,237 223,242 227,248 219,250 211,247 204,240 209,236 206,226\"/> <polygon id=\"rum\" onClick={this.onClick} onMouseOver={this.onHover} points=\"410,324 403,320 391,320 380,327 365,326 356,325 352,322 351,316 347,316 339,307 337,299 334,296 340,294 344,280 354,270 376,273 383,266 389,266 397,279 402,283 405,299 406,303 417,302 417,307 411,311\"/> <polygon id=\"sat\" onClick={this.onClick} onMouseOver={this.onHover} points=\"0,315 39,315 27,332 31,341 29,348 30,351 25,359 36,366 42,365 48,373 49,379 42,386 47,391 31,412 13,414 0,422\"/> <polygon id=\"sau\" onClick={this.onClick} onMouseOver={this.onHover} points=\"511,482 510,487 519,488 532,504 531,507 535,512 539,513 555,546 553,552 559,554 569,554,584,548,588,551,595,545,598,545,645,531,658,532,678,515 690,502 665,486 661,473 650,484 641,484 632,476 636,468 632,463 629,464 631,468 627,471 619,462 610,464 605,458 584,453 583,447 549,439 540,443 539,449 531,451 539,460 528,465 528,471 519,481\"/> <polygon id=\"sax\" onClick={this.onClick} onMouseOver={this.onHover} points=\"264,268 268,268 272,264 275,262 259,240 261,237 273,236 281,230 290,230 288,213 257,221 242,242 242,249 253,253\"/> <polygon id=\"ser\" onClick={this.onClick} onMouseOver={this.onHover} points=\"321,312 321,323 325,325 323,331 313,342 310,346 319,352 320,345 327,344 332,351 342,344 351,343 350,339 356,336 353,333 349,325 352,322 351,316 347,316 339,307 337,299 334,296 325,294 319,302 322,307\"/> <polygon id=\"sev\" onClick={this.onClick} onMouseOver={this.onHover} points=\"462,305 470,296 480,294 477,288 468,292 459,284 473,273 461,272 456,274 448,274 441,276 438,282 436,284 440,287 450,284 452,288 447,290 444,296 453,298 453,305 457,306\"/> <polygon id=\"sib\" onClick={this.onClick} onMouseOver={this.onHover} points=\"715,101 689,106 671,117 659,140 669,147 676,147 676,152 649,159 627,173 594,168 596,159 589,151 595,119 593,99 605,87 611,26 616,0 715,0\"/> <polygon id=\"sil\" onClick={this.onClick} onMouseOver={this.onHover} points=\"316,244 312,242 301,243 297,235 290,230 288,213 288,206 304,209 319,230 320,234 319,240\"/> <polygon id=\"sin\" onClick={this.onClick} onMouseOver={this.onHover} points=\"485,475 494,487 501,491 505,490 508,473 504,467 501,463 493,466\"/> <polygon id=\"ska\" onClick={this.onClick} onMouseOver={this.onHover} points=\"243,147 246,143 254,142 260,139 261,145 258,152 261,159 264,162 268,160 272,160 275,155 269,143 271,137 267,124 264,116 260,123 239,131 229,122 229,147\"/> <polygon id=\"slk\" onClick={this.onClick} onMouseOver={this.onHover} points=\"352,258 343,253 327,254 317,251 302,265 302,274 315,274 328,270 337,264 349,265\"/> <polygon id=\"stp\" onClick={this.onClick} onMouseOver={this.onHover} points=\"382,118 384,112 393,112 385,106 384,101 394,88 414,94 450,96 467,105 456,122 456,131 459,139 440,136 422,129 388,137 385,133\"/> <polygon id=\"sog\" onClick={this.onClick} onMouseOver={this.onHover} points=\"49,379 52,385 64,384 74,382 96,387 96,408 91,413,81,411,78,406 74,408 59,404 55,399 53,390 47,391 42,386\"/> <polygon id=\"svl\" onClick={this.onClick} onMouseOver={this.onHover} points=\"42,365 43,359 50,355 48,345 53,340 52,331 56,332 64,340 82,350 85,361 81,368 74,367 71,370 71,370 68,366 58,366 52,372 48,373\"/> <polygon id=\"swe\" onClick={this.onClick} onMouseOver={this.onHover} points=\"348,52 341,50 334,65 336,72 312,95 309,109 316,113 319,121 318,128 314,131 303,136 302,148 294,162 285,162 281,170 276,170 273,163 272,160 275,155 269,143 271,137 267,124 272,124 279,100 283,78 303,56 312,37 320,42 319,33 330,34 330,29 343,38 347,45\"/> <polygon id=\"swi\" onClick={this.onClick} onMouseOver={this.onHover} points=\"210,270 194,286 197,289 204,284 206,289 213,291 218,289 225,296 227,289 239,291 242,288 238,281 233,279 233,272 221,268 220,271 212,270\"/> <polygon id=\"syr\" onClick={this.onClick} onMouseOver={this.onHover} points=\"502,403 496,410 498,414 497,420 505,419 515,428 516,441 530,438 542,426 564,404 563,393 558,384 563,374 558,373 552,380 546,378 530,390 520,389 516,393 506,396\"/> <polygon id=\"tun\" onClick={this.onClick} onMouseOver={this.onHover} points=\"229,453 229,438 222,428 231,420 231,418 227,417 220,420 221,412 216,410 210,411 206,415 201,415 196,421 195,447 201,460 205,461 214,475 223,469\"/> <polygon id=\"tus\" onClick={this.onClick} onMouseOver={this.onHover} points=\"230,317 236,334 242,341 257,334 255,328 242,316 233,313\"/> <polygon id=\"tyr\" onClick={this.onClick} onMouseOver={this.onHover} points=\"249,350 254,356 266,361 270,370 278,377 284,381 287,391 282,403 276,403 264,404 251,401 247,402 231,418 227,417 220,420 221,412 216,410 216,383 220,364 217,354 217,350\"/> <polygon id=\"ura\" onClick={this.onClick} onMouseOver={this.onHover} points=\"472,0 466,9 470,17 463,20 452,16 456,11 450,6 440,7 445,9 448,20 455,24 453,34 479,48 513,87 536,83 555,89 585,93 593,99 605,87 611,26 616,0 715,0\"/> <polygon id=\"ven\" onClick={this.onClick} onMouseOver={this.onHover} points=\"271,342 266,325 258,319 258,305 266,300 269,302 271,290 259,288 254,285 247,289 246,309 242,316 255,328 257,334 267,346\"/> <g id=\"vol\" onClick={this.onClick} onMouseOver={this.onHover}> <polygon points=\"572,271 571,252 572,249 575,248 578,252 581,248 582,238 589,234 573,227 562,225 557,208 559,195 570,201 574,196 571,190 584,172 591,173 594,168 596,159 589,151 595,119 593,99 585,93 555,89 559,101 555,125 535,125 531,132 509,143 506,152 507,166 513,173 492,187 496,201 493,225 499,229 507,230 509,234 506,238 506,244 509,246 509,250 509,246 521,248 523,251 528,267 541,272 547,268\"/> <polygon points=\"521,248 549,233 575,248 572,249 549,236 523,251\"/> </g> <polygon id=\"wal\" onClick={this.onClick} onMouseOver={this.onHover} points=\"109,204 129,195 137,197 142,194 136,194 129,188 123,187 122,181 132,180 135,174 131,173 140,167 146,168 146,176 155,182 157,187 150,194 152,207 141,207 131,204 127,208 120,204 111,206\"/> <polygon id=\"war\" onClick={this.onClick} onMouseOver={this.onHover} points=\"304,209 306,203 322,199 322,192 322,199 331,200 342,199 349,193 351,186 358,192 362,201 362,207 357,210 357,214 337,223 320,234 319,230\"/> <polygon id=\"wbs\" onClick={this.onClick} onMouseOver={this.onHover} points=\"475,332 471,335 456,337 440,355 420,357 418,356 409,352 407,348 402,340 404,328 410,324 411,311 417,307 417,302 424,283 435,280 438,282 436,284 440,287 450,284 452,288 447,290 444,296 453,298 453,305 457,306 462,305\"/> <polygon id=\"wme\" onClick={this.onClick} onMouseOver={this.onHover} points=\"216,410 210,411 206,415 201,415 191,411,183,411,180,410,169,412,153,406,122,404,106,410 96,408 96,387 95,384 100,378 107,379 107,377 115,370 147,370 150,371 156,370 210,370 208,380 211,384 216,383\"/> <polygon id=\"wsa\" onClick={this.onClick} onMouseOver={this.onHover} points=\"0,458 19,459 19,450 31,449 173,533 176,531 219,514 237,526 253,528 271,539 294,530 350,559 0,559\"/> <polygon id=\"whi\" onClick={this.onClick} onMouseOver={this.onHover} points=\"440,7 445,9 448,20 455,24 453,34 445,33 434,51 446,59 438,65 425,60 421,60 420,66 431,75 430,78 412,74 406,61 407,55 397,50 394,44 422,47 432,39 433,32 426,27 409,21\"/> <polygon id=\"yor\" onClick={this.onClick} onMouseOver={this.onHover} points=\"169,184 172,181 172,164 166,157 166,145 160,148 160,158 155,168 155,182 157,187\"/> </g> </svg> ); } } SvgModern.propTypes = { game: PropTypes.instanceOf(Game).isRequired, mapData: PropTypes.instanceOf(MapData).isRequired, orders: PropTypes.object, onHover: PropTypes.func, onError: PropTypes.func.isRequired, onSelectLocation: PropTypes.func, onSelectVia: PropTypes.func, onOrderBuilding: PropTypes.func, onOrderBuilt: PropTypes.func, orderBuilding: PropTypes.object, showAbbreviations: PropTypes.bool }; // eslint-disable-line semi","/**\r\n==============================================================================\r\nCopyright (C) 2019 - Philip Paquette, Steven Bocco\r\n\r\n This program is free software: you can redistribute it and/or modify it under\r\n the terms of the GNU Affero General Public License as published by the Free\r\n Software Foundation, either version 3 of the License, or (at your option) any\r\n later version.\r\n\r\n This program is distributed in the hope that it will be useful, but WITHOUT\r\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n details.\r\n\r\n You should have received a copy of the GNU Affero General Public License along\r\n with this program.  If not, see <https:www.gnu.org/licenses/>.\r\n==============================================================================\r\n**/\r\nexport const Coordinates = {\"BER\":{\"unit\":[\"362.5\",\"864.0\"],\"disl\":[\"374.5\",\"852.0\"]},\"CON\":{\"unit\":[\"412.5\",\"98.0\"],\"disl\":[\"424.5\",\"86.0\"]},\"LON\":{\"unit\":[\"878.5\",\"514.0\"],\"disl\":[\"890.5\",\"502.0\"]},\"MOS\":{\"unit\":[\"140.5\",\"289.0\"],\"disl\":[\"152.5\",\"277.0\"]},\"PAR\":{\"unit\":[\"707.5\",\"815.0\"],\"disl\":[\"719.5\",\"803.0\"]},\"ROM\":{\"unit\":[\"116.5\",\"628.0\"],\"disl\":[\"128.5\",\"616.0\"]},\"VIE\":{\"unit\":[\"750.5\",\"195.0\"],\"disl\":[\"762.5\",\"183.0\"]}};\r\nexport const SymbolSizes = {\"Fleet\":{\"width\":40.0,\"height\":40.0},\"Army\":{\"width\":40.0,\"height\":40.0},\"Wing\":{\"width\":40.0,\"height\":40.0},\"DislodgedFleet\":{\"width\":40.0,\"height\":40.0},\"DislodgedArmy\":{\"width\":40.0,\"height\":40.0},\"DislodgedWing\":{\"width\":40.0,\"height\":40.0},\"FailedOrder\":{\"width\":30.0,\"height\":30.0},\"SupplyCenter\":{\"width\":20.0,\"height\":20.0},\"BuildUnit\":{\"width\":60.0,\"height\":60.0},\"RemoveUnit\":{\"width\":50.0,\"height\":50.0},\"WaivedBuild\":{\"width\":40.0,\"height\":40.0},\"HoldUnit\":{\"width\":66.6,\"height\":66.6},\"SupportHoldUnit\":{\"width\":76.6,\"height\":76.6},\"ConvoyTriangle\":{\"width\":66.4,\"height\":57.4},\"Stroke\":{\"width\":6.0,\"height\":10.0}};\r\nexport const Colors = {\"AUSTRIA\":\"#DA251D\",\"ENGLAND\":\"#2D77B2\",\"FRANCE\":\"#8E85B7\",\"GERMANY\":\"#666666\",\"ITALY\":\"#40A340\",\"RUSSIA\":\"#EEF0E9\",\"TURKEY\":\"#E9F507\"};\r\n","/**\r\n==============================================================================\r\nCopyright (C) 2019 - Philip Paquette, Steven Bocco\r\n\r\n This program is free software: you can redistribute it and/or modify it under\r\n the terms of the GNU Affero General Public License as published by the Free\r\n Software Foundation, either version 3 of the License, or (at your option) any\r\n later version.\r\n\r\n This program is distributed in the hope that it will be useful, but WITHOUT\r\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n details.\r\n\r\n You should have received a copy of the GNU Affero General Public License along\r\n with this program.  If not, see <https:www.gnu.org/licenses/>.\r\n==============================================================================\r\n**/\r\n/** Generated with parameters: Namespace(input='src/diplomacy/maps/svg/pure.svg', name='SvgPure', output='src/gui/maps/pure/') **/\r\n import React from 'react'; import PropTypes from 'prop-types'; import './SvgPure.css'; import {Coordinates, SymbolSizes, Colors} from \"./SvgPureMetadata\"; import {getClickedID, parseLocation, setInfluence} from \"../common/common\"; import {Game} from \"../../../diplomacy/engine/game\"; import {MapData} from \"../../utils/map_data\"; import {UTILS} from \"../../../diplomacy/utils/utils\"; import {Diplog} from \"../../../diplomacy/utils/diplog\"; import {extendOrderBuilding} from \"../../utils/order_building\"; import {Unit} from \"../common/unit\"; import {Hold} from \"../common/hold\"; import {Move} from \"../common/move\"; import {SupportMove} from \"../common/supportMove\"; import {SupportHold} from \"../common/supportHold\"; import {Convoy} from \"../common/convoy\"; import {Build} from \"../common/build\"; import {Disband} from \"../common/disband\"; export class SvgPure extends React.Component { constructor(props) { super(props); this.onClick = this.onClick.bind(this); this.onHover = this.onHover.bind(this); } onClick(event) { if (this.props.orderBuilding) return this.handleClickedID(getClickedID(event)); } onHover(event) { return this.handleHoverID(getClickedID(event)); } handleClickedID(id) { const orderBuilding = this.props.orderBuilding; if (!orderBuilding.builder) return this.props.onError('No orderable locations.'); const province = this.props.mapData.getProvince(id); if (!province) throw new Error(`Cannot find a province named ${id}`); const stepLength = orderBuilding.builder.steps.length; if (orderBuilding.path.length >= stepLength) throw new Error(`Order building: current steps count (${orderBuilding.path.length}) should be less than  expected steps count (${stepLength}) (${orderBuilding.path.join(', ')}).`); const lengthAfterClick = orderBuilding.path.length + 1; let validLocations = []; const testedPath = [orderBuilding.type].concat(orderBuilding.path); const value = UTILS.javascript.getTreeValue(this.props.game.ordersTree, testedPath); if (value !== null) { const checker = orderBuilding.builder.steps[lengthAfterClick - 1]; try { const possibleLocations = checker(province, orderBuilding.power); for (let possibleLocation of possibleLocations) { possibleLocation = possibleLocation.toUpperCase(); if (value.includes(possibleLocation)) validLocations.push(possibleLocation); } } catch (error) { return this.props.onError(error); } } if (!validLocations.length) return this.props.onError('Disallowed.'); if (validLocations.length > 1 && orderBuilding.type === 'S' && orderBuilding.path.length >= 2) { /* We are building a support order and we have a multiple choice for a location. */ /* Let's check if next location to choose is a coast. To have a coast: */ /* - all possible locations must start with same 3 characters. */ /* - we expect at least province name in possible locations (e.g. 'SPA' for 'SPA/NC'). */ /* If we have a coast, we will remove province name from possible locations. */ let isACoast = true; let validLocationsNoProvinceName = []; for (let i = 0; i < validLocations.length; ++i) { let location = validLocations[i]; if (i > 0) { /* Compare 3 first letters with previous location. */ if (validLocations[i - 1].substring(0, 3).toUpperCase() !== validLocations[i].substring(0, 3).toUpperCase()) { /* No same prefix with previous location. We does not have a coast. */ isACoast = false; break; } } if (location.length !== 3) validLocationsNoProvinceName.push(location); } if (validLocations.length === validLocationsNoProvinceName.length) { /* We have not found province name. */ isACoast = false; } if (isACoast) { /* We want to choose location in a coastal province. Let's remove province name. */ validLocations = validLocationsNoProvinceName; } } if (validLocations.length > 1) { if (this.props.onSelectLocation) { return this.props.onSelectLocation(validLocations, orderBuilding.power, orderBuilding.type, orderBuilding.path); } else { Diplog.warn(`Forced to select first valid location.`); validLocations = [validLocations[0]]; } } let orderBuildingType = orderBuilding.type; if (lengthAfterClick === stepLength && orderBuildingType === 'M') { const moveOrderPath = ['M'].concat(orderBuilding.path, validLocations[0]); const moveTypes = UTILS.javascript.getTreeValue(this.props.game.ordersTree, moveOrderPath); if (moveTypes !== null) { if (moveTypes.length === 2 && this.props.onSelectVia) { /* This move can be done either regularly or VIA a fleet. Let user choose. */ return this.props.onSelectVia(validLocations[0], orderBuilding.power, orderBuilding.path); } else { orderBuildingType = moveTypes[0]; } } } extendOrderBuilding( orderBuilding.power, orderBuildingType, orderBuilding.path, validLocations[0], this.props.onOrderBuilding, this.props.onOrderBuilt, this.props.onError ); } handleHoverID(id) { if (this.props.onHover) { const province = this.props.mapData.getProvince(id); if (province) { this.props.onHover(province.name, this.getRelatedOrders(province.name)); } } } getRelatedOrders(name) { const orders = []; if (this.props.orders) { for (let powerOrders of Object.values(this.props.orders)) { if (powerOrders) { for (let order of powerOrders) { const pieces = order.split(/ +/); if (pieces[1].slice(0, 3) === name.toUpperCase().slice(0, 3)) orders.push(order); } } } } return orders; } getNeighbors(extraLocation) { const selectedPath = [this.props.orderBuilding.type].concat(this.props.orderBuilding.path); if (extraLocation) selectedPath.push(extraLocation); const possibleNeighbors = UTILS.javascript.getTreeValue(this.props.game.ordersTree, selectedPath); const neighbors = possibleNeighbors ? possibleNeighbors.map(neighbor => parseLocation(neighbor)) : []; return neighbors.length ? neighbors: null; } render() { const classes = {\"_vie\":\"nopower\",\"_lon\":\"nopower\",\"_par\":\"nopower\",\"_ber\":\"nopower\",\"_rom\":\"nopower\",\"_mos\":\"nopower\",\"_con\":\"nopower\",\"CurrentNote\":\"currentnotetext\",\"CurrentNote2\":\"currentnotetext\",\"CurrentPhase\":\"currentphasetext\",\"BriefLabelLayer\":\"labeltext\",\"FullLabelLayer\":\"labeltext\",\"MouseLayer\":\"invisibleContent\"}; const game = this.props.game; const mapData = this.props.mapData; const orders = this.props.orders; /* Current phase. */ const current_phase = (game.phase[0] === '?' || game.phase === 'COMPLETED') ? 'FINAL' : game.phase; /* Notes. */ const nb_centers = []; for (let power of Object.values(game.powers)) { if (!power.isEliminated()) nb_centers.push([power.name.substr(0, 3), power.centers.length]); } /* Sort nb_centers by descending number of centers. */ nb_centers.sort((a, b) => { return -(a[1] - b[1]) || a[0].localeCompare(b[0]); }); const nb_centers_per_power = nb_centers.map((couple) => (couple[0] + ': ' + couple[1])).join(' '); const note = game.note; /* Adding units, influence and orders. */ const renderedUnits = []; const renderedDislodgedUnits = []; const renderedOrders = []; const renderedOrders2 = []; const renderedHighestOrders = []; for (let power of Object.values(game.powers)) if (!power.isEliminated()) { for (let unit of power.units) { renderedUnits.push( <Unit key={unit} unit={unit} powerName={power.name} isDislodged={false} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } for (let unit of Object.keys(power.retreats)) { renderedDislodgedUnits.push( <Unit key={unit} unit={unit} powerName={power.name} isDislodged={true} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } for (let center of power.centers) { setInfluence(classes, mapData, center, power.name); } for (let loc of power.influence) { if (!mapData.supplyCenters.has(loc)) setInfluence(classes, mapData, loc, power.name); } if (orders) { const powerOrders = (orders && orders.hasOwnProperty(power.name) && orders[power.name]) || []; for (let order of powerOrders) { const tokens = order.split(/ +/); if (!tokens || tokens.length < 3) continue; const unit_loc = tokens[1]; if (tokens[2] === 'H') { renderedOrders.push( <Hold key={order} loc={unit_loc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else if (tokens[2] === '-') { const destLoc = tokens[tokens.length - (tokens[tokens.length - 1] === 'VIA' ? 2 : 1)]; renderedOrders.push( <Move key={order} srcLoc={unit_loc} dstLoc={destLoc} powerName={power.name} phaseType={game.getPhaseType()} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else if (tokens[2] === 'S') { const destLoc = tokens[tokens.length - 1]; if (tokens.includes('-')) { const srcLoc = tokens[4]; renderedOrders2.push( <SupportMove key={order} loc={unit_loc} srcLoc={srcLoc} dstLoc={destLoc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else { renderedOrders2.push( <SupportHold key={order} loc={unit_loc} dstLoc={destLoc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } } else if (tokens[2] === 'C') { const srcLoc = tokens[4]; const destLoc = tokens[tokens.length - 1]; if ((srcLoc !== destLoc) && (tokens.includes('-'))) { renderedOrders2.push( <Convoy key={order} loc={unit_loc} srcLoc={srcLoc} dstLoc={destLoc} powerName={power.name} coordinates={Coordinates} colors={Colors} symbolSizes={SymbolSizes}/> ); } } else if (tokens[2] === 'B') { renderedHighestOrders.push( <Build key={order} unitType={tokens[0]} loc={unit_loc} powerName={power.name} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } else if (tokens[2] === 'D') { renderedHighestOrders.push( <Disband key={order} loc={unit_loc} phaseType={game.getPhaseType()} coordinates={Coordinates} symbolSizes={SymbolSizes}/> ); } else if (tokens[2] === 'R') { const destLoc = tokens[3]; renderedOrders.push( <Move key={order} srcLoc={unit_loc} dstLoc={destLoc} powerName={power.name} phaseType={game.getPhaseType()} coordinates={Coordinates} symbolSizes={SymbolSizes} colors={Colors}/> ); } else { throw new Error(`Unknown error to render (${order}).`); } } } } if (this.props.orderBuilding && this.props.orderBuilding.path.length) { const clicked = parseLocation(this.props.orderBuilding.path[0]); const province = this.props.mapData.getProvince(clicked); if (!province) throw new Error(('Unknown clicked province ' + clicked)); const clickedID = province.getID(classes); if (!clicked) throw new Error(`Unknown path (${clickedID}) for province (${clicked}).`); classes[clickedID] = 'provinceRed'; const neighbors = this.getNeighbors(); if (neighbors) { for (let neighbor of neighbors) { const neighborProvince = this.props.mapData.getProvince(neighbor); if (!neighborProvince) throw new Error('Unknown neighbor province ' + neighbor); const neighborID = neighborProvince.getID(classes); if (!neighborID) throw new Error(`Unknown neoghbor path (${neighborID}) for province (${neighbor}).`); classes[neighborID] = neighborProvince.isWater() ? 'provinceBlue' : 'provinceGreen'; } } } if (this.props.showAbbreviations === false) { classes['BriefLabelLayer'] = 'visibilityHidden'; } return ( <svg className=\"SvgPure\" height=\"500px\" preserveAspectRatio=\"xMinYMin\" textRendering=\"optimizeLegibility\" viewBox=\"0 0 1000 1000\" width=\"500px\" xmlns=\"http://www.w3.org/2000/svg\"> <title>Pure</title> <defs> <marker id=\"arrow\" markerHeight=\"3\" markerUnits=\"strokeWidth\" markerWidth=\"4\" orient=\"auto\" refX=\"5\" refY=\"5\" viewBox=\"0 0 10 10\"><path d=\"M 0 0 L 10 5 L 0 10 z\"/></marker> <symbol id=\"WaivedBuild\" overflow=\"visible\" viewBox=\"0 0 100 100\"> <linearGradient gradientUnits=\"userSpaceOnUse\" id=\"symWBGradient\" x1=\"15\" x2=\"100\" y1=\"100\" y2=\"10\"> <stop offset=\"20%\" stopColor=\"yellow\" stopOpacity=\"1\"/> <stop offset=\"95%\" stopColor=\"yellow\" stopOpacity=\"0\"/> </linearGradient> <linearGradient gradientUnits=\"userSpaceOnUse\" id=\"symShadowWBGradient\" x1=\"15\" x2=\"100\" y1=\"100\" y2=\"10\"> <stop offset=\"20%\" stopColor=\"black\" stopOpacity=\"0.5\"/> <stop offset=\"90%\" stopColor=\"black\" stopOpacity=\"0\"/> </linearGradient> <g> <polygon fill=\"url(#symShadowWBGradient)\" points=\"40,100 100,35 95,30 40,85 13,65 10,70\" transform=\"translate(1 7)\"/> <polygon fill=\"url(#symWBGradient)\" points=\"40,100 100,35 90,20 40,85 13,65 10,70\" stroke=\"black\" strokeWidth=\"0.5\"/> </g> </symbol> <symbol id=\"BuildUnit\" overflow=\"visible\" viewBox=\"-23.5 -23.5 153 153\"> <g> <g fill=\"none\" opacity=\"0.5\" stroke=\"black\" strokeWidth=\"7\" transform=\"translate(6 6)\"> <circle cx=\"50\" cy=\"50\" r=\"10\"/> <circle cx=\"50\" cy=\"50\" r=\"30\"/> <circle cx=\"50\" cy=\"50\" r=\"50\"/> <circle cx=\"50\" cy=\"50\" r=\"70\"/> </g> <g fill=\"none\" stroke=\"yellow\" strokeWidth=\"7\"> <circle cx=\"50\" cy=\"50\" r=\"10\"/> <circle cx=\"50\" cy=\"50\" r=\"30\"/> <circle cx=\"50\" cy=\"50\" r=\"50\"/> <circle cx=\"50\" cy=\"50\" r=\"70\"/> </g> </g> </symbol> <symbol id=\"RemoveUnit\" overflow=\"visible\" viewBox=\"-2.5 -2.5 15.5 15.5\"> <g fill=\"none\" stroke=\"red\" strokeWidth=\"1\"> <circle cx=\"5\" cy=\"5\" r=\"7\"/> <line x1=\"-2\" x2=\"12\" y1=\"-2\" y2=\"12\"/> <line x1=\"-2\" x2=\"12\" y1=\"12\" y2=\"-2\"/> </g> </symbol> <symbol id=\"FailedOrder\" overflow=\"visible\" viewBox=\"0 0 35 35\"> <g> <polygon className=\"shadow\" points=\"0,0 12,0 17,6 22,0 35,0 22,17 32,34 19,34 15,27 9,34 -4,34 10,17\" strokeWidth=\"1\" transform=\"translate(3.5,3.5)\"/> <polygon fill=\"red\" fillOpacity=\"1\" points=\"0,0 12,0 17,6 22,0 35,0 22,17 32,34 19,34 15,27 9,34 -4,34 10,17\" stroke=\"black\" strokeWidth=\"3%\"/> </g> </symbol> <symbol id=\"SupplyCenter\" overflow=\"visible\" viewBox=\"-0.375 -0.375 10.75 10.75\"> <g> <circle cx=\"5\" cy=\"5\" r=\"3\" stroke=\"black\" strokeWidth=\"0.4\"/> <circle cx=\"5\" cy=\"5\" fill=\"none\" r=\"5\" stroke=\"black\" strokeWidth=\"0.75\"/> </g> </symbol> <symbol id=\"HoldUnit\" overflow=\"visible\" viewBox=\"-5 -5 76.6 76.6\"> <g> <polygon fill=\"none\" points=\"47.1,0.0 66.6,19.5 66.6, 47.1 47.1,66.6 19.5,66.6 0.0,47.1 0.0,19.5 19.5,0.0\" stroke=\"black\" strokeWidth=\"10\"/> <polygon fill=\"none\" points=\"47.1,0.0 66.6,19.5 66.6, 47.1 47.1,66.6 19.5,66.6 0.0,47.1 0.0,19.5 19.5,0.0\" strokeWidth=\"6\"/> </g> </symbol> <symbol id=\"SupportHoldUnit\" overflow=\"visible\" viewBox=\"-5 -5 86.6 86.6\"> <g> <polygon fill=\"none\" opacity=\"0.45\" points=\"54.2,0.0 76.6,22.4 76.6,54.2 54.2,76.6 22.4,76.6 0.0,54.2 0.0,22.4 22.4,0.0\" stroke=\"black\" strokeWidth=\"10\"/> <polygon fill=\"none\" points=\"54.2,0.0 76.6,22.4 76.6,54.2 54.2,76.6 22.4,76.6 0.0,54.2 0.0,22.4 22.4,0.0\" strokeDasharray=\"5,5\" strokeWidth=\"6\"/> </g> </symbol> <symbol id=\"ConvoyTriangle\" overflow=\"visible\" viewBox=\"-9 -10 84.4 72.4\"> <g> <polygon fill=\"none\" opacity=\"0.45\" points=\"33.2,0.0 66.4,57.4 0.0,57.4\" stroke=\"black\" strokeWidth=\"10\"/> <polygon fill=\"none\" points=\"33.2,0.0 66.4,57.4 0.0,57.4\" strokeDasharray=\"15,5\" strokeWidth=\"6\"/> </g> </symbol> <symbol id=\"Army\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"black\" height=\"13\" opacity=\"0.40\" rx=\"4\" stroke=\"black\" strokeWidth=\"1\" width=\"23\" x=\"2\" y=\"2\"/> <rect height=\"13\" rx=\"4\" stroke=\"black\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"13\" x=\"6\" y=\"6\"/> <rect height=\"1\" width=\"14\" x=\"5\" y=\"7\"/> <rect height=\"1\" width=\"12\" x=\"6\" y=\"8\"/> <rect height=\"1\" width=\"10\" x=\"7\" y=\"9\"/> <rect height=\"3\" width=\"5\" x=\"10\" y=\"3\"/> <rect height=\"1.5\" width=\"1\" x=\"15\" y=\"4.5\"/> <line x1=\"3\" x2=\"10\" y1=\"4\" y2=\"4\"/> </g> </g> </symbol> <symbol id=\"Fleet\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"black\" height=\"13\" opacity=\"0.40\" rx=\"4\" stroke=\"black\" strokeWidth=\"1\" width=\"23\" x=\"2\" y=\"2\"/> <rect height=\"13\" rx=\"4\" stroke=\"black\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"16.5\" x=\"3\" y=\"7\"/> <rect height=\"1\" width=\"15\" x=\"4\" y=\"8\"/> <rect height=\"1\" width=\"13.5\" x=\"5\" y=\"9\"/> <rect height=\"1\" width=\"2.75\" x=\"13.5\" y=\"6\"/> <rect height=\"2\" width=\"4\" x=\"7\" y=\"5\"/> <rect height=\"1\" width=\"1\" x=\"8.5\" y=\"4\"/> <rect height=\"1\" width=\"1\" x=\"6\" y=\"6\"/> </g> </g> </symbol> <symbol id=\"DislodgedArmy\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"red\" height=\"13\" opacity=\"0.50\" rx=\"4\" stroke=\"red\" strokeWidth=\"1\" width=\"23\" x=\"3\" y=\"3\"/> <rect height=\"13\" rx=\"4\" stroke=\"red\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"13\" x=\"6\" y=\"6\"/> <rect height=\"1\" width=\"14\" x=\"5\" y=\"7\"/> <rect height=\"1\" width=\"12\" x=\"6\" y=\"8\"/> <rect height=\"1\" width=\"10\" x=\"7\" y=\"9\"/> <rect height=\"3\" width=\"5\" x=\"10\" y=\"3\"/> <rect height=\"1.5\" width=\"1\" x=\"15\" y=\"4.5\"/> <line x1=\"3\" x2=\"10\" y1=\"4\" y2=\"4\"/> </g> </g> </symbol> <symbol id=\"DislodgedFleet\" overflow=\"visible\" viewBox=\"0 0 23 15\"> <g> <rect fill=\"red\" height=\"13\" opacity=\"0.50\" rx=\"4\" stroke=\"red\" strokeWidth=\"1\" width=\"23\" x=\"3\" y=\"3\"/> <rect height=\"13\" rx=\"4\" stroke=\"red\" strokeWidth=\"3%\" width=\"23\" x=\"0\" y=\"0\"/> <g fill=\"black\" stroke=\"black\" strokeWidth=\"1\"> <rect height=\"1\" width=\"16.5\" x=\"3\" y=\"7\"/> <rect height=\"1\" width=\"15\" x=\"4\" y=\"8\"/> <rect height=\"1\" width=\"13.5\" x=\"5\" y=\"9\"/> <rect height=\"1\" width=\"2.75\" x=\"13.5\" y=\"6\"/> <rect height=\"2\" width=\"4\" x=\"7\" y=\"5\"/> <rect height=\"1\" width=\"1\" x=\"8.5\" y=\"4\"/> <rect height=\"1\" width=\"1\" x=\"6\" y=\"6\"/> </g> </g> </symbol> <marker id=\"arrow\" markerHeight=\"4\" markerUnits=\"strokeWidth\" markerWidth=\"4\" orient=\"auto\" refX=\"5\" refY=\"5\" viewBox=\"0 0 10 10\"><path d=\"M 0 0 L 10 5 L 0 10 z\"/></marker> <pattern height=\"10\" id=\"patternRed\" patternTransform=\"scale(0.54 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"red\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"pink\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternBrown\" patternTransform=\"scale(0.54 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"peru\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"antiquewhite\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternGreen\" patternTransform=\"scale(0.54 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"seagreen\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"yellowgreen\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternBlue\" patternTransform=\"scale(0.54 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"CornflowerBlue\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"cyan\" height=\"10\" width=\"10\" x=\"5\" y=\"0\"/> </pattern> <pattern height=\"10\" id=\"patternBlack\" patternTransform=\"scale(0.54 1)\" patternUnits=\"userSpaceOnUse\" width=\"10\" x=\"0\" y=\"0\"> <rect fill=\"black\" height=\"10\" width=\"10\" x=\"0\" y=\"0\"/> <rect fill=\"gray\" height=\"10\" width=\"10\" x=\"0\" y=\"5\"/> </pattern> </defs> <g id=\"MapLayer\"> <rect fill=\"rgb(240,237,168)\" height=\"995\" stroke=\"black\" strokeWidth=\"5\" width=\"995\" x=\"0\" y=\"0\"/> <path d=\"M497.619 30.1868 L866.51 207.835 L957.619 607.008 L702.338 927.12 L292.9 927.12 L37.6191 607.008 L128.728 207.835 z\" fill=\"none\" id=\"001\" stroke=\"black\" strokeWidth=\"3\"/> <path d=\"M497.619 142.283 L650.619 176.571 L774.287 275.519 L842.619 416.571 L842.619 574.899 L773.619 715.571 L651.158 814.983 L497.619 849.571 L344.08 814.983 L220.619 716.571 L152.619 574.899 L152.619 416.571 L220.951 275.519 L343.619 176.571 z\" fill=\"rgb(240,237,168)\" id=\"002\" stroke=\"black\" strokeWidth=\"3\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"3\" x1=\"497.619\" x2=\"497.619\" y1=\"30.5714\" y2=\"141.571\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"3\" x1=\"772.619\" x2=\"866.619\" y1=\"274.571\" y2=\"207.571\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"3\" x1=\"957.619\" x2=\"841.619\" y1=\"607.571\" y2=\"574.571\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"3\" x1=\"649.619\" x2=\"701.619\" y1=\"814.571\" y2=\"929.571\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"3\" x1=\"291.619\" x2=\"344.619\" y1=\"926.571\" y2=\"814.571\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"3\" x1=\"150.619\" x2=\"36.6191\" y1=\"574.571\" y2=\"606.571\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"3\" x1=\"220.619\" x2=\"128.619\" y1=\"274.571\" y2=\"207.571\"/> <g transform=\"translate(-2.38095 -21.4286)\"> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"346\" x2=\"845\" y1=\"198\" y2=\"438\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"346\" x2=\"776\" y1=\"198\" y2=\"737\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"346\" x2=\"500\" y1=\"198\" y2=\"871\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"346\" x2=\"223\" y1=\"198\" y2=\"738\"/> </g> <g transform=\"translate(-2.38095 -21.4286)\"> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"653\" x2=\"776\" y1=\"198\" y2=\"737\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"653\" x2=\"500\" y1=\"198\" y2=\"871\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"653\" x2=\"223\" y1=\"198\" y2=\"738\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"653\" x2=\"155\" y1=\"198\" y2=\"438\"/> </g> <g transform=\"translate(-2.38095 -21.4286)\"> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"845\" x2=\"500\" y1=\"438\" y2=\"871\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"845\" x2=\"223\" y1=\"438\" y2=\"738\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"845\" x2=\"155\" y1=\"438\" y2=\"438\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"845\" x2=\"346\" y1=\"438\" y2=\"198\"/> </g> <g transform=\"translate(-2.38095 -21.4286)\"> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"776\" x2=\"223\" y1=\"737\" y2=\"738\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"776\" x2=\"155\" y1=\"737\" y2=\"438\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"776\" x2=\"346\" y1=\"737\" y2=\"198\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"776\" x2=\"653\" y1=\"737\" y2=\"198\"/> </g> <g transform=\"translate(-2.38095 -21.4286)\"> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"500\" x2=\"155\" y1=\"871\" y2=\"438\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"500\" x2=\"346\" y1=\"871\" y2=\"198\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"500\" x2=\"653\" y1=\"871\" y2=\"198\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"500\" x2=\"845\" y1=\"871\" y2=\"438\"/> </g> <g transform=\"translate(-2.38095 -21.4286)\"> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"223\" x2=\"346\" y1=\"738\" y2=\"198\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"223\" x2=\"653\" y1=\"738\" y2=\"198\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"223\" x2=\"845\" y1=\"738\" y2=\"438\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"223\" x2=\"776\" y1=\"738\" y2=\"737\"/> </g> <g transform=\"translate(-2.38095 -21.4286)\"> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"155\" x2=\"653\" y1=\"438\" y2=\"198\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"155\" x2=\"845\" y1=\"438\" y2=\"438\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"155\" x2=\"776\" y1=\"438\" y2=\"737\"/> <line fill=\"none\" stroke=\"black\" strokeWidth=\"1\" x1=\"155\" x2=\"500\" y1=\"438\" y2=\"871\"/> </g> <text fill=\"black\" fontFamily=\"sansserif\" fontSize=\"36\" transform=\"translate(-123.913 110.87) translate(1263.04 589.13) translate(-32.6087 2.17391) rotate(309.832 -221.264 125.31) translate(-7.1597 -41.6087) translate(14.9305 -15.5542)\" x=\"-278px\" y=\"138px\">Paris</text> <text fill=\"black\" fontFamily=\"sansserif\" fontSize=\"36\" transform=\"translate(-119.565 -19.5652) translate(1354.35 219.565) translate(-64.1975 1.23457) rotate(75.7072 -220.85 195.892) translate(26.8838 14.493) translate(-21.3531 -2.98297) translate(0.45683 6.30804)\" x=\"-287px\" y=\"205px\">London</text> <text fill=\"black\" fontFamily=\"sansserif\" fontSize=\"36\" transform=\"translate(-132.609 -197.826) translate(2.17391 6.52174) translate(1069.57 -10.8696) rotate(29.8179 -218.768 295.31) translate(10.2944 29.5644) rotate(358.562 -220.214 298.775) rotate(359.007 -220.285 298.603) rotate(357.849 -220.329 298.482) translate(0.720196 6.03851) translate(-8.46365 -1.53838) translate(-11.2897 -18.3683)\" x=\"-274px\" y=\"308px\">Vienna</text> <text fill=\"black\" fontFamily=\"sansserif\" fontSize=\"36\" transform=\"translate(-93.4783 -84.7826) translate(839.13 676.087) translate(-8.69565 -2.17391) translate(0 2.17391) translate(-2.38095 -21.4286) translate(0 5.76923) translate(23 -2) translate(7 0)\" x=\"-313px\" y=\"390px\">Berlin</text> <text fill=\"black\" fontFamily=\"sansserif\" fontSize=\"36\" transform=\"translate(-60.8696 0) translate(586.957 -369.565) translate(32.6923 23.0769) rotate(335.957 -277.737 465.894) translate(17.1839 -0.756818) translate(-1.37782 7.80842) translate(0.972716 2.53974) translate(6.55609 -20.5395) rotate(358.255 -213.197 464.84) translate(-50.1197 -2.00399) translate(-10.8147 -1.39563) translate(-2.30251 0.802347) translate(2.35477 3.05259)\" x=\"-333px\" y=\"475px\">Constantinople</text> <text fill=\"black\" fontFamily=\"sansserif\" fontSize=\"36\" transform=\"translate(-71.7391 -130.435) translate(6.52174 0) translate(6.52174 2.17391) translate(330.435 6.52174) translate(1.92308 0) translate(50 0) translate(-7.69231 0) rotate(285.776 -266.269 538.335) translate(1.28651 11.6267) rotate(357.124 -268.227 538.669) translate(20.3562 -7.10479)\" x=\"-322px\" y=\"551px\">Moscow</text> <text fill=\"black\" fontFamily=\"sansserif\" fontSize=\"36\" transform=\"translate(-82.6087 -241.304) translate(476.087 471.739) translate(5.76923 -9.61538) rotate(49.7338 -280.476 591.894) translate(3.62518 -22.1318) translate(-17.89 -12.0334)\" x=\"-315px\" y=\"601px\">Rome</text> <path className={classes['_vie']} d=\"M497.619 142.283 L650.619 176.571 L774.287 275.519 L866.51 207.835 L497.619 30.1868 z\" id=\"_vie\"/> <path className={classes['_lon']} d=\"M774.287 275.519 L842.619 416.571 L842.619 574.899 L957.619 607.008 L866.51 207.835 z\" id=\"_lon\"/> <path className={classes['_par']} d=\"M842.619 574.899 L773.619 715.571 L651.158 814.983 L702.338 927.12 L957.619 607.008 z\" id=\"_par\"/> <path className={classes['_ber']} d=\"M651.158 814.983 L497.619 849.571 L344.08 814.983 L292.9 927.12 L702.338 927.12 z\" id=\"_ber\"/> <path className={classes['_rom']} d=\"M344.08 814.983 L220.619 716.571 L152.619 574.899 L37.6191 607.008 L292.9 927.12 z\" id=\"_rom\"/> <path className={classes['_mos']} d=\"M152.619 574.899 L152.619 416.571 L220.951 275.519 L128.728 207.835 L37.6191 607.008 z\" id=\"_mos\"/> <path className={classes['_con']} d=\"M220.951 275.519 L343.619 176.571 L497.619 142.283 L497.619 30.1868 L128.728 207.835 z\" id=\"_con\"/> </g> <text className={classes['CurrentNote']} id=\"CurrentNote\" x=\"15\" y=\"25\">{nb_centers_per_power ? nb_centers_per_power : ''}</text> <text className={classes['CurrentNote2']} id=\"CurrentNote2\" x=\"15\" y=\"50\">{note ? note : ''}</text> <text className={classes['CurrentPhase']} fontSize=\"30\" id=\"CurrentPhase\" x=\"845\" y=\"970\">{current_phase}</text> <g id=\"SupplyCenterLayer\"> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_VIE\" width=\"20\" x=\"655.5\" y=\"138.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_LON\" width=\"20\" x=\"865.5\" y=\"393.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_PAR\" width=\"20\" x=\"791.5\" y=\"723.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_BER\" width=\"20\" x=\"488.5\" y=\"874.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_ROM\" width=\"20\" x=\"184.5\" y=\"727.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_MOS\" width=\"20\" x=\"110.5\" y=\"398.0\"/> <use height=\"20\" href=\"#SupplyCenter\" id=\"sc_CON\" width=\"20\" x=\"322.5\" y=\"136.0\"/> </g> <g id=\"OrderLayer\"> <g id=\"Layer2\">{renderedOrders2}</g> <g id=\"Layer1\">{renderedOrders}</g> </g> <g id=\"UnitLayer\">{renderedUnits}</g> <g id=\"DislodgedUnitLayer\">{renderedDislodgedUnits}</g> <g id=\"HighestOrderLayer\">{renderedHighestOrders}</g> <g className={classes['BriefLabelLayer']} id=\"BriefLabelLayer\" visibility=\"hidden\"/> <g className={classes['FullLabelLayer']} id=\"FullLabelLayer\" visibility=\"hidden\"/> <g className={classes['MouseLayer']} id=\"MouseLayer\"> <path d=\"M497.619 142.283 L650.619 176.571 L774.287 275.519 L866.51 207.835 L497.619 30.1868 z\" id=\"vie\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M774.287 275.519 L842.619 416.571 L842.619 574.899 L957.619 607.008 L866.51 207.835 z\" id=\"lon\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M842.619 574.899 L773.619 715.571 L651.158 814.983 L702.338 927.12 L957.619 607.008 z\" id=\"par\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M651.158 814.983 L497.619 849.571 L344.08 814.983 L292.9 927.12 L702.338 927.12 z\" id=\"ber\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M344.08 814.983 L220.619 716.571 L152.619 574.899 L37.6191 607.008 L292.9 927.12 z\" id=\"rom\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M152.619 574.899 L152.619 416.571 L220.951 275.519 L128.728 207.835 L37.6191 607.008 z\" id=\"mos\" onClick={this.onClick} onMouseOver={this.onHover}/> <path d=\"M220.951 275.519 L343.619 176.571 L497.619 142.283 L497.619 30.1868 L128.728 207.835 z\" id=\"con\" onClick={this.onClick} onMouseOver={this.onHover}/> </g> </svg> ); } } SvgPure.propTypes = { game: PropTypes.instanceOf(Game).isRequired, mapData: PropTypes.instanceOf(MapData).isRequired, orders: PropTypes.object, onHover: PropTypes.func, onError: PropTypes.func.isRequired, onSelectLocation: PropTypes.func, onSelectVia: PropTypes.func, onOrderBuilding: PropTypes.func, onOrderBuilt: PropTypes.func, orderBuilding: PropTypes.object, showAbbreviations: PropTypes.bool }; // eslint-disable-line semi","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport {Future} from \"./future\";\r\n\r\nexport class Queue {\r\n    constructor() {\r\n        this.future = new Future();\r\n        this.queue = [];\r\n        this.append = this.append.bind(this);\r\n        this.get = this.get.bind(this);\r\n        this.consume = this.consume.bind(this);\r\n    }\r\n\r\n    append(value) {\r\n        this.queue.push(value);\r\n        if (this.queue.length - 1 === 0) {\r\n            const previousFuture = this.future;\r\n            previousFuture.setResult(null);\r\n            this.future = new Future();\r\n        }\r\n    }\r\n\r\n    __next_value() {\r\n        return this.queue.length ? this.queue.shift() : null;\r\n    }\r\n\r\n    get() {\r\n        return new Promise(resolve => {\r\n            if (this.queue.length) {\r\n                resolve(this.__next_value());\r\n            } else {\r\n                this.future.promise().then(() => resolve(this.__next_value()));\r\n            }\r\n        });\r\n    }\r\n\r\n    consume(valueConsumer) {\r\n        const recursiveConsumer = (value) => {\r\n            if (value !== null) {\r\n                valueConsumer(value);\r\n                this.get().then(recursiveConsumer);\r\n            }\r\n        };\r\n        this.get().then(recursiveConsumer);\r\n    }\r\n\r\n    consumeAsync(valueConsumer) {\r\n        const recursiveConsumer = (value) => {\r\n            if (value !== null) {\r\n                valueConsumer(value)\r\n                    .then(() => this.get())\r\n                    .then(recursiveConsumer);\r\n            }\r\n        };\r\n        this.get().then(recursiveConsumer);\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport Scrollchor from 'react-scrollchor';\r\nimport {SelectLocationForm} from \"../forms/select_location_form\";\r\nimport {SelectViaForm} from \"../forms/select_via_form\";\r\nimport {Order} from \"../utils/order\";\r\nimport {Row} from \"../components/layouts\";\r\nimport {Tabs} from \"../components/tabs\";\r\nimport {extendOrderBuilding, ORDER_BUILDER, POSSIBLE_ORDERS} from \"../utils/order_building\";\r\nimport {PowerOrderCreationForm} from \"../forms/power_order_creation_form\";\r\nimport {MessageForm} from \"../forms/message_form\";\r\nimport {UTILS} from \"../../diplomacy/utils/utils\";\r\nimport {Message} from \"../../diplomacy/engine/message\";\r\nimport {PowerOrders} from \"../components/power_orders\";\r\nimport {MessageView} from \"../components/message_view\";\r\nimport {STRINGS} from \"../../diplomacy/utils/strings\";\r\nimport {Diplog} from \"../../diplomacy/utils/diplog\";\r\nimport {Table} from \"../components/table\";\r\nimport {PowerView} from \"../utils/power_view\";\r\nimport {DipStorage} from \"../utils/dipStorage\";\r\nimport Helmet from 'react-helmet';\r\nimport {Navigation} from \"../components/navigation\";\r\nimport {PageContext} from \"../components/page_context\";\r\nimport PropTypes from 'prop-types';\r\nimport {Help} from \"../components/help\";\r\nimport {Tab} from \"../components/tab\";\r\nimport {Button} from \"../components/button\";\r\nimport {saveGameToDisk} from \"../utils/saveGameToDisk\";\r\nimport {Game} from '../../diplomacy/engine/game';\r\nimport {PowerOrdersActionBar} from \"../components/power_orders_actions_bar\";\r\nimport {SvgStandard} from \"../maps/standard/SvgStandard\";\r\nimport {SvgAncMed} from \"../maps/ancmed/SvgAncMed\";\r\nimport {SvgModern} from \"../maps/modern/SvgModern\";\r\nimport {SvgPure} from \"../maps/pure/SvgPure\";\r\nimport {MapData} from \"../utils/map_data\";\r\nimport {Queue} from \"../../diplomacy/utils/queue\";\r\n\r\nimport { saveDefconLabels } from \"../utils/defconSaveGame\";\r\n\r\nconst HotKey = require('react-shortcut');\r\n\r\n/* Order management in game page.\r\n * When editing orders locally, we have to compare it to server orders\r\n * to determine when we need to update orders on server side. There are\r\n * 9 comparison cases, depending on orders:\r\n * SERVER    LOCAL      DECISION\r\n * null      null       0 (same)\r\n * null      {}         1 (different, user wants to send \"no orders\" on server)\r\n * null      {orders}   1 (different, user defines new orders locally)\r\n * {}        null       0 (assumed same: user is not allowed to \"delete\" a \"no orders\": he can only add new orders)\r\n * {}        {}         0 (same)\r\n * {}        {orders}   1 (different, user defines new orders locally and wants to overwrite the \"no-orders\" on server)\r\n * {orders}  null       1 (different, user wants to delete all server orders, will result to \"no-orders\")\r\n * {orders}  {}         1 (different, user wants to delete all server orders, will result to \"no-orders\")\r\n * {orders}  {orders}   same if we have exactly same orders on both server and local\r\n  * */\r\n\r\nconst TABLE_POWER_VIEW = {\r\n    name: ['Power', 0],\r\n    controller: ['Controller', 1],\r\n    order_is_set: ['With orders', 2],\r\n    wait: ['Waiting', 3]\r\n};\r\n\r\nconst PRETTY_ROLES = {\r\n    [STRINGS.OMNISCIENT_TYPE]: 'Omnicient',\r\n    [STRINGS.OBSERVER_TYPE]: 'Observer'\r\n};\r\n\r\nconst MAP_COMPONENTS = {\r\n    ancmed: SvgAncMed,\r\n    standard: SvgStandard,\r\n    modern: SvgModern,\r\n    pure: SvgPure\r\n};\r\n\r\nfunction getMapComponent(mapName) {\r\n    for (let rootMap of Object.keys(MAP_COMPONENTS)) {\r\n        if (mapName.indexOf(rootMap) === 0)\r\n            return MAP_COMPONENTS[rootMap];\r\n    }\r\n    throw new Error(`Un-implemented map: ${mapName}`);\r\n}\r\n\r\nfunction noPromise() {\r\n    return new Promise(resolve => resolve());\r\n}\r\n\r\nexport class ContentGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // Load local orders from local storage (if available).\r\n        const savedOrders = this.props.data.client ? DipStorage.getUserGameOrders(\r\n            this.props.data.client.channel.username,\r\n            this.props.data.game_id,\r\n            this.props.data.phase\r\n        ) : null;\r\n        let orders = null;\r\n        if (savedOrders) {\r\n            orders = {};\r\n            for (let entry of Object.entries(savedOrders)) {\r\n                let powerOrders = null;\r\n                const powerName = entry[0];\r\n                if (entry[1]) {\r\n                    powerOrders = {};\r\n                    for (let orderString of entry[1]) {\r\n                        const order = new Order(orderString, true);\r\n                        powerOrders[order.loc] = order;\r\n                    }\r\n                }\r\n                orders[powerName] = powerOrders;\r\n            }\r\n        }\r\n        this.schedule_timeout_id = null;\r\n        this.state = {\r\n            tabMain: null,\r\n            tabPastMessages: null,\r\n            tabCurrentMessages: null,\r\n            messageHighlights: {},\r\n            historyPhaseIndex: null,\r\n            historyShowOrders: true,\r\n            historyCurrentLoc: null,\r\n            historyCurrentOrders: null,\r\n            orders: orders, // {power name => {loc => {local: bool, order: str}}}\r\n            power: null,\r\n            orderBuildingType: null,\r\n            orderBuildingPath: [],\r\n            showAbbreviations: true,\r\n\r\n            selectedDefconLevel: null,\r\n            defconComment: null,\r\n            defconLabels: {}\r\n        };\r\n\r\n        // Bind some class methods to this instance.\r\n        this.clearOrderBuildingPath = this.clearOrderBuildingPath.bind(this);\r\n        this.displayFirstPastPhase = this.displayFirstPastPhase.bind(this);\r\n        this.displayLastPastPhase = this.displayLastPastPhase.bind(this);\r\n        this.displayLocationOrders = this.displayLocationOrders.bind(this);\r\n        this.getMapInfo = this.getMapInfo.bind(this);\r\n        this.notifiedGamePhaseUpdated = this.notifiedGamePhaseUpdated.bind(this);\r\n        this.notifiedLocalStateChange = this.notifiedLocalStateChange.bind(this);\r\n        this.notifiedNetworkGame = this.notifiedNetworkGame.bind(this);\r\n        this.notifiedNewGameMessage = this.notifiedNewGameMessage.bind(this);\r\n        this.notifiedPowersControllers = this.notifiedPowersControllers.bind(this);\r\n        this.onChangeCurrentPower = this.onChangeCurrentPower.bind(this);\r\n        this.onChangeMainTab = this.onChangeMainTab.bind(this);\r\n        this.onChangeOrderType = this.onChangeOrderType.bind(this);\r\n        this.onChangePastPhase = this.onChangePastPhase.bind(this);\r\n        this.onChangePastPhaseIndex = this.onChangePastPhaseIndex.bind(this);\r\n        this.onChangeShowPastOrders = this.onChangeShowPastOrders.bind(this);\r\n        this.onChangeShowAbbreviations = this.onChangeShowAbbreviations.bind(this);\r\n        this.onChangeTabCurrentMessages = this.onChangeTabCurrentMessages.bind(this);\r\n        this.onChangeTabPastMessages = this.onChangeTabPastMessages.bind(this);\r\n        this.onClickMessage = this.onClickMessage.bind(this);\r\n        this.onDecrementPastPhase = this.onDecrementPastPhase.bind(this);\r\n        this.onIncrementPastPhase = this.onIncrementPastPhase.bind(this);\r\n        this.onOrderBuilding = this.onOrderBuilding.bind(this);\r\n        this.onOrderBuilt = this.onOrderBuilt.bind(this);\r\n        this.onProcessGame = this.onProcessGame.bind(this);\r\n        this.onRemoveAllCurrentPowerOrders = this.onRemoveAllCurrentPowerOrders.bind(this);\r\n        this.onRemoveOrder = this.onRemoveOrder.bind(this);\r\n        this.onSelectLocation = this.onSelectLocation.bind(this);\r\n        this.onSelectVia = this.onSelectVia.bind(this);\r\n        this.onSetEmptyOrdersSet = this.onSetEmptyOrdersSet.bind(this);\r\n        this.reloadServerOrders = this.reloadServerOrders.bind(this);\r\n        this.renderOrders = this.renderOrders.bind(this);\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.setOrders = this.setOrders.bind(this);\r\n        this.setSelectedLocation = this.setSelectedLocation.bind(this);\r\n        this.setSelectedVia = this.setSelectedVia.bind(this);\r\n        this.setWaitFlag = this.setWaitFlag.bind(this);\r\n        this.vote = this.vote.bind(this);\r\n        this.updateDeadlineTimer = this.updateDeadlineTimer.bind(this);\r\n\r\n    }\r\n\r\n    static prettyRole(role) {\r\n        if (PRETTY_ROLES.hasOwnProperty(role))\r\n            return PRETTY_ROLES[role];\r\n        return role;\r\n    }\r\n\r\n    static gameTitle(game) {\r\n        let title = `${game.game_id} | ${game.phase} | ${game.status} | ${ContentGame.prettyRole(game.role)} | ${game.map_name}`;\r\n        if (game.daide_port)\r\n            title += ` | DAIDE ${game.daide_port}`;\r\n        const remainingTime = game.deadline_timer;\r\n        if (remainingTime === undefined)\r\n            title += ` (deadline: ${game.deadline} sec)`;\r\n        else if (remainingTime)\r\n            title += ` (remaining ${remainingTime} sec)`;\r\n        return title;\r\n    }\r\n\r\n    static getServerWaitFlags(engine) {\r\n        const wait = {};\r\n        const controllablePowers = engine.getControllablePowers();\r\n        for (let powerName of controllablePowers) {\r\n            wait[powerName] = engine.powers[powerName].wait;\r\n        }\r\n        return wait;\r\n    }\r\n\r\n    static getOrderBuilding(powerName, orderType, orderPath) {\r\n        return {\r\n            type: orderType,\r\n            path: orderPath,\r\n            power: powerName,\r\n            builder: orderType && ORDER_BUILDER[orderType]\r\n        };\r\n    }\r\n\r\n    setState(state) {\r\n        return new Promise(resolve => super.setState(state, resolve));\r\n    }\r\n\r\n    forceUpdate() {\r\n        return new Promise(resolve => super.forceUpdate(resolve));\r\n    }\r\n\r\n    /**\r\n     * Return current page object displaying this content.\r\n     * @returns {Page}\r\n     */\r\n    getPage() {\r\n        return this.context;\r\n    }\r\n\r\n    clearOrderBuildingPath() {\r\n        return this.setState({\r\n            orderBuildingPath: []\r\n        });\r\n    }\r\n\r\n    // [ Methods used to handle current map.\r\n\r\n    setSelectedLocation(location, powerName, orderType, orderPath) {\r\n        if (!location)\r\n            return;\r\n        extendOrderBuilding(\r\n            powerName, orderType, orderPath, location,\r\n            this.onOrderBuilding, this.onOrderBuilt, this.getPage().error\r\n        );\r\n    }\r\n\r\n    setSelectedVia(moveType, powerName, orderPath, location) {\r\n        if (!moveType || !['M', 'V'].includes(moveType))\r\n            return;\r\n        extendOrderBuilding(\r\n            powerName, moveType, orderPath, location,\r\n            this.onOrderBuilding, this.onOrderBuilt, this.getPage().error\r\n        );\r\n    }\r\n\r\n    onSelectLocation(possibleLocations, powerName, orderType, orderPath) {\r\n        this.getPage().dialog(onClose => (\r\n            <SelectLocationForm path={orderPath}\r\n                                locations={possibleLocations}\r\n                                onSelect={(location) => {\r\n                                    this.setSelectedLocation(location, powerName, orderType, orderPath);\r\n                                    onClose();\r\n                                }}\r\n                                onClose={() => {\r\n                                    this.clearOrderBuildingPath();\r\n                                    onClose();\r\n                                }}/>\r\n        ));\r\n    }\r\n\r\n    onSelectVia(location, powerName, orderPath) {\r\n        this.getPage().dialog(onClose => (\r\n            <SelectViaForm path={orderPath}\r\n                           onSelect={(moveType) => {\r\n                               setTimeout(() => {\r\n                                   this.setSelectedVia(moveType, powerName, orderPath, location);\r\n                                   onClose();\r\n                               }, 0);\r\n                           }}\r\n                           onClose={() => {\r\n                               this.clearOrderBuildingPath();\r\n                               onClose();\r\n                           }}/>\r\n        ));\r\n    }\r\n\r\n    // ]\r\n\r\n    getMapInfo() {\r\n        return this.getPage().availableMaps[this.props.data.map_name];\r\n    }\r\n\r\n    clearScheduleTimeout() {\r\n        if (this.schedule_timeout_id) {\r\n            clearInterval(this.schedule_timeout_id);\r\n            this.schedule_timeout_id = null;\r\n        }\r\n    }\r\n\r\n    updateDeadlineTimer() {\r\n        const engine = this.props.data;\r\n        --engine.deadline_timer;\r\n        if (engine.deadline_timer <= 0) {\r\n            engine.deadline_timer = 0;\r\n            this.clearScheduleTimeout();\r\n        }\r\n        if (this.networkGameIsDisplayed(engine.client))\r\n            this.forceUpdate();\r\n    }\r\n\r\n    reloadDeadlineTimer(networkGame) {\r\n        networkGame.querySchedule()\r\n            .then(dataSchedule => {\r\n                const schedule = dataSchedule.schedule;\r\n                const server_current = schedule.current_time;\r\n                const server_end = schedule.time_added + schedule.delay;\r\n                const server_remaining = server_end - server_current;\r\n                this.props.data.deadline_timer = server_remaining * schedule.time_unit;\r\n                if (!this.schedule_timeout_id)\r\n                    this.schedule_timeout_id = setInterval(this.updateDeadlineTimer, schedule.time_unit * 1000);\r\n            })\r\n            .catch(() => {\r\n                if (this.props.data.hasOwnProperty('deadline_timer'))\r\n                    delete this.props.data.deadline_timer;\r\n                this.clearScheduleTimeout();\r\n            });\r\n    }\r\n\r\n    // [ Network game notifications.\r\n\r\n    /**\r\n     * Return True if given network game is the game currently displayed on the interface.\r\n     * @param {NetworkGame} networkGame - network game to check\r\n     * @returns {boolean}\r\n     */\r\n    networkGameIsDisplayed(networkGame) {\r\n        return this.getPage().getName() === `game: ${networkGame.local.game_id}`;\r\n    }\r\n\r\n    notifiedNetworkGame(networkGame, notification) {\r\n        if (this.networkGameIsDisplayed(networkGame)) {\r\n            const msg = `Game (${networkGame.local.game_id}) received notification ${notification.name}.`;\r\n            this.reloadDeadlineTimer(networkGame);\r\n            return this.forceUpdate().then(() => this.getPage().info(msg));\r\n        }\r\n        return noPromise();\r\n    }\r\n\r\n    notifiedPowersControllers(networkGame, notification) {\r\n        if (networkGame.local.isPlayerGame() && (\r\n            !networkGame.channel.game_id_to_instances.hasOwnProperty(networkGame.local.game_id)\r\n            || !networkGame.channel.game_id_to_instances[networkGame.local.game_id].has(networkGame.local.role)\r\n        )) {\r\n            // This power game is now invalid.\r\n            return this.getPage().disconnectGame(networkGame.local.game_id)\r\n                .then(() => {\r\n                    if (this.networkGameIsDisplayed(networkGame)) {\r\n                        return this.getPage().loadGames(\r\n                            {error: `${networkGame.local.game_id}/${networkGame.local.role} was kicked. Deadline over?`});\r\n                    }\r\n                });\r\n        } else {\r\n            return this.notifiedNetworkGame(networkGame, notification);\r\n        }\r\n    }\r\n\r\n    notifiedGamePhaseUpdated(networkGame, notification) {\r\n        return networkGame.getAllPossibleOrders()\r\n            .then(allPossibleOrders => {\r\n                networkGame.local.setPossibleOrders(allPossibleOrders);\r\n                if (this.networkGameIsDisplayed(networkGame)) {\r\n                    this.__store_orders(null);\r\n                    this.reloadDeadlineTimer(networkGame);\r\n                    return this.setState({orders: null, messageHighlights: {}, orderBuildingPath: []})\r\n                        .then(() => this.getPage().info(\r\n                            `Game update (${notification.name}) to ${networkGame.local.phase}.`));\r\n                }\r\n            })\r\n            .catch(error => this.getPage().error('Error when updating possible orders: ' + error.toString()));\r\n    }\r\n\r\n    notifiedLocalStateChange(networkGame, notification) {\r\n        return networkGame.getAllPossibleOrders()\r\n            .then(allPossibleOrders => {\r\n                networkGame.local.setPossibleOrders(allPossibleOrders);\r\n                if (this.networkGameIsDisplayed(networkGame)) {\r\n                    this.reloadDeadlineTimer(networkGame);\r\n                    let result = null;\r\n                    if (notification.power_name) {\r\n                        result = this.reloadPowerServerOrders(notification.power_name);\r\n                    } else {\r\n                        result = this.forceUpdate();\r\n                    }\r\n                    return result.then(() => this.getPage().info(`Possible orders re-loaded.`));\r\n                }\r\n            })\r\n            .catch(error => this.getPage().error('Error when updating possible orders: ' + error.toString()));\r\n    }\r\n\r\n    notifiedNewGameMessage(networkGame, notification) {\r\n        let protagonist = notification.message.sender;\r\n        if (notification.message.recipient === 'GLOBAL')\r\n            protagonist = notification.message.recipient;\r\n        const messageHighlights = Object.assign({}, this.state.messageHighlights);\r\n        if (!messageHighlights.hasOwnProperty(protagonist))\r\n            messageHighlights[protagonist] = 1;\r\n        else\r\n            ++messageHighlights[protagonist];\r\n        return this.setState({messageHighlights: messageHighlights})\r\n            .then(() => this.notifiedNetworkGame(networkGame, notification));\r\n    }\r\n\r\n    bindCallbacks(networkGame) {\r\n        const collector = (game, notification) => {\r\n            game.queue.append(notification);\r\n        };\r\n        const consumer = (notification) => {\r\n            switch (notification.name) {\r\n                case 'powers_controllers':\r\n                    return this.notifiedPowersControllers(networkGame, notification);\r\n                case 'game_message_received':\r\n                    return this.notifiedNewGameMessage(networkGame, notification);\r\n                case 'game_processed':\r\n                case 'game_phase_update':\r\n                    return this.notifiedGamePhaseUpdated(networkGame, notification);\r\n                case 'cleared_centers':\r\n                case 'cleared_orders':\r\n                case 'cleared_units':\r\n                case 'power_orders_update':\r\n                case 'power_orders_flag':\r\n                case 'game_status_update':\r\n                case 'omniscient_updated':\r\n                case 'power_vote_updated':\r\n                case 'power_wait_flag':\r\n                case 'vote_count_updated':\r\n                case 'vote_updated':\r\n                    return this.notifiedNetworkGame(networkGame, notification);\r\n                default:\r\n                    throw new Error(`Unhandled notification: ${notification.name}`);\r\n            }\r\n        };\r\n        if (!networkGame.callbacksBound) {\r\n            networkGame.queue = new Queue();\r\n            networkGame.addOnClearedCenters(collector);\r\n            networkGame.addOnClearedOrders(collector);\r\n            networkGame.addOnClearedUnits(collector);\r\n            networkGame.addOnPowerOrdersUpdate(collector);\r\n            networkGame.addOnPowerOrdersFlag(collector);\r\n            networkGame.addOnPowersControllers(collector);\r\n            networkGame.addOnGameMessageReceived(collector);\r\n            networkGame.addOnGameProcessed(collector);\r\n            networkGame.addOnGamePhaseUpdate(collector);\r\n            networkGame.addOnGameStatusUpdate(collector);\r\n            networkGame.addOnOmniscientUpdated(collector);\r\n            networkGame.addOnPowerVoteUpdated(collector);\r\n            networkGame.addOnPowerWaitFlag(collector);\r\n            networkGame.addOnVoteCountUpdated(collector);\r\n            networkGame.addOnVoteUpdated(collector);\r\n            networkGame.callbacksBound = true;\r\n            networkGame.local.markAllMessagesRead();\r\n            networkGame.queue.consumeAsync(consumer);\r\n        }\r\n    }\r\n\r\n    // ]\r\n\r\n    onChangeCurrentPower(event) {\r\n        return this.setState({power: event.target.value, tabPastMessages: null, tabCurrentMessages: null});\r\n    }\r\n\r\n    onChangeMainTab(tab) {\r\n        return this.setState({tabMain: tab});\r\n    }\r\n\r\n    onChangeTabCurrentMessages(tab) {\r\n        return this.setState({tabCurrentMessages: tab});\r\n    }\r\n\r\n    onChangeTabPastMessages(tab) {\r\n        return this.setState({tabPastMessages: tab, defconComment: \"\", selectedDefconLevel: 0});\r\n    }\r\n\r\n    sendMessage(networkGame, recipient, body) {\r\n        const engine = networkGame.local;\r\n        const message = new Message({\r\n            phase: engine.phase,\r\n            sender: engine.role,\r\n            recipient: recipient,\r\n            message: body\r\n        });\r\n        const page = this.getPage();\r\n        networkGame.sendGameMessage({message: message})\r\n            .then(() => {\r\n                page.load(\r\n                    `game: ${engine.game_id}`,\r\n                    <ContentGame data={engine}/>,\r\n                    {success: `Message sent: ${JSON.stringify(message)}`}\r\n                );\r\n            })\r\n            .catch(error => page.error(error.toString()));\r\n    }\r\n\r\n    onProcessGame() {\r\n        const page = this.getPage();\r\n        this.props.data.client.process()\r\n            .then(() => page.success('Game processed.'))\r\n            .catch(err => {\r\n                page.error(err.toString());\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Get name of current power selected on the game page.\r\n     * @returns {null|string}\r\n     */\r\n    getCurrentPowerName() {\r\n        const engine = this.props.data;\r\n        const controllablePowers = engine.getControllablePowers();\r\n        return this.state.power || (controllablePowers.length && controllablePowers[0]);\r\n    }\r\n\r\n    // [ Methods involved in orders management.\r\n\r\n    /**\r\n     * Return a dictionary of local orders for given game engine.\r\n     * Returned dictionary maps each power name to either:\r\n     * - a dictionary of orders, mapping a location to an Order object with boolean flag `local` correctly set\r\n     *   to determine if that order is a new local order or is a copy of an existing server order for this power.\r\n     * - null or empty dictionary, if there are no local orders defined for this power.\r\n     * @param {Game} engine - game engine from which we must get local orders\r\n     * @returns {{}}\r\n     * @private\r\n     */\r\n    __get_orders(engine) {\r\n        const orders = engine.getServerOrders();\r\n        if (this.state.orders) {\r\n            for (let powerName of Object.keys(orders)) {\r\n                const serverPowerOrders = orders[powerName];\r\n                const localPowerOrders = this.state.orders[powerName];\r\n                if (localPowerOrders) {\r\n                    for (let localOrder of Object.values(localPowerOrders)) {\r\n                        localOrder.local = (\r\n                            !serverPowerOrders\r\n                            || !serverPowerOrders.hasOwnProperty(localOrder.loc)\r\n                            || serverPowerOrders[localOrder.loc].order !== localOrder.order\r\n                        );\r\n                    }\r\n                }\r\n                orders[powerName] = localPowerOrders;\r\n            }\r\n        }\r\n        return orders;\r\n    }\r\n\r\n    /**\r\n     * Save given orders into local storage.\r\n     * @param orders - orders to save\r\n     * @private\r\n     */\r\n    __store_orders(orders) {\r\n        const username = this.props.data.client.channel.username;\r\n        const gameID = this.props.data.game_id;\r\n        const gamePhase = this.props.data.phase;\r\n        if (!orders)\r\n            return DipStorage.clearUserGameOrders(username, gameID);\r\n        for (let entry of Object.entries(orders)) {\r\n            const powerName = entry[0];\r\n            let powerOrdersList = null;\r\n            if (entry[1])\r\n                powerOrdersList = Object.values(entry[1]).map(order => order.order);\r\n            DipStorage.clearUserGameOrders(username, gameID, powerName);\r\n            DipStorage.addUserGameOrders(username, gameID, gamePhase, powerName, powerOrdersList);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset local orders and replace them with current server orders for given power.\r\n     * @param {string} powerName - name of power to update\r\n     */\r\n    reloadPowerServerOrders(powerName) {\r\n        const serverOrders = this.props.data.getServerOrders();\r\n        const engine = this.props.data;\r\n        const allOrders = this.__get_orders(engine);\r\n        if (!allOrders.hasOwnProperty(powerName)) {\r\n            return this.getPage().error(`Unknown power ${powerName}.`);\r\n        }\r\n        allOrders[powerName] = serverOrders[powerName];\r\n        this.__store_orders(allOrders);\r\n        return this.setState({orders: allOrders});\r\n    }\r\n\r\n    /**\r\n     * Reset local orders and replace them with current server orders for current selected power.\r\n     */\r\n    reloadServerOrders() {\r\n        this.setState({orderBuildingPath: []}).then(() => {\r\n            const currentPowerName = this.getCurrentPowerName();\r\n            if (currentPowerName) {\r\n                this.reloadPowerServerOrders(currentPowerName);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Remove given order from local orders of given power name.\r\n     * @param {string} powerName - power name\r\n     * @param {Order} order - order to remove\r\n     */\r\n    onRemoveOrder(powerName, order) {\r\n        const orders = this.__get_orders(this.props.data);\r\n        if (orders.hasOwnProperty(powerName)\r\n            && orders[powerName].hasOwnProperty(order.loc)\r\n            && orders[powerName][order.loc].order === order.order) {\r\n            delete orders[powerName][order.loc];\r\n            if (!UTILS.javascript.count(orders[powerName]))\r\n                orders[powerName] = null;\r\n            this.__store_orders(orders);\r\n            this.setState({orders: orders});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove all local orders for current selected power, including empty orders set.\r\n     * Equivalent request is clearOrders().\r\n     */\r\n    onRemoveAllCurrentPowerOrders() {\r\n        const currentPowerName = this.getCurrentPowerName();\r\n        if (currentPowerName) {\r\n            const engine = this.props.data;\r\n            const allOrders = this.__get_orders(engine);\r\n            if (!allOrders.hasOwnProperty(currentPowerName)) {\r\n                this.getPage().error(`Unknown power ${currentPowerName}.`);\r\n                return;\r\n            }\r\n            allOrders[currentPowerName] = null;\r\n            this.__store_orders(allOrders);\r\n            this.setState({orders: allOrders});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set an empty local orders set for given power name.\r\n     * @param {string} powerName - power name\r\n     */\r\n    onSetEmptyOrdersSet(powerName) {\r\n        const orders = this.__get_orders(this.props.data);\r\n        orders[powerName] = {};\r\n        this.__store_orders(orders);\r\n        return this.setState({orders: orders});\r\n    }\r\n\r\n    /**\r\n     * Send local orders to server.\r\n     */\r\n    setOrders() {\r\n        const serverOrders = this.props.data.getServerOrders();\r\n        const orders = this.__get_orders(this.props.data);\r\n\r\n        for (let entry of Object.entries(orders)) {\r\n            const powerName = entry[0];\r\n            const localPowerOrders = entry[1] ? Object.values(entry[1]).map(orderEntry => orderEntry.order) : null;\r\n            const serverPowerOrders = serverOrders[powerName] ? Object.values(serverOrders[powerName]).map(orderEntry => orderEntry.order) : null;\r\n            let same = false;\r\n\r\n            if (serverPowerOrders === null) {\r\n                // No orders set on server.\r\n                same = localPowerOrders === null;\r\n                // Otherwise, we have local orders set (even empty local orders).\r\n            } else if (serverPowerOrders.length === 0) {\r\n                // Empty orders set on server.\r\n                // If we have empty orders set locally, then it's same thing.\r\n                same = localPowerOrders && localPowerOrders.length === 0;\r\n                // Otherwise, we have either local non-empty orders set or local null order.\r\n            } else {\r\n                // Orders set on server. Identical to local orders only if we have exactly same orders on server and locally.\r\n                if (localPowerOrders && localPowerOrders.length === serverPowerOrders.length) {\r\n                    localPowerOrders.sort();\r\n                    serverPowerOrders.sort();\r\n                    same = true;\r\n                    for (let i = 0; i < localPowerOrders.length; ++i) {\r\n                        if (localPowerOrders[i] !== serverPowerOrders[i]) {\r\n                            same = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (same) {\r\n                Diplog.warn(`Orders not changed for ${powerName}.`);\r\n                continue;\r\n            }\r\n\r\n            Diplog.info(`Sending orders for ${powerName}: ${localPowerOrders ? JSON.stringify(localPowerOrders) : null}`);\r\n            let requestCall = null;\r\n            if (localPowerOrders) {\r\n                requestCall = this.props.data.client.setOrders({power_name: powerName, orders: localPowerOrders});\r\n            } else {\r\n                requestCall = this.props.data.client.clearOrders({power_name: powerName});\r\n            }\r\n            requestCall\r\n                .then(() => {\r\n                    this.getPage().success('Orders sent.');\r\n                })\r\n                .catch(err => {\r\n                    this.getPage().error(err.toString());\r\n                })\r\n                .then(() => {\r\n                    this.reloadServerOrders();\r\n                });\r\n        }\r\n    }\r\n\r\n    // ]\r\n\r\n    onOrderBuilding(powerName, path) {\r\n        const pathToSave = path.slice(1);\r\n        return this.setState({orderBuildingPath: pathToSave})\r\n            .then(() => this.getPage().success(`Building order ${pathToSave.join(' ')} ...`));\r\n    }\r\n\r\n    onOrderBuilt(powerName, orderString) {\r\n        const state = Object.assign({}, this.state);\r\n        state.orderBuildingPath = [];\r\n        if (!orderString) {\r\n            Diplog.warn('No order built.');\r\n            return this.setState(state);\r\n        }\r\n        const engine = this.props.data;\r\n        const localOrder = new Order(orderString, true);\r\n        const allOrders = this.__get_orders(engine);\r\n        if (!allOrders.hasOwnProperty(powerName)) {\r\n            Diplog.warn(`Unknown power ${powerName}.`);\r\n            return this.setState(state);\r\n        }\r\n\r\n        if (!allOrders[powerName])\r\n            allOrders[powerName] = {};\r\n        allOrders[powerName][localOrder.loc] = localOrder;\r\n        state.orders = allOrders;\r\n        this.getPage().success(`Built order: ${orderString}`);\r\n        this.__store_orders(allOrders);\r\n        return this.setState(state);\r\n    }\r\n\r\n    onChangeOrderType(form) {\r\n        return this.setState({\r\n            orderBuildingType: form.order_type,\r\n            orderBuildingPath: [],\r\n        });\r\n    }\r\n\r\n    vote(decision) {\r\n        const engine = this.props.data;\r\n        const networkGame = engine.client;\r\n        const controllablePowers = engine.getControllablePowers();\r\n        const currentPowerName = this.state.power || (controllablePowers.length ? controllablePowers[0] : null);\r\n        if (!currentPowerName)\r\n            throw new Error(`Internal error: unable to detect current selected power name.`);\r\n        networkGame.vote({power_name: currentPowerName, vote: decision})\r\n            .then(() => this.getPage().success(`Vote set to ${decision} for ${currentPowerName}`))\r\n            .catch(error => {\r\n                Diplog.error(error.stack);\r\n                this.getPage().error(`Error while setting vote for ${currentPowerName}: ${error.toString()}`);\r\n            });\r\n    }\r\n\r\n    setWaitFlag(waitFlag) {\r\n        const engine = this.props.data;\r\n        const networkGame = engine.client;\r\n        const controllablePowers = engine.getControllablePowers();\r\n        const currentPowerName = this.state.power || (controllablePowers.length ? controllablePowers[0] : null);\r\n        if (!currentPowerName)\r\n            throw new Error(`Internal error: unable to detect current selected power name.`);\r\n        networkGame.setWait(waitFlag, {power_name: currentPowerName})\r\n            .then(() => {\r\n                this.forceUpdate(() => this.getPage().success(`Wait flag set to ${waitFlag} for ${currentPowerName}`));\r\n            })\r\n            .catch(error => {\r\n                Diplog.error(error.stack);\r\n                this.getPage().error(`Error while setting wait flag for ${currentPowerName}: ${error.toString()}`);\r\n            });\r\n    }\r\n\r\n    __change_past_phase(newPhaseIndex) {\r\n        return this.setState({\r\n            historyPhaseIndex: newPhaseIndex,\r\n            historyCurrentLoc: null,\r\n            historyCurrentOrders: null,\r\n            defconComment: \"\",\r\n            selectedDefconLevel: 0\r\n        });\r\n    }\r\n\r\n    onChangePastPhase(event) {\r\n        this.__change_past_phase(event.target.value);\r\n    }\r\n\r\n    onChangePastPhaseIndex(increment) {\r\n        const selectObject = document.getElementById('select-past-phase');\r\n        if (selectObject) {\r\n            // Let's simply increase or decrease index of showed past phase.\r\n            const index = selectObject.selectedIndex;\r\n            const newIndex = index + (increment ? 1 : -1);\r\n            if (newIndex >= 0 && newIndex < selectObject.length) {\r\n                selectObject.selectedIndex = newIndex;\r\n                this.__change_past_phase(parseInt(selectObject.options[newIndex].value, 10), (increment ? 0 : 1));\r\n            }\r\n        }\r\n    }\r\n\r\n    onIncrementPastPhase(event) {\r\n        this.onChangePastPhaseIndex(true);\r\n        if (event && event.preventDefault)\r\n            event.preventDefault();\r\n    }\r\n\r\n    onDecrementPastPhase(event) {\r\n        this.onChangePastPhaseIndex(false);\r\n        if (event && event.preventDefault)\r\n            event.preventDefault();\r\n    }\r\n\r\n    displayFirstPastPhase() {\r\n        this.__change_past_phase(0, 0);\r\n    }\r\n\r\n    displayLastPastPhase() {\r\n        this.__change_past_phase(-1, 1);\r\n    }\r\n\r\n    onChangeShowPastOrders(event) {\r\n        return this.setState({historyShowOrders: event.target.checked});\r\n    }\r\n\r\n    onChangeShowAbbreviations(event) {\r\n        return this.setState({showAbbreviations: event.target.checked});\r\n    }\r\n\r\n    onClickMessage(message) {\r\n        if (!message.read) {\r\n            message.read = true;\r\n            let protagonist = message.sender;\r\n            if (message.recipient === 'GLOBAL')\r\n                protagonist = message.recipient;\r\n            this.getPage().load(`game: ${this.props.data.game_id}`, <ContentGame data={this.props.data}/>);\r\n            if (this.state.messageHighlights.hasOwnProperty(protagonist) && this.state.messageHighlights[protagonist] > 0) {\r\n                const messageHighlights = Object.assign({}, this.state.messageHighlights);\r\n                --messageHighlights[protagonist];\r\n                this.setState({messageHighlights: messageHighlights});\r\n            }\r\n        }\r\n    }\r\n\r\n    displayLocationOrders(loc, orders) {\r\n        return this.setState({\r\n            historyCurrentLoc: loc || null,\r\n            historyCurrentOrders: orders && orders.length ? orders : null\r\n        });\r\n    }\r\n\r\n    // [ Rendering methods.\r\n\r\n    renderOrders(engine, currentPowerName) {\r\n        const serverOrders = this.props.data.getServerOrders();\r\n        const orders = this.__get_orders(engine);\r\n        const wait = ContentGame.getServerWaitFlags(engine);\r\n\r\n        const render = [];\r\n        render.push(<PowerOrders key={currentPowerName} name={currentPowerName} wait={wait[currentPowerName]}\r\n                                 orders={orders[currentPowerName]}\r\n                                 serverCount={serverOrders[currentPowerName] ? UTILS.javascript.count(serverOrders[currentPowerName]) : -1}\r\n                                 onRemove={this.onRemoveOrder}/>);\r\n        return render;\r\n    }\r\n\r\n\r\n    renderPastMessages(engine, role, phaseName) {\r\n        const messageChannels = engine.getMessageChannels(role, true);\r\n        const tabNames = [];\r\n        for (let powerName of Object.keys(engine.powers)) if (powerName !== role)\r\n            tabNames.push(powerName);\r\n        tabNames.sort();\r\n        tabNames.push('GLOBAL');\r\n        const titles = tabNames.map(tabName => (tabName === 'GLOBAL' ? tabName : tabName.substr(0, 3)));\r\n        const currentTabId = this.state.tabPastMessages || tabNames[0];\r\n\r\n        const defcon_levels = [\"Not yet selected\", \"DEFCON 1\", \"DEFCON 2\", \"DEFCON 3\", \"DEFCON 4\", \"DEFCON 5\"];\r\n\r\n        return (\r\n            <div className={'panel-messages'} key={'panel-messages'}>\r\n                {/* Messages. */}\r\n                <Tabs menu={tabNames} titles={titles} onChange={this.onChangeTabPastMessages} active={currentTabId}>\r\n                    {tabNames.map(protagonist => (\r\n                        <Tab key={protagonist} className={'game-messages'} display={currentTabId === protagonist}>\r\n                            {(!messageChannels.hasOwnProperty(protagonist) || !messageChannels[protagonist].length ?\r\n                                    (<div className={'no-game-message'}>No\r\n                                        messages{engine.isPlayerGame() ? ` with ${protagonist}` : ''}.</div>) :\r\n                                    messageChannels[protagonist].map((message, index) => (\r\n                                        <MessageView key={index} phase={engine.phase} owner={role} message={message}\r\n                                                    read={true}/>\r\n                                    ))\r\n                            )}\r\n                        </Tab>\r\n                        \r\n                    ))}\r\n                </Tabs>\r\n\r\n                <p>Input DEFCON level for {currentTabId} from perspective of {role}, phase {phaseName}:</p>\r\n                <select className=\"custom-select\"\r\n                    id=\"defcon-select\"\r\n                    value={this.state.selectedDefconLevel}\r\n\r\n                    onChange={event => {\r\n                        return this.setState({selectedDefconLevel: event.target.value, });\r\n                    }}>\r\n                {defcon_levels.map((name, index) => <option key={index} value={index}>{name}</option>)}\r\n                </select>\r\n\r\n                <p>Comments:</p>\r\n                <textarea className={'form-control'}\r\n                    id={'defcon-comment'} \r\n                    value={this.state.defconComment} \r\n                    onChange={event => {\r\n                        return this.setState({defconComment: event.target.value});\r\n                    }}/>\r\n\r\n                <button class=\"btn btn-secondary\" \r\n                        type=\"button\" \r\n                        id=\"defcon-submit-button\"\r\n                        onClick={event => {\r\n                            // https://stackoverflow.com/questions/43638938/updating-an-object-with-setstate-in-react\r\n                            let labels = Object.assign({}, this.state.defconLabels); \r\n                            let time_pair = phaseName + \"-\" + role + \"-\" + currentTabId;\r\n                            labels[time_pair] = {\r\n                                \"defcon\": this.state.selectedDefconLevel,\r\n                                \"comment\": this.state.defconComment\r\n                            };  \r\n\r\n                            // return this.setState({defconComment: \"\", selectedDefconLevel: 0, defconLabels: labels});\r\n                            return this.setState({defconLabels: labels});\r\n                        }}>\r\n                    Submit\r\n                </button>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    renderCurrentMessages(engine, role) {\r\n        const messageChannels = engine.getMessageChannels(role, true);\r\n        const tabNames = [];\r\n        for (let powerName of Object.keys(engine.powers)) if (powerName !== role)\r\n            tabNames.push(powerName);\r\n        tabNames.sort();\r\n        tabNames.push('GLOBAL');\r\n        const titles = tabNames.map(tabName => (tabName === 'GLOBAL' ? tabName : tabName.substr(0, 3)));\r\n        const currentTabId = this.state.tabCurrentMessages || tabNames[0];\r\n        const highlights = this.state.messageHighlights;\r\n        const unreadMarked = new Set();\r\n\r\n        return (\r\n            <div className={'panel-messages'} key={'panel-messages'}>\r\n                {/* Messages. */}\r\n                <Tabs menu={tabNames} titles={titles} onChange={this.onChangeTabCurrentMessages} active={currentTabId}\r\n                      highlights={highlights}>\r\n                    {tabNames.map(protagonist => (\r\n                        <Tab key={protagonist} className={'game-messages'} display={currentTabId === protagonist}\r\n                             id={`panel-current-messages-${protagonist}`}>\r\n                            {(!messageChannels.hasOwnProperty(protagonist) || !messageChannels[protagonist].length ?\r\n                                    (<div className={'no-game-message'}>No\r\n                                        messages{engine.isPlayerGame() ? ` with ${protagonist}` : ''}.</div>) :\r\n                                    (messageChannels[protagonist].map((message, index) => {\r\n                                        let id = null;\r\n                                        if (!message.read && !unreadMarked.has(protagonist)) {\r\n                                            if (engine.isOmniscientGame() || message.sender !== role) {\r\n                                                unreadMarked.add(protagonist);\r\n                                                id = `${protagonist}-unread`;\r\n                                            }\r\n                                        }\r\n                                        return <MessageView key={index} phase={engine.phase} owner={role}\r\n                                                            message={message}\r\n                                                            read={message.phase !== engine.phase}\r\n                                                            id={id} onClick={this.onClickMessage}/>;\r\n                                    }))\r\n                            )}\r\n                        </Tab>\r\n                    ))}\r\n                </Tabs>\r\n                {/* Link to go to first unread received message. */}\r\n                {unreadMarked.has(currentTabId) && (\r\n                    <Scrollchor className={'link-unread-message'}\r\n                                to={`${currentTabId}-unread`}\r\n                                target={`panel-current-messages-${currentTabId}`}>\r\n                        Go to 1st unread message\r\n                    </Scrollchor>\r\n                )}\r\n                {/* Send form. */}\r\n                {engine.isPlayerGame() && (\r\n                    <MessageForm sender={role} recipient={currentTabId} onSubmit={form =>\r\n                        this.sendMessage(engine.client, currentTabId, form.message)}/>)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderMapForResults(gameEngine, showOrders) {\r\n        const Map = getMapComponent(gameEngine.map_name);\r\n        return (\r\n            <div id=\"past-map\" key=\"past-map\">\r\n                <Map game={gameEngine}\r\n                     showAbbreviations={this.state.showAbbreviations}\r\n                     mapData={new MapData(this.getMapInfo(gameEngine.map_name), gameEngine)}\r\n                     onError={this.getPage().error}\r\n                     orders={(showOrders && gameEngine.order_history.contains(gameEngine.phase) && gameEngine.order_history.get(gameEngine.phase)) || null}\r\n                     onHover={showOrders ? this.displayLocationOrders : null}\r\n                     onSelectVia={this.onSelectVia}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderMapForMessages(gameEngine, showOrders) {\r\n        const Map = getMapComponent(gameEngine.map_name);\r\n        return (\r\n            <div id=\"messages-map\" key=\"messages-map\">\r\n                <Map game={gameEngine}\r\n                     showAbbreviations={this.state.showAbbreviations}\r\n                     mapData={new MapData(this.getMapInfo(gameEngine.map_name), gameEngine)}\r\n                     onError={this.getPage().error}\r\n                     orders={(showOrders && gameEngine.order_history.contains(gameEngine.phase) && gameEngine.order_history.get(gameEngine.phase)) || null}\r\n                     onHover={showOrders ? this.displayLocationOrders : null}\r\n                     onSelectVia={this.onSelectVia}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderMapForCurrent(gameEngine, powerName, orderType, orderPath) {\r\n        const Map = getMapComponent(gameEngine.map_name);\r\n        const rawOrders = this.__get_orders(gameEngine);\r\n        const orders = {};\r\n        for (let entry of Object.entries(rawOrders)) {\r\n            orders[entry[0]] = [];\r\n            if (entry[1]) {\r\n                for (let orderObject of Object.values(entry[1]))\r\n                    orders[entry[0]].push(orderObject.order);\r\n            }\r\n        }\r\n        return (\r\n            <div id=\"current-map\" key=\"current-map\">\r\n                <Map game={gameEngine}\r\n                     showAbbreviations={this.state.showAbbreviations}\r\n                     mapData={new MapData(this.getMapInfo(gameEngine.map_name), gameEngine)}\r\n                     onError={this.getPage().error}\r\n                     orderBuilding={ContentGame.getOrderBuilding(powerName, orderType, orderPath)}\r\n                     onOrderBuilding={this.onOrderBuilding}\r\n                     onOrderBuilt={this.onOrderBuilt}\r\n                     orders={orders}\r\n                     onSelectLocation={this.onSelectLocation}\r\n                     onSelectVia={this.onSelectVia}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    __get_engine_to_display(initialEngine) {\r\n        const pastPhases = initialEngine.state_history.values().map(state => state.name);\r\n        pastPhases.push(initialEngine.phase);\r\n        let phaseIndex = 0;\r\n        if (initialEngine.displayed) {\r\n            if (this.state.historyPhaseIndex === null || this.state.historyPhaseIndex >= pastPhases.length) {\r\n                phaseIndex = pastPhases.length - 1;\r\n            } else if (this.state.historyPhaseIndex < 0) {\r\n                phaseIndex = pastPhases.length + this.state.historyPhaseIndex;\r\n            } else {\r\n                phaseIndex = this.state.historyPhaseIndex;\r\n            }\r\n        }\r\n        const engine = (\r\n            pastPhases[phaseIndex] === initialEngine.phase ?\r\n                initialEngine : initialEngine.cloneAt(pastPhases[phaseIndex])\r\n        );\r\n        return {engine, pastPhases, phaseIndex};\r\n    }\r\n\r\n    __form_phases(pastPhases, phaseIndex) {\r\n        return (\r\n            <form key={1} className=\"form-inline mb-4\">\r\n                <div className=\"custom-control-inline\">\r\n                    <Button title={UTILS.html.UNICODE_LEFT_ARROW} onClick={this.onDecrementPastPhase} pickEvent={true}\r\n                            disabled={phaseIndex === 0}/>\r\n                </div>\r\n                <div className=\"custom-control-inline\">\r\n                    <select className=\"custom-select\"\r\n                            id=\"select-past-phase\"\r\n                            value={phaseIndex}\r\n                            onChange={this.onChangePastPhase}>\r\n                        {pastPhases.map((phaseName, index) => <option key={index} value={index}>{phaseName}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className=\"custom-control-inline\">\r\n                    <Button title={UTILS.html.UNICODE_RIGHT_ARROW} onClick={this.onIncrementPastPhase} pickEvent={true}\r\n                            disabled={phaseIndex === pastPhases.length - 1}/>\r\n                </div>\r\n                <div className=\"custom-control custom-control-inline custom-checkbox\">\r\n                    <input className=\"custom-control-input\" id=\"show-orders\" type=\"checkbox\"\r\n                           checked={this.state.historyShowOrders} onChange={this.onChangeShowPastOrders}/>\r\n                    <label className=\"custom-control-label\" htmlFor=\"show-orders\">Show orders</label>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    renderTabResults(toDisplay, initialEngine) {\r\n        const {engine, pastPhases, phaseIndex} = this.__get_engine_to_display(initialEngine);\r\n        let orders = {};\r\n        let orderResult = null;\r\n        if (engine.order_history.contains(engine.phase))\r\n            orders = engine.order_history.get(engine.phase);\r\n        if (engine.result_history.contains(engine.phase))\r\n            orderResult = engine.result_history.get(engine.phase);\r\n        let countOrders = 0;\r\n        for (let powerOrders of Object.values(orders)) {\r\n            if (powerOrders)\r\n                countOrders += powerOrders.length;\r\n        }\r\n        const powerNames = Object.keys(orders);\r\n        powerNames.sort();\r\n\r\n        const getOrderResult = (order) => {\r\n            if (orderResult) {\r\n                const pieces = order.split(/ +/);\r\n                const unit = `${pieces[0]} ${pieces[1]}`;\r\n                if (orderResult.hasOwnProperty(unit)) {\r\n                    const resultsToParse = orderResult[unit];\r\n                    if (!resultsToParse.length)\r\n                        resultsToParse.push('');\r\n                    const results = [];\r\n                    for (let r of resultsToParse) {\r\n                        if (results.length)\r\n                            results.push(', ');\r\n                        results.push(<span key={results.length} className={r || 'success'}>{r || 'OK'}</span>);\r\n                    }\r\n                    return <span className={'order-result'}> ({results})</span>;\r\n                }\r\n            }\r\n            return '';\r\n        };\r\n\r\n        const orderView = [\r\n            this.__form_phases(pastPhases, phaseIndex),\r\n            (((countOrders && (\r\n                    <div key={2} className={'past-orders container'}>\r\n                        {powerNames.map(powerName => !orders[powerName] || !orders[powerName].length ? '' : (\r\n                            <div key={powerName} className={'row'}>\r\n                                <div className={'past-power-name col-sm-2'}>{powerName}</div>\r\n                                <div className={'past-power-orders col-sm-10'}>\r\n                                    {orders[powerName].map((order, index) => (\r\n                                        <div key={index}>{order}{getOrderResult(order)}</div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )) || <div key={2} className={'no-orders'}>No orders for this phase!</div>\r\n            ))\r\n        ];\r\n\r\n        return (\r\n            <Tab id={'tab-phase-history'} display={toDisplay}>\r\n                <Row>\r\n                    <div className={'col-xl'}>\r\n                        {this.state.historyCurrentOrders && (\r\n                            <div className={'history-current-orders'}>{this.state.historyCurrentOrders.join(', ')}</div>\r\n                        )}\r\n                        {this.renderMapForResults(engine, this.state.historyShowOrders)}\r\n                    </div>\r\n                    <div className={'col-xl'}>{orderView}</div>\r\n                </Row>\r\n                {toDisplay && <HotKey keys={['arrowleft']} onKeysCoincide={this.onDecrementPastPhase}/>}\r\n                {toDisplay && <HotKey keys={['arrowright']} onKeysCoincide={this.onIncrementPastPhase}/>}\r\n                {toDisplay && <HotKey keys={['home']} onKeysCoincide={this.displayFirstPastPhase}/>}\r\n                {toDisplay && <HotKey keys={['end']} onKeysCoincide={this.displayLastPastPhase}/>}\r\n            </Tab>\r\n        );\r\n    }\r\n\r\n    renderTabMessages(toDisplay, initialEngine, currentPowerName) {\r\n        const {engine, pastPhases, phaseIndex} = this.__get_engine_to_display(initialEngine);\r\n\r\n        return (\r\n            <Tab id={'tab-phase-history'} display={toDisplay}>\r\n                <Row>\r\n                    <div className={'col-xl'}>\r\n                        {this.state.historyCurrentOrders && (\r\n                            <div className={'history-current-orders'}>{this.state.historyCurrentOrders.join(', ')}</div>\r\n                        )}\r\n                        {this.renderMapForMessages(engine, this.state.historyShowOrders)}\r\n                    </div>\r\n                    <div className={'col-xl'}>\r\n                        {this.__form_phases(pastPhases, phaseIndex)}\r\n                        {pastPhases[phaseIndex] === initialEngine.phase ? (\r\n                            this.renderCurrentMessages(initialEngine, currentPowerName)\r\n                        ) : (\r\n                            this.renderPastMessages(engine, currentPowerName, pastPhases[phaseIndex])\r\n                        )}\r\n                    </div>\r\n                </Row>\r\n                {toDisplay && <HotKey keys={['arrowleft']} onKeysCoincide={this.onDecrementPastPhase}/>}\r\n                {toDisplay && <HotKey keys={['arrowright']} onKeysCoincide={this.onIncrementPastPhase}/>}\r\n                {toDisplay && <HotKey keys={['home']} onKeysCoincide={this.displayFirstPastPhase}/>}\r\n                {toDisplay && <HotKey keys={['end']} onKeysCoincide={this.displayLastPastPhase}/>}\r\n            </Tab>\r\n        );\r\n    }\r\n\r\n    renderTabCurrentPhase(toDisplay, engine, powerName, orderType, orderPath, currentPowerName, currentTabOrderCreation) {\r\n        const powerNames = Object.keys(engine.powers);\r\n        powerNames.sort();\r\n        const orderedPowers = powerNames.map(pn => engine.powers[pn]);\r\n        return (\r\n            <Tab id={'tab-current-phase'} display={toDisplay}>\r\n                <Row>\r\n                    <div className={'col-xl'}>\r\n                        {this.renderMapForCurrent(engine, powerName, orderType, orderPath)}\r\n                    </div>\r\n                    <div className={'col-xl'}>\r\n                        {/* Orders. */}\r\n                        <div className={'panel-orders mb-4'}>\r\n                            {currentTabOrderCreation ? <div className=\"mb-4\">{currentTabOrderCreation}</div> : ''}\r\n                            <PowerOrdersActionBar\r\n                                onReset={this.reloadServerOrders}\r\n                                onDeleteAll={this.onRemoveAllCurrentPowerOrders}\r\n                                onUpdate={this.setOrders}\r\n                                onProcess={(!this.props.data.isPlayerGame()\r\n                                    && this.props.data.observer_level === STRINGS.MASTER_TYPE) ?\r\n                                    this.onProcessGame : null}/>\r\n                            <div className={'orders'}>{this.renderOrders(this.props.data, powerName)}</div>\r\n                            <div className={'table-responsive'}>\r\n                                <Table className={'table table-striped table-sm'}\r\n                                       caption={'Powers info'}\r\n                                       columns={TABLE_POWER_VIEW}\r\n                                       data={orderedPowers}\r\n                                       wrapper={PowerView.wrap}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </Tab>\r\n        );\r\n    }\r\n\r\n    // ]\r\n\r\n    // [ React.Component overridden methods.\r\n\r\n    render() {\r\n        this.props.data.displayed = true;\r\n        const page = this.context;\r\n        const engine = this.props.data;\r\n        const title = ContentGame.gameTitle(engine);\r\n        const navigation = [\r\n            ['Help', () => page.dialog(onClose => <Help onClose={onClose}/>)],\r\n            ['Load a game from disk', page.loadGameFromDisk],\r\n            ['Save game to disk', () => saveGameToDisk(engine, page.error)],\r\n            [`${UTILS.html.UNICODE_SMALL_LEFT_ARROW} Games`, () => page.loadGames()],\r\n            [`${UTILS.html.UNICODE_SMALL_LEFT_ARROW} Leave game`, () => page.leaveGame(engine.game_id)],\r\n            [`${UTILS.html.UNICODE_SMALL_LEFT_ARROW} Logout`, page.logout],\r\n            ['**Save DEFCON-labelled game to disk**', () => saveDefconLabels(engine, {'labels': this.state.defconLabels})],\r\n        ];\r\n        const phaseType = engine.getPhaseType();\r\n        const controllablePowers = engine.getControllablePowers();\r\n        if (this.props.data.client)\r\n            this.bindCallbacks(this.props.data.client);\r\n\r\n        if (engine.phase === 'FORMING')\r\n            return <main>\r\n                <div className={'forming'}>Game not yet started!</div>\r\n            </main>;\r\n\r\n        const tabNames = [];\r\n        const tabTitles = [];\r\n        let hasTabPhaseHistory = false;\r\n        let hasTabCurrentPhase = false;\r\n        if (engine.state_history.size()) {\r\n            hasTabPhaseHistory = true;\r\n            tabNames.push('phase_history');\r\n            tabTitles.push('Results');\r\n        }\r\n        tabNames.push('messages');\r\n        tabTitles.push('Messages');\r\n        if (controllablePowers.length && phaseType && !engine.isObserverGame()) {\r\n            hasTabCurrentPhase = true;\r\n            tabNames.push('current_phase');\r\n            tabTitles.push('Current');\r\n        }\r\n        if (!tabNames.length) {\r\n            // This should never happen, but let's display this message.\r\n            return <main>\r\n                <div className={'no-data'}>No data in this game!</div>\r\n            </main>;\r\n        }\r\n        const mainTab = this.state.tabMain && tabNames.includes(this.state.tabMain) ? this.state.tabMain : tabNames[tabNames.length - 1];\r\n\r\n        const currentPowerName = this.state.power || (controllablePowers.length && controllablePowers[0]);\r\n        let currentPower = null;\r\n        let orderTypeToLocs = null;\r\n        let allowedPowerOrderTypes = null;\r\n        let orderBuildingType = null;\r\n        let buildCount = null;\r\n        if (hasTabCurrentPhase) {\r\n            currentPower = engine.getPower(currentPowerName);\r\n            orderTypeToLocs = engine.getOrderTypeToLocs(currentPowerName);\r\n            allowedPowerOrderTypes = Object.keys(orderTypeToLocs);\r\n            // canOrder = allowedPowerOrderTypes.length\r\n            if (allowedPowerOrderTypes.length) {\r\n                POSSIBLE_ORDERS.sortOrderTypes(allowedPowerOrderTypes, phaseType);\r\n                if (this.state.orderBuildingType && allowedPowerOrderTypes.includes(this.state.orderBuildingType))\r\n                    orderBuildingType = this.state.orderBuildingType;\r\n                else\r\n                    orderBuildingType = allowedPowerOrderTypes[0];\r\n            }\r\n            buildCount = engine.getBuildsCount(currentPowerName);\r\n        }\r\n\r\n        const navAfterTitle = (\r\n            <form className=\"form-inline form-current-power\">\r\n                {(controllablePowers.length === 1 &&\r\n                    <span className=\"power-name\">{controllablePowers[0]}</span>) || (\r\n                    <div className=\"custom-control custom-control-inline\">\r\n                        <label className=\"sr-only\" htmlFor=\"current-power\">power</label>\r\n                        <select className=\"form-control custom-select custom-control-inline\" id=\"current-power\"\r\n                                value={currentPowerName} onChange={this.onChangeCurrentPower}>\r\n                            {controllablePowers.map(\r\n                                powerName => <option key={powerName} value={powerName}>{powerName}</option>)}\r\n                        </select>\r\n                    </div>\r\n                )}\r\n                <div className=\"custom-control custom-control-inline custom-checkbox\">\r\n                    <input className=\"custom-control-input\" id=\"show-abbreviations\" type=\"checkbox\"\r\n                           checked={this.state.showAbbreviations} onChange={this.onChangeShowAbbreviations}/>\r\n                    <label className=\"custom-control-label\" htmlFor=\"show-abbreviations\">Show abbreviations</label>\r\n                </div>\r\n            </form>\r\n        );\r\n\r\n        const currentTabOrderCreation = hasTabCurrentPhase && (\r\n            <div>\r\n                <PowerOrderCreationForm orderType={orderBuildingType}\r\n                                        orderTypes={allowedPowerOrderTypes}\r\n                                        onChange={this.onChangeOrderType}\r\n                                        onPass={() => this.onSetEmptyOrdersSet(currentPowerName)}\r\n                                        onSetWaitFlag={() => this.setWaitFlag(!currentPower.wait)}\r\n                                        onVote={this.vote}\r\n                                        role={engine.role}\r\n                                        power={currentPower}/>\r\n                {(allowedPowerOrderTypes.length && (\r\n                    <span>\r\n                                <strong>Orderable locations</strong>: {orderTypeToLocs[orderBuildingType].join(', ')}\r\n                            </span>\r\n                ))\r\n                || (<strong>&nbsp;No orderable location.</strong>)}\r\n                {phaseType === 'A' && (\r\n                    (buildCount === null && (\r\n                        <strong>&nbsp;(unknown build count)</strong>\r\n                    ))\r\n                    || (buildCount === 0 ? (\r\n                        <strong>&nbsp;(nothing to build or disband)</strong>\r\n                    ) : (buildCount > 0 ? (\r\n                        <strong>&nbsp;({buildCount} unit{buildCount > 1 && 's'} may be built)</strong>\r\n                    ) : (\r\n                        <strong>&nbsp;({-buildCount} unit{buildCount < -1 && 's'} to disband)</strong>\r\n                    )))\r\n                )}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <main>\r\n                <Helmet>\r\n                    <title>{title} | Diplomacy</title>\r\n                </Helmet>\r\n                <Navigation title={title}\r\n                            afterTitle={navAfterTitle}\r\n                            username={page.channel.username}\r\n                            navigation={navigation}/>\r\n                <Tabs menu={tabNames} titles={tabTitles} onChange={this.onChangeMainTab} active={mainTab}>\r\n                    {/* Tab Phase history. */}\r\n                    {(hasTabPhaseHistory && mainTab === 'phase_history' && this.renderTabResults(mainTab === 'phase_history', engine)) || ''}\r\n                    {mainTab === 'messages' && this.renderTabMessages(mainTab === 'messages', engine, currentPowerName)}\r\n                    {/* Tab Current phase. */}\r\n                    {(mainTab === 'current_phase' && hasTabCurrentPhase && this.renderTabCurrentPhase(\r\n                        mainTab === 'current_phase',\r\n                        engine,\r\n                        currentPowerName,\r\n                        orderBuildingType,\r\n                        this.state.orderBuildingPath,\r\n                        currentPowerName,\r\n                        currentTabOrderCreation\r\n                    )) || ''}\r\n                </Tabs>\r\n            </main>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        if (this.props.data.client)\r\n            this.reloadDeadlineTimer(this.props.data.client);\r\n        this.props.data.displayed = true;\r\n        // Try to prevent scrolling when pressing keys Home and End.\r\n        document.onkeydown = (event) => {\r\n            if (['home', 'end'].includes(event.key.toLowerCase())) {\r\n                // Try to prevent scrolling.\r\n                if (event.hasOwnProperty('cancelBubble'))\r\n                    event.cancelBubble = true;\r\n                if (event.stopPropagation)\r\n                    event.stopPropagation();\r\n                if (event.preventDefault)\r\n                    event.preventDefault();\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.props.data.displayed = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearScheduleTimeout();\r\n        this.props.data.displayed = false;\r\n        document.onkeydown = null;\r\n    }\r\n\r\n    // ]\r\n\r\n}\r\n\r\nContentGame.contextType = PageContext;\r\nContentGame.propTypes = {\r\n    data: PropTypes.instanceOf(Game).isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nexport function saveGameToDisk(game, onError) {\r\n    if (game.client) {\r\n        game.client.save()\r\n            .then((savedData) => {\r\n                const domLink = document.createElement('a');\r\n                domLink.setAttribute(\r\n                    'href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(savedData)));\r\n                domLink.setAttribute('download', `${game.game_id}.json`);\r\n                domLink.style.display = 'none';\r\n                document.body.appendChild(domLink);\r\n                domLink.click();\r\n                document.body.removeChild(domLink);\r\n            })\r\n            .catch(exc => onError(`Error while saving game: ${exc.toString()}`));\r\n    } else {\r\n        onError(`Cannot save this game.`);\r\n    }\r\n}\r\n","\r\n// record is {\"game_id\":, \"defcon\": {\"time-pair\": defcon}]}\r\n\r\n\r\nexport function saveDefconLabels(game, labels) {\r\n    // if (game.client) {\r\n    //     game.client.save()\r\n    //         .then((savedData) => {\r\n    //             const domLink = document.createElement('a');\r\n    //             domLink.setAttribute(\r\n    //                 'href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(savedData)));\r\n    //             domLink.setAttribute('download', `${game.game_id}.json`);\r\n    //             domLink.style.display = 'none';\r\n    //             document.body.appendChild(domLink);\r\n    //             domLink.click();\r\n    //             document.body.removeChild(domLink);\r\n    //         })\r\n    //         .catch(exc => onError(`Error while saving game: ${exc.toString()}`));\r\n    // } else {\r\n    //     onError(`Cannot save this game.`);\r\n    // }\r\n    labels.game_id = game.game_id;\r\n\r\n    const domLink = document.createElement('a');\r\n    domLink.setAttribute(\r\n        'href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(labels)));\r\n    domLink.setAttribute('download', `${labels.game_id}.json`);\r\n    domLink.style.display = 'none';\r\n    document.body.appendChild(domLink);\r\n    domLink.click();\r\n    document.body.removeChild(domLink);\r\n}","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {Button} from \"./button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class DeleteButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {step: 0};\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick() {\r\n        this.setState({step: this.state.step + 1}, () => {\r\n            if (this.state.step === 2)\r\n                this.props.onClick();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let title = '';\r\n        let color = '';\r\n        if (this.state.step === 0) {\r\n            title = this.props.title;\r\n            color = 'secondary';\r\n        } else if (this.state.step === 1) {\r\n            title = this.props.confirmTitle;\r\n            color = 'danger';\r\n        } else if (this.state.step === 2) {\r\n            title = this.props.waitingTitle;\r\n            color = 'danger';\r\n        }\r\n        return (\r\n            <Button title={title} color={color} onClick={this.onClick} small={true} large={true}/>\r\n        );\r\n    }\r\n}\r\n\r\nDeleteButton.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    confirmTitle: PropTypes.string.isRequired,\r\n    waitingTitle: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {JoinForm} from \"../forms/join_form\";\r\nimport {STRINGS} from \"../../diplomacy/utils/strings\";\r\nimport {ContentGame} from \"../pages/content_game\";\r\nimport {Button} from \"../components/button\";\r\nimport {DeleteButton} from \"../components/delete_button\";\r\n\r\nexport class InlineGameView {\r\n    constructor(page, gameData, maps) {\r\n        this.page = page;\r\n        this.game = gameData;\r\n        this.maps = maps;\r\n        this.get = this.get.bind(this);\r\n        this.joinGame = this.joinGame.bind(this);\r\n        this.showGame = this.showGame.bind(this);\r\n    }\r\n\r\n    joinGame(formData) {\r\n        const form = {\r\n            power_name: formData[`power_name_${this.game.game_id}`],\r\n            registration_password: formData[`registration_password_${this.game.game_id}`]\r\n        };\r\n        if (!form.power_name)\r\n            form.power_name = null;\r\n        if (!form.registration_password)\r\n            form.registration_password = null;\r\n        form.game_id = this.game.game_id;\r\n        this.page.channel.joinGame(form)\r\n            .then((networkGame) => {\r\n                this.game = networkGame.local;\r\n                this.page.addToMyGames(this.game);\r\n                return networkGame.getAllPossibleOrders();\r\n            })\r\n            .then(allPossibleOrders => {\r\n                this.game.setPossibleOrders(allPossibleOrders);\r\n                this.page.load(\r\n                    `game: ${this.game.game_id}`,\r\n                    <ContentGame data={this.game}/>,\r\n                    {success: 'Game joined.'}\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                this.page.error('Error when joining game ' + this.game.game_id + ': ' + error);\r\n            });\r\n    }\r\n\r\n    showGame() {\r\n        this.page.load(`game: ${this.game.game_id}`, <ContentGame data={this.game}/>);\r\n    }\r\n\r\n    getJoinUI() {\r\n        if (this.game.role) {\r\n            // Game already joined.\r\n            return (\r\n                <div className={'games-form'}>\r\n                    <Button key={'button-show-' + this.game.game_id} title={'show'} onClick={this.showGame}/>\r\n                    <Button key={'button-leave-' + this.game.game_id} title={'leave'}\r\n                            onClick={() => this.page.leaveGame(this.game.game_id)}/>\r\n                </div>\r\n            );\r\n        } else {\r\n            // Game not yet joined.\r\n            return <JoinForm key={this.game.game_id}\r\n                             game_id={this.game.game_id}\r\n                             powers={this.game.controlled_powers}\r\n                             availablePowers={this.maps[this.game.map_name].powers}\r\n                             password_required={this.game.registration_password}\r\n                             onSubmit={this.joinGame}/>;\r\n        }\r\n    }\r\n\r\n    getActionButtons() {\r\n        const buttons = [];\r\n        // Button to add/remove game from \"My games\" list.\r\n        if (this.page.hasMyGame(this.game.game_id)) {\r\n            if (!this.game.client) {\r\n                // Game in My Games and not joined. We can remove it.\r\n                buttons.push(<Button key={`my-game-remove`} title={'Remove from My Games'}\r\n                                     small={true} large={true}\r\n                                     onClick={() => this.page.removeFromMyGames(this.game.game_id)}/>);\r\n            }\r\n        } else {\r\n            // Game not in My Games, we can add it.\r\n            buttons.push(<Button key={`my-game-add`} title={'Add to My Games'}\r\n                                 small={true} large={true}\r\n                                 onClick={() => this.page.addToMyGames(this.game)}/>);\r\n        }\r\n        // Button to delete game.\r\n        if ([STRINGS.MASTER_TYPE, STRINGS.OMNISCIENT_TYPE].includes(this.game.observer_level)) {\r\n            buttons.push(\r\n                <DeleteButton key={`game-delete-${this.game.game_id}`}\r\n                              title={'Delete this game'}\r\n                              confirmTitle={'Click again to confirm deletion'}\r\n                              waitingTitle={'Deleting ...'}\r\n                              onClick={() => this.page.removeGame(this.game.game_id)}/>\r\n            );\r\n        }\r\n        return buttons;\r\n    }\r\n\r\n    get(name) {\r\n        if (name === 'players') {\r\n            return `${this.game.n_players} / ${this.game.n_controls}`;\r\n        }\r\n        if (name === 'rights') {\r\n            const elements = [];\r\n            if (this.game.observer_level) {\r\n                let levelName = '';\r\n                if (this.game.observer_level === STRINGS.MASTER_TYPE)\r\n                    levelName = 'master';\r\n                else if (this.game.observer_level === STRINGS.OMNISCIENT_TYPE)\r\n                    levelName = 'omniscient';\r\n                else\r\n                    levelName = 'observer';\r\n                elements.push((<p key={0}><strong>Observer right:</strong><br/>{levelName}</p>));\r\n            }\r\n            if (this.game.controlled_powers && this.game.controlled_powers.length) {\r\n                const powers = this.game.controlled_powers.slice();\r\n                powers.sort();\r\n                elements.push((\r\n                    <div key={1}><strong>Currently handled power{powers.length === 1 ? '' : 's'}</strong></div>));\r\n                for (let power of powers)\r\n                    elements.push((<div key={power}>{power}</div>));\r\n            }\r\n            return elements.length ? (<div>{elements}</div>) : '';\r\n        }\r\n        if (name === 'rules') {\r\n            if (this.game.rules)\r\n                return <div>{this.game.rules.map(rule => <div key={rule}>{rule}</div>)}</div>;\r\n            return '';\r\n        }\r\n        if (name === 'join')\r\n            return this.getJoinUI();\r\n        if (name === 'actions')\r\n            return this.getActionButtons();\r\n        if (name === 'game_id') {\r\n            const date = new Date(this.game.timestamp_created / 1000);\r\n            const dateString = `${date.toLocaleDateString()} - ${date.toLocaleTimeString()}`;\r\n            return <div>\r\n                <div><strong>{this.game.game_id}</strong></div>\r\n                <div>({dateString})</div>\r\n                <div><em>{this.game.map_name}</em></div>\r\n            </div>;\r\n        }\r\n        return this.game[name];\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nexport const Panels = {\r\n    CHOOSE_MAP: 0,\r\n    CHOOSE_PLAYERS: 1,\r\n    CHOOSE_POWER: 2,\r\n    CHOOSE_SETTINGS: 3\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nclass VariantInfo {\r\n    constructor(variantName, variantTitle) {\r\n        this.name = variantName;\r\n        this.title = variantTitle;\r\n        this.map = null;\r\n    }\r\n\r\n    svgName() {\r\n        return this.map.name;\r\n    }\r\n}\r\n\r\nclass MapInfo {\r\n    constructor(mapName, mapTitle, variants) {\r\n        this.name = mapName;\r\n        this.title = mapTitle;\r\n        this.variants = null;\r\n        if (variants) {\r\n            this.variants = [];\r\n            for (let variant of variants) {\r\n                variant.map = this;\r\n                this.variants.push(variant);\r\n            }\r\n        }\r\n    }\r\n\r\n    svgName() {\r\n        return this.name;\r\n    }\r\n}\r\n\r\nexport const Maps = [\r\n    new MapInfo('standard', 'Standard', [\r\n        new VariantInfo('standard', 'Default'),\r\n        new VariantInfo('standard_age_of_empires', 'Age of empires'),\r\n        new VariantInfo('standard_age_of_empires_2', 'Age of empires II'),\r\n        new VariantInfo('standard_fleet_rome', 'Fleet at Rome'),\r\n        new VariantInfo('standard_france_austria', 'France VS Austria'),\r\n        new VariantInfo('standard_germany_italy', 'Germany VS Italy')\r\n    ]),\r\n    new MapInfo('ancmed', 'Ancient Mediterranean', [\r\n        new VariantInfo('ancmed', 'Default'),\r\n        new VariantInfo('ancmed_age_of_empires', 'Age of empires')\r\n    ]),\r\n    new MapInfo('modern', 'Modern'),\r\n    new MapInfo('pure', 'Pure'),\r\n];\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {Maps} from \"./mapList\";\r\nimport {FancyBox} from \"../../components/fancyBox\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class PanelChooseMap extends React.Component {\r\n    render() {\r\n        const mapImg = require(`../../../../maps/svg/${this.props.params.map.svgName()}.svg`);\r\n        const mapEntries = [];\r\n        let count = 0;\r\n        for (let mapInfo of Maps) {\r\n            ++count;\r\n            if (!mapInfo.variants) {\r\n                mapEntries.push(\r\n                    <div key={count} className=\"mb-1 d-flex flex-row\">\r\n                        <button type=\"button\"\r\n                                className=\"btn btn-secondary btn-sm flex-grow-1 mr-1\"\r\n                                onMouseOver={() => this.props.onUpdateParams({map: mapInfo})}\r\n                                onClick={() => this.props.forward()}>\r\n                            {mapInfo.title}\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-outline-secondary btn-sm\" disabled={true}>\r\n                            <strong>+</strong>\r\n                        </button>\r\n                    </div>\r\n                );\r\n            } else {\r\n                const dropDownID = `collapse-${count}-${mapInfo.name}`;\r\n                const variants = mapInfo.variants.slice();\r\n                const defaultVariant = variants[0];\r\n                mapEntries.push(\r\n                    <div key={count}>\r\n                        <div className=\"mb-1 d-flex flex-row\">\r\n                            <button type=\"button\"\r\n                                    className=\"btn btn-secondary btn-sm flex-grow-1 mr-1\"\r\n                                    onMouseOver={() => this.props.onUpdateParams({map: defaultVariant})}\r\n                                    onClick={() => this.props.forward()}>\r\n                                {mapInfo.title} ({defaultVariant.title})\r\n                            </button>\r\n                            <button type=\"button\"\r\n                                    className=\"btn btn-outline-secondary btn-sm collapsed\"\r\n                                    data-toggle=\"collapse\"\r\n                                    data-target={`#${dropDownID}`}\r\n                                    aria-expanded={false}\r\n                                    aria-controls={dropDownID}>\r\n                                <span className=\"unroll\"><strong>+</strong></span>\r\n                                <span className=\"roll\"><strong>-</strong></span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"collapse\" id={dropDownID}>\r\n                            <div>\r\n                                {(() => {\r\n                                    const views = [];\r\n                                    for (let i = 1; i < variants.length; ++i) {\r\n                                        const variantInfo = variants[i];\r\n                                        views.push(\r\n                                            <div key={variantInfo.name} className=\"mb-1\">\r\n                                                <button type=\"button\"\r\n                                                        className=\"btn btn-outline-secondary btn-sm btn-block\"\r\n                                                        onMouseOver={() => this.props.onUpdateParams({map: variantInfo})}\r\n                                                        onClick={() => this.props.forward()}>\r\n                                                    {variantInfo.title}\r\n                                                </button>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                    return views;\r\n                                })()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <FancyBox title={'Choose a map'} onClose={this.props.cancel}>\r\n                <div className=\"row panel-choose-map\">\r\n                    <div className=\"col-md\">\r\n                        <div className=\"map-list p-1 ml-0 ml-sm-1\">\r\n                            {mapEntries}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md\">\r\n                        <img className=\"img-fluid\" src={mapImg} alt={this.props.params.map.title}/>\r\n                    </div>\r\n                </div>\r\n            </FancyBox>\r\n        );\r\n    }\r\n}\r\n\r\nPanelChooseMap.propTypes = {\r\n    forward: PropTypes.func.isRequired,\r\n    cancel: PropTypes.func.isRequired,\r\n    params: PropTypes.object.isRequired,\r\n    onUpdateParams: PropTypes.func.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {FancyBox} from \"../../components/fancyBox\";\r\nimport PropTypes from \"prop-types\";\r\nimport Octicon, {ArrowLeft} from \"@primer/octicons-react\";\r\n\r\nexport class PanelChoosePlayers extends React.Component {\r\n    render() {\r\n        return (\r\n            <FancyBox title={'Number of human players'} onClose={this.props.cancel}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm btn-block inline\" onClick={() => {\r\n                            this.props.onUpdateParams({n_controls: 0});\r\n                            this.props.forward(2);\r\n                        }}>None - just bots\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm btn-block inline\" onClick={() => {\r\n                            this.props.onUpdateParams({n_controls: this.props.nbPowers});\r\n                            this.props.forward();\r\n                        }}>All humans - no bots\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"d-flex flex-row justify-content-center my-2\">\r\n                            {(() => {\r\n                                const choice = [];\r\n                                for (let i = 0; i < this.props.nbPowers; ++i) {\r\n                                    choice.push(\r\n                                        <button key={i} type=\"button\"\r\n                                                className={`btn btn-secondary btn-sm flex-grow-1 ${i === 0 ? '' : 'ml-sm-1'}`}\r\n                                                onClick={() => {\r\n                                                    this.props.onUpdateParams({n_controls: i + 1});\r\n                                                    this.props.forward();\r\n                                                }}>\r\n                                            {i + 1}\r\n                                        </button>\r\n                                    );\r\n                                }\r\n                                return choice;\r\n                            })()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm px-3\"\r\n                                onClick={() => this.props.backward()}>\r\n                            <Octicon icon={ArrowLeft}/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </FancyBox>\r\n        );\r\n    }\r\n}\r\n\r\nPanelChoosePlayers.propTypes = {\r\n    backward: PropTypes.func.isRequired,\r\n    forward: PropTypes.func.isRequired,\r\n    cancel: PropTypes.func.isRequired,\r\n    onUpdateParams: PropTypes.func.isRequired,\r\n    nbPowers: PropTypes.number.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {FancyBox} from \"../../components/fancyBox\";\r\nimport PropTypes from \"prop-types\";\r\nimport Octicon, {ArrowLeft} from \"@primer/octicons-react\";\r\n\r\nexport class PanelChoosePower extends React.Component {\r\n    render() {\r\n        this.props.powers.sort();\r\n        return (\r\n            <FancyBox title={'Choose your power'} onClose={this.props.cancel}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm btn-block inline\" onClick={() => {\r\n                            this.props.onUpdateParams({power_name: null});\r\n                            this.props.forward();\r\n                        }}>I just want to observe\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm btn-block inline\" onClick={() => {\r\n                            const powerName = this.props.powers[Math.floor(Math.random() * this.props.powers.length)];\r\n                            this.props.onUpdateParams({power_name: powerName});\r\n                            this.props.forward();\r\n                        }}>Choose randomly for me\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"d-flex flex-row justify-content-center my-2\">\r\n                            {(() => {\r\n                                const choice = [];\r\n                                for (let i = 0; i < this.props.powers.length; ++i) {\r\n                                    choice.push(\r\n                                        <button key={i} type=\"button\"\r\n                                                className={`btn btn-secondary btn-sm flex-grow-1 ${i === 0 ? '' : 'ml-sm-1'}`}\r\n                                                onClick={() => {\r\n                                                    this.props.onUpdateParams({power_name: this.props.powers[i]});\r\n                                                    this.props.forward();\r\n                                                }}>\r\n                                            {this.props.powers[i]}\r\n                                        </button>\r\n                                    );\r\n                                }\r\n                                return choice;\r\n                            })()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm px-3\"\r\n                                onClick={() => this.props.backward()}>\r\n                            <Octicon icon={ArrowLeft}/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </FancyBox>\r\n        );\r\n    }\r\n}\r\n\r\nPanelChoosePower.propTypes = {\r\n    backward: PropTypes.func.isRequired,\r\n    forward: PropTypes.func.isRequired,\r\n    cancel: PropTypes.func.isRequired,\r\n    onUpdateParams: PropTypes.func.isRequired,\r\n    powers: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {FancyBox} from \"../../components/fancyBox\";\r\nimport PropTypes from \"prop-types\";\r\nimport {UTILS} from \"../../../diplomacy/utils/utils\";\r\nimport Octicon, {ArrowLeft} from \"@primer/octicons-react\";\r\n\r\nconst DEADLINES = [\r\n    [0, '(no deadline)'],\r\n    [60, '1 min'],\r\n    [60 * 5, '5 min'],\r\n    [60 * 30, '30 min'],\r\n    [60 * 60 * 2, '2 hrs'],\r\n    [60 * 60 * 24, '24 hrs'],\r\n];\r\n\r\nexport class PanelChooseSettings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onCheckNoPress = this.onCheckNoPress.bind(this);\r\n        this.onSelectDeadline = this.onSelectDeadline.bind(this);\r\n        this.onSetRegistrationPassword = this.onSetRegistrationPassword.bind(this);\r\n        this.onSetGameID = this.onSetGameID.bind(this);\r\n    }\r\n\r\n    onCheckNoPress(event) {\r\n        this.props.onUpdateParams({no_press: event.target.checked});\r\n    }\r\n\r\n    onSelectDeadline(event) {\r\n        this.props.onUpdateParams({deadline: parseInt(event.target.value)});\r\n    }\r\n\r\n    onSetRegistrationPassword(event) {\r\n        this.props.onUpdateParams({registration_password: event.target.value});\r\n    }\r\n\r\n    onSetGameID(event) {\r\n        let gameID = event.target.value;\r\n        if (!gameID)\r\n            gameID = UTILS.createGameID(this.props.username);\r\n        this.props.onUpdateParams({game_id: gameID});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <FancyBox title={'Other settings'} onClose={this.props.cancel}>\r\n                <div>\r\n                    <form>\r\n                        <div className=\"form-group row align-items-center mb-2\">\r\n                            <label className=\"col-md col-form-label\" htmlFor=\"deadline\">Deadline</label>\r\n                            <div className=\"col-md\">\r\n                                <select id=\"deadline\" className=\"custom-select custom-select-sm\"\r\n                                        value={this.props.params.deadline}\r\n                                        onChange={this.onSelectDeadline}>\r\n                                    {DEADLINES.map((deadline, index) => (\r\n                                        <option key={index} value={deadline[0]}>{deadline[1]}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row mb-2\">\r\n                            <label className=\"col-md col-form-label\" htmlFor=\"registration-password\">Login\r\n                                password</label>\r\n                            <div className=\"col-md\">\r\n                                <input type=\"password\" className=\"form-control form-control-sm\"\r\n                                       id=\"registration-password\"\r\n                                       value={this.props.params.registration_password}\r\n                                       onChange={this.onSetRegistrationPassword} placeholder=\"(no password)\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row mb-2\">\r\n                            <label className=\"col-md col-form-label\" htmlFor=\"game-id\">Game ID</label>\r\n                            <div className=\"col-md\">\r\n                                <input type=\"text\" className=\"form-control form-control-sm\"\r\n                                       id=\"game-id\"\r\n                                       value={this.props.params.game_id}\r\n                                       onChange={this.onSetGameID}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"custom-control custom-checkbox mb-5\">\r\n                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"no-press\"\r\n                                   checked={this.props.params.no_press} onChange={this.onCheckNoPress}/>\r\n                            <label className=\"custom-control-label\" htmlFor=\"no-press\">No messages allowed</label>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm btn-block\"\r\n                                onClick={() => this.props.backward()}>\r\n                            <Octicon icon={ArrowLeft}/>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <button type=\"button\" className=\"btn btn-success btn-sm btn-block inline\"\r\n                                onClick={() => this.props.forward()}>\r\n                            <strong>create the game</strong>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </FancyBox>\r\n        );\r\n    }\r\n}\r\n\r\nPanelChooseSettings.propTypes = {\r\n    backward: PropTypes.func.isRequired,\r\n    forward: PropTypes.func.isRequired,\r\n    cancel: PropTypes.func.isRequired,\r\n    params: PropTypes.object.isRequired,\r\n    onUpdateParams: PropTypes.func.isRequired,\r\n    username: PropTypes.string.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Panels} from \"./panelList\";\r\nimport {PanelChooseMap} from \"./panelChooseMap\";\r\nimport {PanelChoosePlayers} from \"./panelChoosePlayers\";\r\nimport {PanelChoosePower} from \"./panelChoosePower\";\r\nimport {PanelChooseSettings} from \"./panelChooseSettings\";\r\nimport {Maps} from \"./mapList\";\r\nimport {UTILS} from \"../../../diplomacy/utils/utils\";\r\nimport './gameCreationWizard.css';\r\n\r\nexport class GameCreationWizard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            panel: Panels.CHOOSE_MAP,\r\n            game_id: UTILS.createGameID(this.props.username),\r\n            power_name: null,\r\n            n_controls: -1,\r\n            deadline: 0,\r\n            registration_password: '',\r\n\r\n            map: Maps[0],\r\n            no_press: false\r\n        };\r\n        this.backward = this.backward.bind(this);\r\n        this.forward = this.forward.bind(this);\r\n        this.updateParams = this.updateParams.bind(this);\r\n    }\r\n\r\n    updateParams(params) {\r\n        this.setState(params);\r\n    }\r\n\r\n    goToPanel(panelID) {\r\n        if (panelID < Panels.CHOOSE_MAP)\r\n            this.props.onCancel();\r\n        else if (panelID > Panels.CHOOSE_SETTINGS) {\r\n            const rules = ['POWER_CHOICE'];\r\n            if (this.state.no_press)\r\n                rules.push('NO_PRESS');\r\n            if (!this.state.deadline) {\r\n                rules.push('NO_DEADLINE');\r\n                rules.push('REAL_TIME');\r\n            }\r\n            this.props.onSubmit({\r\n                game_id: this.state.game_id,\r\n                map_name: this.state.map.name,\r\n                power_name: this.state.power_name,\r\n                n_controls: this.state.n_controls,\r\n                deadline: this.state.deadline,\r\n                registration_password: this.state.registration_password || null,\r\n                rules: rules\r\n            });\r\n        } else\r\n            this.setState({panel: panelID, registration_password: ''});\r\n    }\r\n\r\n    backward(step) {\r\n        this.goToPanel(this.state.panel - (step ? step : 1));\r\n    }\r\n\r\n    forward(step) {\r\n        this.goToPanel(this.state.panel + (step ? step : 1));\r\n    }\r\n\r\n    renderPanel() {\r\n        switch (this.state.panel) {\r\n            case Panels.CHOOSE_MAP:\r\n                return <PanelChooseMap forward={this.forward}\r\n                                       params={this.state}\r\n                                       onUpdateParams={this.updateParams}\r\n                                       cancel={this.props.onCancel}/>;\r\n            case Panels.CHOOSE_PLAYERS:\r\n                return <PanelChoosePlayers backward={this.backward}\r\n                                           forward={this.forward}\r\n                                           onUpdateParams={this.updateParams}\r\n                                           nbPowers={this.props.availableMaps[this.state.map.name].powers.length}\r\n                                           cancel={this.props.onCancel}/>;\r\n            case Panels.CHOOSE_POWER:\r\n                return <PanelChoosePower backward={this.backward}\r\n                                         forward={this.forward}\r\n                                         onUpdateParams={this.updateParams}\r\n                                         powers={this.props.availableMaps[this.state.map.name].powers}\r\n                                         cancel={this.props.onCancel}/>;\r\n            case Panels.CHOOSE_SETTINGS:\r\n                return <PanelChooseSettings backward={this.backward}\r\n                                            forward={this.forward}\r\n                                            onUpdateParams={this.updateParams}\r\n                                            username={this.props.username}\r\n                                            params={this.state}\r\n                                            cancel={this.props.onCancel}/>;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"game-creation-wizard\">{this.renderPanel()}</div>\r\n        );\r\n    }\r\n}\r\n\r\nGameCreationWizard.propTypes = {\r\n    onCancel: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    availableMaps: PropTypes.object.isRequired,\r\n    username: PropTypes.string.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport React from \"react\";\r\nimport {Tabs} from \"../components/tabs\";\r\nimport {Table} from \"../components/table\";\r\nimport {FindForm} from \"../forms/find_form\";\r\nimport {InlineGameView} from \"../utils/inline_game_view\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport {Navigation} from \"../components/navigation\";\r\nimport {PageContext} from \"../components/page_context\";\r\nimport {ContentGame} from \"./content_game\";\r\nimport PropTypes from 'prop-types';\r\nimport {Tab} from \"../components/tab\";\r\nimport {GameCreationWizard} from \"../wizards/gameCreation/gameCreationWizard\";\r\n\r\nconst TABLE_LOCAL_GAMES = {\r\n    game_id: ['Game ID', 0],\r\n    deadline: ['Deadline', 1],\r\n    rights: ['Rights', 2],\r\n    rules: ['Rules', 3],\r\n    players: ['Players/Expected', 4],\r\n    status: ['Status', 5],\r\n    phase: ['Phase', 6],\r\n    join: ['Join', 7],\r\n    actions: ['Actions', 8],\r\n};\r\n\r\nexport class ContentGames extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {tab: null};\r\n        this.changeTab = this.changeTab.bind(this);\r\n        this.onFind = this.onFind.bind(this);\r\n        this.onCreate = this.onCreate.bind(this);\r\n        this.wrapGameData = this.wrapGameData.bind(this);\r\n    }\r\n\r\n    getPage() {\r\n        return this.context;\r\n    }\r\n\r\n    onFind(form) {\r\n        for (let field of ['game_id', 'status', 'include_protected', 'for_omniscience'])\r\n            if (!form[field])\r\n                form[field] = null;\r\n        this.getPage().channel.listGames(form)\r\n            .then((data) => {\r\n                this.getPage().success('Found ' + data.length + ' data.');\r\n                this.getPage().addGamesFound(data);\r\n                this.getPage().loadGames();\r\n            })\r\n            .catch((error) => {\r\n                this.getPage().error('Error when looking for distant games: ' + error);\r\n            });\r\n    }\r\n\r\n    onCreate(form) {\r\n        let networkGame = null;\r\n        this.getPage().channel.createGame(form)\r\n            .then((game) => {\r\n                this.getPage().addToMyGames(game.local);\r\n                networkGame = game;\r\n                return networkGame.getAllPossibleOrders();\r\n            })\r\n            .then(allPossibleOrders => {\r\n                networkGame.local.setPossibleOrders(allPossibleOrders);\r\n                this.getPage().load(\r\n                    `game: ${networkGame.local.game_id}`,\r\n                    <ContentGame data={networkGame.local}/>,\r\n                    {success: 'Game created.'}\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                this.getPage().error('Error when creating a game: ' + error);\r\n            });\r\n    }\r\n\r\n    changeTab(tabIndex) {\r\n        this.setState({tab: tabIndex});\r\n    }\r\n\r\n    wrapGameData(gameData) {\r\n        return new InlineGameView(this.getPage(), gameData, this.getPage().availableMaps);\r\n    }\r\n\r\n    gameCreationButton() {\r\n        return (\r\n            <button type=\"button\"\r\n                    className=\"btn btn-danger btn-sm mx-0 mx-sm-4\"\r\n                    onClick={() => this.getPage().dialog(onClose => (\r\n                        <GameCreationWizard availableMaps={this.getPage().availableMaps}\r\n                                            onCancel={onClose}\r\n                                            username={this.getPage().channel.username}\r\n                                            onSubmit={(form) => {\r\n                                                onClose();\r\n                                                this.onCreate(form);\r\n                                            }}/>\r\n                    ))}>\r\n                <strong>create a game</strong>\r\n            </button>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const title = 'Games';\r\n        const page = this.getPage();\r\n        const navigation = [\r\n            ['load a game from disk', page.loadGameFromDisk],\r\n            ['logout', page.logout]\r\n        ];\r\n        const myGames = this.props.myGames;\r\n        const gamesFound = this.props.gamesFound;\r\n        myGames.sort((a, b) => b.timestamp_created - a.timestamp_created);\r\n        gamesFound.sort((a, b) => b.timestamp_created - a.timestamp_created);\r\n        const tab = this.state.tab ? this.state.tab : (myGames.length ? 'my-games' : 'find');\r\n        return (\r\n            <main>\r\n                <Helmet>\r\n                    <title>{title} | Diplomacy</title>\r\n                </Helmet>\r\n                <Navigation title={title} afterTitle={this.gameCreationButton()}\r\n                            username={page.channel.username} navigation={navigation}/>\r\n                <Tabs menu={['find', 'my-games']} titles={['Find', 'My Games']}\r\n                      onChange={this.changeTab} active={tab}>\r\n                    {tab === 'find' ? (\r\n                        <Tab id=\"tab-games-find\" display={true}>\r\n                            <FindForm onSubmit={this.onFind}/>\r\n                            <Table className={\"table table-striped\"} caption={\"Games\"} columns={TABLE_LOCAL_GAMES}\r\n                                   data={gamesFound} wrapper={this.wrapGameData}/>\r\n                        </Tab>\r\n                    ) : ''}\r\n                    {tab === 'my-games' ? (\r\n                        <Tab id={'tab-my-games'} display={true}>\r\n                            <Table className={\"table table-striped\"} caption={\"My games\"} columns={TABLE_LOCAL_GAMES}\r\n                                   data={myGames} wrapper={this.wrapGameData}/>\r\n                        </Tab>\r\n                    ) : ''}\r\n                </Tabs>\r\n            </main>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n}\r\n\r\nContentGames.contextType = PageContext;\r\nContentGames.propTypes = {\r\n    gamesFound: PropTypes.array.isRequired,\r\n    myGames: PropTypes.array.isRequired\r\n};\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\n/** Main class to use to create app GUI. **/\r\n\r\nimport React from \"react\";\r\nimport {ContentConnection} from \"./content_connection\";\r\nimport {UTILS} from \"../../diplomacy/utils/utils\";\r\nimport {Diplog} from \"../../diplomacy/utils/diplog\";\r\nimport {DipStorage} from \"../utils/dipStorage\";\r\nimport {PageContext} from \"../components/page_context\";\r\nimport {ContentGames} from \"./content_games\";\r\nimport {loadGameFromDisk} from \"../utils/load_game_from_disk\";\r\nimport {ContentGame} from \"./content_game\";\r\nimport {confirmAlert} from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nexport class Page extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.connection = null;\r\n        this.channel = null;\r\n        this.availableMaps = null;\r\n        this.state = {\r\n            // Page messages\r\n            error: null,\r\n            info: null,\r\n            success: null,\r\n            // Page content parameters\r\n            name: null,\r\n            body: null,\r\n            // Games.\r\n            games: {}, // Games found.\r\n            myGames: {}  // Games locally stored.\r\n        };\r\n        this.error = this.error.bind(this);\r\n        this.info = this.info.bind(this);\r\n        this.success = this.success.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.loadGameFromDisk = this.loadGameFromDisk.bind(this);\r\n        this._post_remove = this._post_remove.bind(this);\r\n        this._add_to_my_games = this._add_to_my_games.bind(this);\r\n        this._remove_from_my_games = this._remove_from_my_games.bind(this);\r\n        this._remove_from_games = this._remove_from_games.bind(this);\r\n        this.onReconnectionError = this.onReconnectionError.bind(this);\r\n    }\r\n\r\n    static wrapMessage(message) {\r\n        return message ? `(${UTILS.date()}) ${message}` : '';\r\n    }\r\n\r\n    static __sort_games(games) {\r\n        // Sort games with not-joined games first, else compare game ID.\r\n        games.sort((a, b) => (((a.role ? 1 : 0) - (b.role ? 1 : 0)) || a.game_id.localeCompare(b.game_id)));\r\n        return games;\r\n    }\r\n\r\n    static defaultPage() {\r\n        return <ContentConnection/>;\r\n    }\r\n\r\n    setState(state) {\r\n        return new Promise(resolve => super.setState(state, resolve));\r\n    }\r\n\r\n    onReconnectionError(error) {\r\n        this.__disconnect(error);\r\n    }\r\n\r\n    /**\r\n     * @callback OnClose\r\n     */\r\n\r\n    /**\r\n     * @callback DialogBuilder\r\n     * @param {OnClose} onClose\r\n     */\r\n\r\n    /**\r\n     * open a dialog box\r\n     * @param {DialogBuilder} builder - a callback to generate dialog GUI. Will be executed with a `onClose` callback\r\n     * parameter to call when dialog must be closed: `builder(onClose)`.\r\n     */\r\n    dialog(builder) {\r\n        confirmAlert({customUI: ({onClose}) => builder(onClose)});\r\n    }\r\n\r\n    //// Methods to load a page.\r\n\r\n    load(name, body, messages) {\r\n        const newState = {};\r\n        if (messages) {\r\n            for (let key of ['error', 'info', 'success'])\r\n                newState[key] = Page.wrapMessage(messages[key]);\r\n        }\r\n        Diplog.printMessages(newState);\r\n        newState.name = name;\r\n        newState.body = body;\r\n        return this.setState(newState);\r\n    }\r\n\r\n    loadGames(messages) {\r\n        return this.load(\r\n            'games',\r\n            <ContentGames myGames={this.getMyGames()} gamesFound={this.getGamesFound()}/>,\r\n            messages\r\n        );\r\n    }\r\n\r\n    loadGameFromDisk() {\r\n        return loadGameFromDisk()\r\n            .then((game) => this.load(\r\n                `game: ${game.game_id}`,\r\n                <ContentGame data={game}/>,\r\n                {success: `Game loaded from disk: ${game.game_id}`}\r\n            ))\r\n            .catch(this.error);\r\n    }\r\n\r\n    getName() {\r\n        return this.state.name;\r\n    }\r\n\r\n    //// Methods to sign out channel and go back to connection page.\r\n\r\n    __disconnect(error) {\r\n        // Clear local data and go back to connection page.\r\n        this.connection.close();\r\n        this.connection = null;\r\n        this.channel = null;\r\n        this.availableMaps = null;\r\n        const message = Page.wrapMessage(error ? `${error.toString()}` : `Disconnected from channel and server.`);\r\n        Diplog.success(message);\r\n        return this.setState({\r\n            error: error ? message : null,\r\n            info: null,\r\n            success: error ? null : message,\r\n            name: null,\r\n            body: null,\r\n            // When disconnected, remove all games previously loaded.\r\n            games: {},\r\n            myGames: {}\r\n        });\r\n    }\r\n\r\n    logout() {\r\n        // Disconnect channel and go back to connection page.\r\n        if (this.channel) {\r\n            return this.channel.logout()\r\n                .then(() => this.__disconnect())\r\n                .catch(error => this.error(`Error while disconnecting: ${error.toString()}.`));\r\n        } else {\r\n            return this.__disconnect();\r\n        }\r\n    }\r\n\r\n    //// Methods to be used to set page title and messages.\r\n\r\n    error(message) {\r\n        message = Page.wrapMessage(message);\r\n        Diplog.error(message);\r\n        return this.setState({error: message});\r\n    }\r\n\r\n    info(message) {\r\n        message = Page.wrapMessage(message);\r\n        Diplog.info(message);\r\n        return this.setState({info: message});\r\n    }\r\n\r\n    success(message) {\r\n        message = Page.wrapMessage(message);\r\n        Diplog.success(message);\r\n        return this.setState({success: message});\r\n    }\r\n\r\n    warn(message) {\r\n        return this.info(message);\r\n    }\r\n\r\n    //// Methods to manage games.\r\n\r\n    updateMyGames(gamesToAdd) {\r\n        // Update state myGames with given games. This method does not update local storage.\r\n        const myGames = Object.assign({}, this.state.myGames);\r\n        let gamesFound = null;\r\n        for (let gameToAdd of gamesToAdd) {\r\n            myGames[gameToAdd.game_id] = gameToAdd;\r\n            if (this.state.games.hasOwnProperty(gameToAdd.game_id)) {\r\n                if (!gamesFound)\r\n                    gamesFound = Object.assign({}, this.state.games);\r\n                gamesFound[gameToAdd.game_id] = gameToAdd;\r\n            }\r\n        }\r\n        if (!gamesFound)\r\n            gamesFound = this.state.games;\r\n        return this.setState({myGames: myGames, games: gamesFound});\r\n    }\r\n\r\n    getGame(gameID) {\r\n        if (this.state.myGames.hasOwnProperty(gameID))\r\n            return this.state.myGames[gameID];\r\n        return this.state.games[gameID];\r\n    }\r\n\r\n    getMyGames() {\r\n        return Page.__sort_games(Object.values(this.state.myGames));\r\n    }\r\n\r\n    getGamesFound() {\r\n        return Page.__sort_games(Object.values(this.state.games));\r\n    }\r\n\r\n    addGamesFound(gamesToAdd) {\r\n        const gamesFound = {};\r\n        for (let game of gamesToAdd) {\r\n            gamesFound[game.game_id] = (\r\n                this.state.myGames.hasOwnProperty(game.game_id) ?\r\n                    this.state.myGames[game.game_id] : game\r\n            );\r\n        }\r\n        return this.setState({games: gamesFound});\r\n    }\r\n\r\n    leaveGame(gameID) {\r\n        if (this.state.myGames.hasOwnProperty(gameID)) {\r\n            const game = this.state.myGames[gameID];\r\n            if (game.client) {\r\n                return game.client.leave()\r\n                    .then(() => this.disconnectGame(gameID))\r\n                    .then(() => this.loadGames({info: `Game ${gameID} left.`}))\r\n                    .catch(error => this.error(`Error when leaving game ${gameID}: ${error.toString()}`));\r\n            }\r\n        } else {\r\n            return this.loadGames({info: `No game to left.`});\r\n        }\r\n        return null;\r\n    }\r\n\r\n    _post_remove(gameID) {\r\n        return this.disconnectGame(gameID)\r\n            .then(() => {\r\n                const myGames = this._remove_from_my_games(gameID);\r\n                const games = this._remove_from_games(gameID);\r\n                return this.setState({games, myGames});\r\n            })\r\n            .then(() => this.loadGames({info: `Game ${gameID} deleted.`}));\r\n    }\r\n\r\n    removeGame(gameID) {\r\n        const game = this.getGame(gameID);\r\n        if (game) {\r\n            if (game.client) {\r\n                return game.client.remove()\r\n                    .then(() => this._post_remove(gameID))\r\n                    .catch(error => this.error(`Error when deleting game ${gameID}: ${error.toString()}`));\r\n            } else {\r\n                return this.channel.joinGame({game_id: gameID})\r\n                    .then(networkGame => networkGame.remove())\r\n                    .then(() => this._post_remove(gameID))\r\n                    .catch(error => this.error(`Error when deleting game after joining it (${gameID}): ${error.toString()}`));\r\n            }\r\n        }\r\n    }\r\n\r\n    disconnectGame(gameID) {\r\n        const game = this.getGame(gameID);\r\n        if (game) {\r\n            if (game.client) {\r\n                game.client.clearAllCallbacks();\r\n                game.client.callbacksBound = false;\r\n                if (game.client.queue)\r\n                    game.client.queue.append(null);\r\n            }\r\n            return this.channel.getGamesInfo({games: [gameID]})\r\n                .then(gamesInfo => this.updateMyGames(gamesInfo))\r\n                .catch(error => this.error(`Error while leaving game ${gameID}: ${error.toString()}`));\r\n        }\r\n        return null;\r\n    }\r\n\r\n    _add_to_my_games(game) {\r\n        const myGames = Object.assign({}, this.state.myGames);\r\n        const gamesFound = this.state.games.hasOwnProperty(game.game_id) ? Object.assign({}, this.state.games) : this.state.games;\r\n        myGames[game.game_id] = game;\r\n        if (gamesFound.hasOwnProperty(game.game_id))\r\n            gamesFound[game.game_id] = game;\r\n        return {myGames: myGames, games: gamesFound};\r\n    }\r\n\r\n    _remove_from_my_games(gameID) {\r\n        if (this.state.myGames.hasOwnProperty(gameID)) {\r\n            const games = Object.assign({}, this.state.myGames);\r\n            delete games[gameID];\r\n            DipStorage.removeUserGame(this.channel.username, gameID);\r\n            return games;\r\n        } else {\r\n            return this.state.myGames;\r\n        }\r\n    }\r\n\r\n    _remove_from_games(gameID) {\r\n        if (this.state.games.hasOwnProperty(gameID)) {\r\n            const games = Object.assign({}, this.state.games);\r\n            delete games[gameID];\r\n            return games;\r\n        } else {\r\n            return this.state.games;\r\n        }\r\n    }\r\n\r\n    addToMyGames(game) {\r\n        // Update state myGames with given game **and** update local storage.\r\n        DipStorage.addUserGame(this.channel.username, game.game_id);\r\n        return this.setState(this._add_to_my_games(game)).then(() => this.loadGames());\r\n    }\r\n\r\n    removeFromMyGames(gameID) {\r\n        const myGames = this._remove_from_my_games(gameID);\r\n        return this.setState({myGames}).then(() => this.loadGames());\r\n    }\r\n\r\n    hasMyGame(gameID) {\r\n        return this.state.myGames.hasOwnProperty(gameID);\r\n    }\r\n\r\n    //// Render method.\r\n\r\n    render() {\r\n        const successMessage = this.state.success || '-';\r\n        const infoMessage = this.state.info || '-';\r\n        const errorMessage = this.state.error || '-';\r\n        return (\r\n            <PageContext.Provider value={this}>\r\n                <div className=\"page container-fluid\" id={this.state.contentName}>\r\n                    <div className={'top-msg row'}>\r\n                        <div title={successMessage !== '-' ? successMessage : ''}\r\n                             className={'col-sm-4 msg success ' + (this.state.success ? 'with-msg' : 'no-msg')}\r\n                             onClick={() => this.success()}>\r\n                            {successMessage}\r\n                        </div>\r\n                        <div title={infoMessage !== '-' ? infoMessage : ''}\r\n                             className={'col-sm-4 msg info ' + (this.state.info ? 'with-msg' : 'no-msg')}\r\n                             onClick={() => this.info()}>\r\n                            {infoMessage}\r\n                        </div>\r\n                        <div title={errorMessage !== '-' ? errorMessage : ''}\r\n                             className={'col-sm-4 msg error ' + (this.state.error ? 'with-msg' : 'no-msg')}\r\n                             onClick={() => this.error()}>\r\n                            {errorMessage}\r\n                        </div>\r\n                    </div>\r\n                    {this.state.body || Page.defaultPage()}\r\n                </div>\r\n            </PageContext.Provider>\r\n        );\r\n    }\r\n}\r\n","// ==============================================================================\r\n// Copyright (C) 2019 - Philip Paquette, Steven Bocco\r\n//\r\n//  This program is free software: you can redistribute it and/or modify it under\r\n//  the terms of the GNU Affero General Public License as published by the Free\r\n//  Software Foundation, either version 3 of the License, or (at your option) any\r\n//  later version.\r\n//\r\n//  This program is distributed in the hope that it will be useful, but WITHOUT\r\n//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n//  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\n//  details.\r\n//\r\n//  You should have received a copy of the GNU Affero General Public License along\r\n//  with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n// ==============================================================================\r\nimport $ from \"jquery\";\r\nimport {STRINGS} from \"../../diplomacy/utils/strings\";\r\nimport {Game} from \"../../diplomacy/engine/game\";\r\n\r\nexport function loadGameFromDisk() {\r\n    return new Promise((onLoad, onError) => {\r\n        const input = $(document.createElement('input'));\r\n        input.attr(\"type\", \"file\");\r\n        input.trigger('click');\r\n        input.change(event => {\r\n            const file = event.target.files[0];\r\n            if (!file.name.match(/\\.json$/i)) {\r\n                onError(`Invalid JSON filename ${file.name}`);\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                const savedData = JSON.parse(reader.result);\r\n                const gameObject = {};\r\n                gameObject.game_id = `(local) ${savedData.id}`;\r\n                gameObject.map_name = savedData.map;\r\n                gameObject.rules = savedData.rules;\r\n                gameObject.state_history = {};\r\n                gameObject.message_history = {};\r\n                gameObject.order_history = {};\r\n                gameObject.result_history = {};\r\n\r\n                // Load all saved phases (expect the latest one) to history fields.\r\n                for (let i = 0; i < savedData.phases.length - 1; ++i) {\r\n                    const savedPhase = savedData.phases[i];\r\n                    const gameState = savedPhase.state;\r\n                    const phaseOrders = savedPhase.orders || {};\r\n                    const phaseResults = savedPhase.results || {};\r\n                    const phaseMessages = {};\r\n                    if (savedPhase.messages) {\r\n                        for (let message of savedPhase.messages) {\r\n                            phaseMessages[message.time_sent] = message;\r\n                        }\r\n                    }\r\n                    if (!gameState.name)\r\n                        gameState.name = savedPhase.name;\r\n                    gameObject.state_history[gameState.name] = gameState;\r\n                    gameObject.message_history[gameState.name] = phaseMessages;\r\n                    gameObject.order_history[gameState.name] = phaseOrders;\r\n                    gameObject.result_history[gameState.name] = phaseResults;\r\n                }\r\n\r\n                // Load latest phase separately and use it later to define the current game phase.\r\n                const latestPhase = savedData.phases[savedData.phases.length - 1];\r\n                const latestGameState = latestPhase.state;\r\n                const latestPhaseOrders = latestPhase.orders || {};\r\n                const latestPhaseResults = latestPhase.results || {};\r\n                const latestPhaseMessages = {};\r\n                if (latestPhase.messages) {\r\n                    for (let message of latestPhase.messages) {\r\n                        latestPhaseMessages[message.time_sent] = message;\r\n                    }\r\n                }\r\n                if (!latestGameState.name)\r\n                    latestGameState.name = latestPhase.name;\r\n                // TODO: NB: What if latest phase in loaded JSON contains order results? Not sure if it is well handled.\r\n                gameObject.result_history[latestGameState.name] = latestPhaseResults;\r\n\r\n                gameObject.messages = [];\r\n                gameObject.role = STRINGS.OBSERVER_TYPE;\r\n                gameObject.status = STRINGS.COMPLETED;\r\n                gameObject.timestamp_created = 0;\r\n                gameObject.deadline = 0;\r\n                gameObject.n_controls = 0;\r\n                gameObject.registration_password = '';\r\n                const game = new Game(gameObject);\r\n\r\n                // Set game current phase and state using latest phase found in JSON file.\r\n                game.setPhaseData({\r\n                    name: latestGameState.name,\r\n                    state: latestGameState,\r\n                    orders: latestPhaseOrders,\r\n                    messages: latestPhaseMessages\r\n                });\r\n                onLoad(game);\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n    });\r\n}\r\n","import React from 'react';\n// import { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport 'popper.js';\nimport 'bootstrap/dist/js/bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n// import App from './App';\nimport {Page} from \"./gui/pages/page\";\n\n\n// const root = ReactDOM.unstable_createRoot(document.getElementById('root'));\n// root.render(\n// \t<BrowserRouter>\n// \t\t<App />\n// \t</BrowserRouter>\n// );\n\n// ReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));\n\nReactDOM.render(<Page />, document.getElementById('root'));\n"],"sourceRoot":""}